{"version":3,"file":"find.js","sourceRoot":"","sources":["../../src/utils/find.ts"],"names":[],"mappings":";AAAA,qBAA8B,MAC9B,CAAC,CADmC;AACpC,IAAO,OAAO,WAAW,aAAa,CAAC,CAAA;AACvC,mBAAuB,aACvB,CAAC,CADmC;AACpC,uBAA4B,UAE5B,CAAC,CAFqC;AAEtC,qBAA6B,GAAW;IACtC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAO,CAAC,CAAA;AAC1C,CAAC;AAFe,mBAAW,cAE1B,CAAA;AAED,wBAAgC,GAAW;IACzC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,oBAAW,CAAC,CAAA;AACjC,CAAC;AAFe,sBAAc,iBAE7B,CAAA;AAED,gBAAwB,GAAW,EAAE,QAAgB,EAAE,IAAU;IAAV,oBAAU,GAAV,UAAU;IAC/D,IAAM,IAAI,GAAG,WAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;IAEhC,MAAM,CAAC,WAAM,CAAC,IAAI,CAAC;SAChB,IAAI,CAAC,UAAU,MAAM;QACpB,MAAM,CAAC,MAAM,GAAG,IAAI,GAAG,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;IAC1D,CAAC,CAAC,CAAA;AACN,CAAC;AAPe,cAAM,SAOrB,CAAA;AAED,sBAAuB,GAAW,EAAE,QAAgB,EAAE,IAAY;IAChE,IAAM,SAAS,GAAG,cAAO,CAAC,GAAG,CAAC,CAAA;IAE9B,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAO,IAAI,KAAK,CAAC,sBAAmB,QAAQ,kBAAW,IAAI,OAAG,CAAC,CAAC,CAAA;IACvF,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;AAC1C,CAAC","sourcesContent":["import { join, dirname } from 'path'\nimport Promise = require('any-promise')\nimport { isFile } from '../utils/fs'\nimport { CONFIG_FILE } from './config'\n\nexport function findProject (dir: string): Promise<string> {\n  return findConfigFile(dir).then(dirname)\n}\n\nexport function findConfigFile (dir: string): Promise<string> {\n  return findUp(dir, CONFIG_FILE)\n}\n\nexport function findUp (dir: string, filename: string, from = dir): Promise<string> {\n  const path = join(dir, filename)\n\n  return isFile(path)\n    .then(function (exists) {\n      return exists ? path : findUpParent(dir, filename, from)\n    })\n}\n\nfunction findUpParent (dir: string, filename: string, from: string): Promise<string | void> {\n  const parentDir = dirname(dir)\n\n  if (dir === parentDir) {\n    return Promise.reject<void>(new Error(`Unable to find \"${filename}\" from \"${from}\"`))\n  }\n\n  return findUp(parentDir, filename, from)\n}\n"]}