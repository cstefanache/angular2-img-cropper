{"version":3,"file":"list.js","sourceRoot":"","sources":["../src/list.ts"],"names":[],"mappings":";AAAA,uBAA6B,QAC7B,CAAC,CADoC;AAGrC,6BAAwC,oBAExC,CAAC,CAF2D;AAW5D,cAAsB,OAAoB;IAChC,qBAAG,CAAY;IACvB,IAAM,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,CAAA;IAC/B,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,IAAI,qBAAY,EAAE,CAAA;IAGrD,MAAM,CAAC,sCAAuB,CAAC,EAAE,QAAG,EAAE,MAAM,EAAE,IAAI,EAAE,QAAG,EAAE,gBAAO,EAAE,CAAC,CAAA;AACrE,CAAC;AAPe,YAAI,OAOnB,CAAA","sourcesContent":["import { EventEmitter } from 'events'\nimport Promise = require('any-promise')\nimport { Emitter, DependencyTree } from './interfaces'\nimport { resolveTypeDependencies } from './lib/dependencies'\n\nexport interface ListOptions {\n  cwd: string\n  production?: boolean\n  emitter?: Emitter\n}\n\n/**\n * Generate a dependency tree of the project.\n */\nexport function list (options: ListOptions): Promise<DependencyTree> {\n  const { cwd } = options\n  const dev = !options.production\n  const emitter = options.emitter || new EventEmitter()\n\n  // TODO: Make this list locally.\n  return resolveTypeDependencies({ cwd, global: true, dev, emitter })\n}\n"]}