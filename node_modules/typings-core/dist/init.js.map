{"version":3,"file":"init.js","sourceRoot":"","sources":["../src/init.ts"],"names":[],"mappings":"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","sourcesContent":["import Promise = require('any-promise')\nimport extend = require('xtend')\nimport { join, basename } from 'path'\nimport { ConfigJson } from './interfaces'\nimport { writeJson, isFile, readJson } from './utils/fs'\nimport { CONFIG_FILE } from './utils/config'\n\nconst TSD_JSON_FILE = 'tsd.json'\nconst DEFINITELYTYPED_REPO = 'DefinitelyTyped/DefinitelyTyped'\nconst OLD_DEFINITELYTYPED_REPO = 'borisyankov/DefinitelyTyped'\n\n/**\n * Options for initializing a configuration.\n */\nexport interface InitOptions {\n  cwd: string\n  name?: string\n  main?: string\n  version?: string\n  upgrade?: boolean\n}\n\n/**\n * The default configuration file to initialize.\n */\nconst DEFAULT_CONFIG: ConfigJson = {\n  dependencies: {}\n}\n\n/**\n * The interface for `tsd.json`.\n */\ninterface TsdJson {\n  version?: string\n  repo?: string\n  ref?: string\n  path?: string\n  bundle?: string\n  githubHost?: string\n  installed?: {\n    [path: string]: {\n      commit: string\n    }\n  }\n}\n\n/**\n * The files to check for existing names when naming a package.\n */\nconst PACKAGE_FILES: string[] = [\n  'package.json',\n  'bower.json'\n]\n\n/**\n * Update an old `tsd.json` format to the new format.\n */\nfunction upgradeTsdJson (tsdJson: TsdJson, config?: ConfigJson): ConfigJson {\n  const typingsJson = extend(config)\n  let repo = tsdJson.repo || DEFINITELYTYPED_REPO\n\n  // Rewrite the old repo name which probably hasn't been updated in `tsd.json`.\n  if (repo === OLD_DEFINITELYTYPED_REPO) {\n    repo = DEFINITELYTYPED_REPO\n  }\n\n  // Copy all installed modules to global dependencies.\n  if (tsdJson.installed) {\n    typingsJson.globalDependencies = {}\n\n    Object.keys(tsdJson.installed).forEach(function (path) {\n      const dependency = tsdJson.installed[path]\n      const name = basename(path, '.d.ts')\n      const location = `github:${repo}/${path}#${dependency.commit}`\n\n      typingsJson.globalDependencies[name] = location\n    })\n  }\n\n  return typingsJson\n}\n\n/**\n * Upgrade from `tsd.json`.\n */\nfunction upgrade (options: InitOptions, config?: ConfigJson) {\n  return readJson(join(options.cwd, TSD_JSON_FILE)).then(tsdJson => upgradeTsdJson(tsdJson, config))\n}\n\n/**\n * Make a smart guess of the project name from other config files.\n */\nfunction getProjectName (options: InitOptions): Promise<string> {\n  if (options.name) {\n    return Promise.resolve(options.name)\n  }\n\n  return PACKAGE_FILES.reduce(\n    function (promise, packageFileName) {\n      return promise.then(function (name) {\n        if (name != null) {\n          return name\n        }\n\n        return readJson(join(options.cwd, packageFileName))\n          .then(\n            (packageJson) => packageJson.name,\n            () => undefined\n          )\n      })\n    },\n    Promise.resolve<string>(undefined)\n  )\n}\n\n/**\n * Initialize a configuration file here.\n */\nexport function init (options: InitOptions) {\n  const path = join(options.cwd, CONFIG_FILE)\n  const { main, version } = options\n\n  return isFile(path)\n    .then<ConfigJson>(exists => {\n      if (exists) {\n        return Promise.reject(new TypeError(`A ${CONFIG_FILE} file already exists`))\n      }\n    })\n    .then(() => getProjectName(options))\n    .then(name => {\n      if (options.upgrade) {\n        return upgrade(options, { name, main, version })\n      }\n\n      return extend({ name, main, version }, DEFAULT_CONFIG)\n    })\n    .then(function (config) {\n      return writeJson(path, config, 2)\n    })\n}\n"]}