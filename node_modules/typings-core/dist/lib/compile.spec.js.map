{"version":3,"file":"compile.spec.js","sourceRoot":"","sources":["../../src/lib/compile.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import test = require('blue-tape')\nimport nock = require('nock')\nimport { join } from 'path'\nimport { EventEmitter } from 'events'\nimport { compile } from './compile'\nimport { DependencyTree } from '../interfaces'\nimport { CONFIG_FILE } from '../utils/config'\nimport { resolveNpmDependencies } from './dependencies'\n\nconst FIXTURES_DIR = join(__dirname, '__test__/fixtures')\n\ntest('compile', t => {\n  t.test('fixtures', t => {\n    t.test('compile a normal definition', t => {\n      const FIXTURE_DIR = join(FIXTURES_DIR, 'compile')\n\n      const root: DependencyTree = {\n        src: join(FIXTURE_DIR, CONFIG_FILE),\n        main: 'root',\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        browser: {\n          'b/b': 'browser'\n        },\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const a: DependencyTree = {\n        src: join(FIXTURE_DIR, `a/${CONFIG_FILE}`),\n        main: undefined,\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        typings: 'typed.d.ts',\n        browserTypings: 'typed.browser.d.ts',\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const b: DependencyTree = {\n        src: join(FIXTURE_DIR, 'bower.json'),\n        main: undefined,\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        typings: 'typings/b.d.ts',\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const browser: DependencyTree = {\n        src: join(FIXTURE_DIR, 'package.json'),\n        main: undefined,\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        typings: 'browser.d.ts',\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const dep: DependencyTree = {\n        src: join(FIXTURE_DIR, `dep/${CONFIG_FILE}`),\n        main: 'dep/main.d.ts',\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      ;(root as any).dependencies.a = a\n      ;(root as any).dependencies['b/b'] = b\n      ;(root as any).dependencies.browser = browser\n      ;(a as any).dependencies.dep = dep\n\n      const emitter = new EventEmitter()\n\n      return compile(root, ['main', 'browser'], { name: 'root', cwd: __dirname, global: false, meta: true, emitter })\n        .then((out) => {\n          t.equal(out.results.main, [\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/dep/path.d.ts`,\n            'declare module \\'~root~a~dep/path\\' {',\n            'export const isDep: boolean',\n            '}',\n            '',\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/a/typed.d.ts`,\n            'declare module \\'~root~a\\' {',\n            'import { isDep } from \\'~root~a~dep/path\\'',\n            '',\n            'export interface ITest {',\n            '  foo: string',\n            '  bar: boolean',\n            '}',\n            '',\n            'export default function (): ITest',\n            '}',\n            '',\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/typings/b.d.ts`,\n            'declare module \\'~root~b/b\\' {',\n            'export const foo: number',\n            '}',\n            '',\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/root.import.d.ts`,\n            'declare module \\'~root/root.import\\' {',\n            'export const test: string',\n            '}',\n            'declare module \\'root/root.import\\' {',\n            'export * from \\'~root/root.import\\';',\n            '}',\n            '',\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/root.d.ts`,\n            'declare module \\'~root/root\\' {',\n            'import a from \\'~root~a\\'',\n            'import b = require(\\'~root~b/b\\')',\n            'export * from \\'~root/root.import\\'',\n            'export default a',\n            '}',\n            'declare module \\'root/root\\' {',\n            'export * from \\'~root/root\\';',\n            'export { default } from \\'~root/root\\';',\n            '}',\n            'declare module \\'root\\' {',\n            'export * from \\'~root/root\\';',\n            'export { default } from \\'~root/root\\';',\n            '}',\n            ''\n          ].join('\\n'))\n\n          t.equal(out.results.browser, [\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/a/typed.browser.d.ts`,\n            'declare module \\'~root~a\\' {',\n            'export function browser (): boolean',\n            '}',\n            '',\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/browser.d.ts`,\n            'declare module \\'~root~browser\\' {',\n            'export const bar: boolean',\n            '}',\n            '',\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/root.import.d.ts`,\n            'declare module \\'~root/root.import\\' {',\n            'export const test: string',\n            '}',\n            'declare module \\'root/root.import\\' {',\n            'export * from \\'~root/root.import\\';',\n            '}',\n            '',\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile/root.d.ts`,\n            'declare module \\'~root/root\\' {',\n            'import a from \\'~root~a\\'',\n            'import b = require(\\'~root~browser\\')',\n            'export * from \\'~root/root.import\\'',\n            'export default a',\n            '}',\n            'declare module \\'root/root\\' {',\n            'export * from \\'~root/root\\';',\n            'export { default } from \\'~root/root\\';',\n            '}',\n            'declare module \\'root\\' {',\n            'export * from \\'~root/root\\';',\n            'export { default } from \\'~root/root\\';',\n            '}',\n            ''\n          ].join('\\n'))\n        })\n    })\n\n    t.test('compile export equals', t => {\n      const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-export-equals')\n\n      const file: DependencyTree = {\n        src: join(FIXTURE_DIR, CONFIG_FILE),\n        main: 'file.d.ts',\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const emitter = new EventEmitter()\n\n      return compile(\n        file,\n        ['main', 'browser'],\n        { name: 'foobar', cwd: __dirname, global: false, meta: false, emitter }\n      )\n        .then(out => {\n          t.equal(out.results.main, [\n            'declare module \\'foobar\\' {',\n            'function foo (value: string): foo.Bar;',\n            '',\n            'module foo {',\n            '  export interface Bar {',\n            '    (message: any, ...args: any[]): void;',\n            '    enabled: boolean;',\n            '    namespace: string;',\n            '  }',\n            '}',\n            '',\n            'export = foo;',\n            '}',\n            ''\n          ].join('\\n'))\n\n          t.equal(out.results.main, out.results.browser)\n        })\n    })\n\n    t.test('compile export default', t => {\n      const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-export-default')\n\n      const file: DependencyTree = {\n        src: join(FIXTURE_DIR, CONFIG_FILE),\n        main: 'index.d.ts',\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const emitter = new EventEmitter()\n\n      return compile(\n        file,\n        ['main'],\n        { name: 'test', cwd: __dirname, global: false, meta: false, emitter }\n      )\n        .then(out => {\n          t.equal(out.results.main, [\n            'declare module \\'test\\' {',\n            'const foo: string;',\n            '',\n            'export default foo;',\n            '}',\n            ''\n          ].join('\\n'))\n        })\n    })\n\n    t.test('compile duplicate files from different import contexts', t => {\n      const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-dep-dupe')\n\n      const root: DependencyTree = {\n        src: join(FIXTURE_DIR, CONFIG_FILE),\n        main: 'index.d.ts',\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const foo: DependencyTree = {\n        src: join(FIXTURE_DIR, 'foo', CONFIG_FILE),\n        main: 'index.d.ts',\n        parent: root,\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      ;(root as any).dependencies.foo = foo\n\n      const emitter = new EventEmitter()\n\n      return compile(root, ['main'], { name: 'test', cwd: __dirname, global: false, meta: false, emitter })\n        .then(out => {\n          t.equal(out.results.main, [\n            'declare module \\'~test~foo/x\\' {',\n            'export const wow: boolean',\n            '}',\n            '',\n            'declare module \\'~test~foo/index\\' {',\n            'export * from \\'~test~foo/x\\'',\n            '}',\n            'declare module \\'~test~foo\\' {',\n            'export * from \\'~test~foo/index\\';',\n            '}',\n            '',\n            'declare module \\'test\\' {',\n            'import * as x from \\'~test~foo/x\\'',\n            'export * from \\'~test~foo\\'',\n            '}',\n            ''\n          ].join('\\n'))\n        })\n    })\n\n    t.test('compile module augmentation', t => {\n      const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-module-augmentation')\n\n      const file: DependencyTree = {\n        src: join(FIXTURE_DIR, CONFIG_FILE),\n        main: 'index.d.ts',\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const emitter = new EventEmitter()\n\n      return compile(file, ['main'], { name: 'test', cwd: __dirname, global: false, meta: false, emitter })\n        .then(out => {\n          t.equal(out.results.main, [\n            'declare module \\'~test/import\\' {',\n            'function main (): boolean;',\n            '',\n            'export { main }',\n            '}',\n            'declare module \\'test/import\\' {',\n            'export * from \\'~test/import\\';',\n            '}',\n            '',\n            'declare module \\'~test/index\\' {',\n            'import * as imported from \\'~test/import\\'',\n            '',\n            'module \\'~test/import\\' {',\n            '  namespace main {',\n            '    export function augmented (): boolean;',\n            '  }',\n            '}',\n            '',\n            'export { imported }',\n            '}',\n            'declare module \\'test/index\\' {',\n            'export * from \\'~test/index\\';',\n            '}',\n            'declare module \\'test\\' {',\n            'export * from \\'~test/index\\';',\n            '}',\n            ''\n          ].join('\\n'))\n        })\n    })\n\n    t.test('compile a global definition', t => {\n      const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-global')\n\n      const node: DependencyTree = {\n        src: __filename,\n        raw: undefined,\n        postmessage: undefined,\n        global: true,\n        typings: join(FIXTURE_DIR, 'node.d.ts'),\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const fs: DependencyTree = {\n        src: join(FIXTURE_DIR, 'fs.d.ts'),\n        main: undefined,\n        raw: undefined,\n        postmessage: undefined,\n        global: false,\n        typings: join(FIXTURE_DIR, 'fs.d.ts'),\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      ;(node as any).dependencies.fs = fs\n\n      const emitter = new EventEmitter()\n\n      return compile(node, ['main'], { name: 'name', cwd: __dirname, global: true, meta: false, emitter })\n        .then(out => {\n          t.equal(out.results.main, [\n            'declare module \\'fs\\' {',\n            'export function readFileSync (path: string, encoding: string): string',\n            'export function readFileSync (path: string): Buffer',\n            '}',\n            '',\n            'declare var __dirname: string',\n            ''\n          ].join('\\n'))\n        })\n    })\n\n    t.test('compile inline global definitions', t => {\n      const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-inline-global')\n      const typings = join(FIXTURE_DIR, 'node.d.ts')\n\n      const node: DependencyTree = {\n        src: __filename,\n        raw: undefined,\n        postmessage: undefined,\n        global: true,\n        typings,\n        dependencies: {},\n        devDependencies: {},\n        peerDependencies: {},\n        globalDependencies: {},\n        globalDevDependencies: {}\n      }\n\n      const emitter = new EventEmitter()\n\n      return compile(node, ['main', 'browser'], { name: 'name', cwd: __dirname, global: true, meta: true, emitter })\n        .then(out => {\n          const contents = [\n            `// Generated by typings`,\n            `// Source: __test__/fixtures/compile-inline-global/node.d.ts`,\n            'declare const require: (module: string) => any;',\n            '',\n            'declare module \"events\" {',\n            '\\texport const test: boolean;',\n            '}',\n            '',\n            'declare module \"fs\" {',\n            '\\timport * as events from \"events\";',\n            '}',\n            ''\n          ].join('\\n')\n\n          t.equal(out.results.main, contents)\n          t.equal(out.results.main, out.results.browser)\n        })\n    })\n  })\n\n  t.test('missing error', t => {\n    const node: DependencyTree = {\n      src: 'http://example.com/typings/typings.json',\n      raw: undefined,\n      postmessage: undefined,\n      global: false,\n      typings: 'http://example.com/typings/index.d.ts',\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    t.plan(1)\n\n    return compile(node, ['main'], { name: 'test', cwd: __dirname, global: false, meta: false, emitter })\n      .catch(function (result) {\n        t.equal(\n          result.message,\n          'Unable to read typings for \"test\". You should check the entry paths in \"typings.json\" are up to date'\n        )\n      })\n  })\n\n  t.test('global flag compile error', t => {\n    const node: DependencyTree = {\n      src: 'http://example.com/typings.json',\n      raw: undefined,\n      postmessage: undefined,\n      global: true,\n      typings: 'http://example.com/index.d.ts',\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    t.plan(1)\n\n    return compile(node, ['main'], { name: 'name', cwd: __dirname, global: false, meta: false, emitter })\n      .catch(function (result) {\n        t.equal(\n          result.message,\n          'Unable to compile \"name\", the typings are meant to be installed as global ' +\n          'but attempted to be compiled as an external module'\n        )\n      })\n  })\n\n  t.test('global compile error', t => {\n    const node: DependencyTree = {\n      src: join(__dirname, '__test__/fixtures/compile-global/node.d.ts'),\n      raw: undefined,\n      postmessage: undefined,\n      global: false,\n      main: join(__dirname, '__test__/fixtures/compile-global/node.d.ts'),\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    t.plan(1)\n\n    return compile(node, ['main'], { name: 'test', cwd: __dirname, global: false, meta: false, emitter })\n      .catch(function (result) {\n        t.equal(\n          result.message,\n          'Attempted to compile \"test\" as an external module, ' +\n          'but it looks like a global module. ' +\n          'You\\'ll need to enable the global option to continue.'\n        )\n      })\n  })\n\n  t.test('external compile error', t => {\n    const node: DependencyTree = {\n      src: join(__dirname, '__test__/fixtures/compile/root.d.ts'),\n      raw: undefined,\n      postmessage: undefined,\n      global: true,\n      main: join(__dirname, '__test__/fixtures/compile/root.d.ts'),\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    t.plan(1)\n\n    return compile(node, ['main'], { name: 'test', cwd: __dirname, global: true, meta: false, emitter })\n      .catch(function (result) {\n        t.equal(\n          result.message,\n          'Attempted to compile \"test\" as a global module, ' +\n          'but it looks like an external module. ' +\n          'You\\'ll need to remove the global option to continue.'\n        )\n      })\n  })\n\n  t.test('no main or typings error', t => {\n    const FIXTURE_DIR = join(FIXTURES_DIR, 'main-resolve-error')\n\n    const main: DependencyTree = {\n      src: join(FIXTURE_DIR, 'package.json'),\n      raw: undefined,\n      postmessage: undefined,\n      global: false,\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    t.plan(1)\n\n    return compile(main, ['main'], { name: 'main', cwd: __dirname, global: false, meta: false, emitter })\n      .catch(function (error) {\n        t.ok(/^Unable to read typings for \"main\"/.test(error.message))\n      })\n  })\n\n  t.test('no module dts file error', t => {\n    const FIXTURE_DIR = join(FIXTURES_DIR, 'node-resolve-error')\n\n    const main: DependencyTree = {\n      src: join(FIXTURE_DIR, 'package.json'),\n      main: 'index.js',\n      raw: undefined,\n      postmessage: undefined,\n      global: false,\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const dependency: DependencyTree = {\n      main: 'index.js',\n      raw: undefined,\n      postmessage: undefined,\n      global: false,\n      src: join(FIXTURE_DIR, 'node_modules/test/package.json'),\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    ;(main as any).dependencies.test = dependency\n\n    t.plan(1)\n\n    return compile(main, ['main'], { name: 'main', cwd: __dirname, global: false, meta: false, emitter })\n      .catch(function (error) {\n        t.ok(/^Unable to read typings for \"test\"/.test(error.message))\n      })\n  })\n\n  t.test('override dependency with local file', t => {\n    const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-module-file-override')\n    const emitter = new EventEmitter()\n\n    return resolveNpmDependencies({ cwd: FIXTURE_DIR, dev: false, emitter })\n      .then(tree => {\n        return compile(tree, ['browser'], { name: 'main', cwd: __dirname, global: false, meta: false, emitter })\n      })\n      .then(out => {\n        t.equal(out.results.browser, [\n          'declare module \\'~main/override\\' {',\n          'function test (): string;',\n          '',\n          'export = test;',\n          '}',\n          'declare module \\'main/override\\' {',\n          'import main = require(\\'~main/override\\');',\n          'export = main;',\n          '}',\n          '',\n          'declare module \\'main\\' {',\n          'import * as foo from \\'~main/override\\'',\n          '',\n          'export = foo',\n          '}',\n          ''\n        ].join('\\n'))\n      })\n  })\n\n  t.test('resolve and compile local file override with dependency', t => {\n    const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-file-module-override')\n    const emitter = new EventEmitter()\n\n    return resolveNpmDependencies({ cwd: FIXTURE_DIR, dev: false, emitter })\n      .then(tree => {\n        return compile(\n          tree,\n          ['main', 'browser'],\n          { name: 'main', cwd: __dirname, global: false, meta: false, emitter }\n        )\n      })\n      .then(out => {\n        t.equal(out.results.main, [\n          'declare module \\'~main/imported\\' {',\n          'export function isNotDep (): boolean;',\n          '}',\n          'declare module \\'main/imported\\' {',\n          'export * from \\'~main/imported\\';',\n          '}',\n          '',\n          'declare module \\'~main/index\\' {',\n          'export * from \\'~main/imported\\'',\n          '}',\n          'declare module \\'main/index\\' {',\n          'export * from \\'~main/index\\';',\n          '}',\n          'declare module \\'main\\' {',\n          'export * from \\'~main/index\\';',\n          '}',\n          ''\n        ].join('\\n'))\n\n        t.equal(out.results.browser, [\n          'declare module \\'~main~dep\\' {',\n          'export function isDep (): boolean;',\n          '}',\n          '',\n          'declare module \\'~main/index\\' {',\n          'export * from \\'~main~dep\\'',\n          '}',\n          'declare module \\'main/index\\' {',\n          'export * from \\'~main/index\\';',\n          '}',\n          'declare module \\'main\\' {',\n          'export * from \\'~main/index\\';',\n          '}',\n          ''\n        ].join('\\n'))\n      })\n  })\n\n  t.test('resolve over http', t => {\n    const node: DependencyTree = {\n      src: 'http://example.com/typings.json',\n      raw: undefined,\n      postmessage: undefined,\n      global: false,\n      main: 'http://example.com/index.d.ts?query=test',\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    nock('http://example.com')\n      .get('/index.d.ts?query=test')\n      .matchHeader('User-Agent', /^typings\\/\\d+\\.\\d+\\.\\d+ node\\/v\\d+\\.\\d+\\.\\d+.*$/)\n      .reply(200, 'export * from \"./test\"')\n\n    nock('http://example.com')\n      .get('/test.d.ts?query=test')\n      .reply(200, 'export const test: boolean')\n\n    return compile(node, ['main'], { name: 'test', cwd: __dirname, global: false, meta: false, emitter })\n      .then(function (out) {\n        t.equal(out.results.main, [\n          'declare module \\'~test/test\\' {',\n          'export const test: boolean',\n          '}',\n          'declare module \\'test/test\\' {',\n          'export * from \\'~test/test\\';',\n          '}',\n          '',\n          'declare module \\'~test/index\\' {',\n          'export * from \\'~test/test\\'',\n          '}',\n          'declare module \\'test/index\\' {',\n          'export * from \\'~test/index\\';',\n          '}',\n          'declare module \\'test\\' {',\n          'export * from \\'~test/index\\';',\n          '}',\n          ''\n        ].join('\\n'))\n      })\n  })\n\n  t.test('resolve files array', t => {\n    const FIXTURE_DIR = join(FIXTURES_DIR, 'compile-files-array')\n\n    const tree: DependencyTree = {\n      src: join(FIXTURE_DIR, 'typings.json'),\n      raw: undefined,\n      postmessage: undefined,\n      global: false,\n      files: ['a.d.ts', 'b.d.ts'],\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n      globalDependencies: {},\n      globalDevDependencies: {}\n    }\n\n    const emitter = new EventEmitter()\n\n    return compile(tree, ['main', 'browser'], { name: 'test', cwd: __dirname, global: false, meta: false, emitter })\n      .then(function (out) {\n        t.equal(out.results.main, [\n          'declare module \\'~test/a\\' {',\n          'export const a: boolean;',\n          '}',\n          'declare module \\'test/a\\' {',\n          'export * from \\'~test/a\\';',\n          '}',\n          '',\n          'declare module \\'~test/b\\' {',\n          'export const b: boolean;',\n          '}',\n          'declare module \\'test/b\\' {',\n          'export * from \\'~test/b\\';',\n          '}',\n          ''\n        ].join('\\n'))\n\n        t.equal(out.results.main, out.results.browser)\n      })\n  })\n})\n"]}