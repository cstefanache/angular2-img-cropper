{"version":3,"file":"ng_probe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/debug/ng_probe.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,cAAc,EAAa,MAAM,EAAE,QAAQ,EAAY,YAAY,EAAE,YAAY,EAAE,SAAS,EAAC,MAAM,eAAe;OAEnH,EAAC,gBAAgB,EAAC,MAAM,yBAAyB;OACjD,EAAC,oBAAoB,EAAC,MAAM,2BAA2B;OACvD,EAAC,MAAM,EAAC,MAAM,gBAAgB;OAC9B,EAAC,eAAe,EAAC,MAAM,iBAAiB;AAG/C,IAAM,WAAW,GAAG;IAClB,gBAAgB,EAAE,cAAc;IAChC,QAAQ,EAAE,MAAM;CACjB,CAAC;AAEF,IAAM,mBAAmB,GAAG,UAAU,CAAC;AACvC,IAAM,uBAAuB,GAAG,eAAe,CAAC;AAEhD;;;;GAIG;AACH,qCAAqC,OAAY,CAAC,iBAAiB;IACjE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC;AAED;;GAEG;AACH;IACE,sBAAoB,IAAY,EAAU,KAAU;QAAhC,SAAI,GAAJ,IAAI,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAK;IAAG,CAAC;IAC1D,mBAAC;AAAD,CAAC,AAFD,IAEC;AAED,+CACI,YAAiB,CAAC,iBAAiB,EAAE,WAA2B;IAClE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,mBAAmB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IACxD,CAAC;IACD,MAAM,CAAC,YAAY,CAAC;AACtB,CAAC;AAED,6BAA6B,YAAiB,CAAC,iBAAiB,EAAE,WAA2B;IAC3F,MAAM,EAAE,CAAC,YAAY,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;IACjE,MAAM,EAAE,CAAC,YAAY,CACjB,uBAAuB,EACvB,gBAAgB,CAAC,KAAK,CAAC,WAAW,EAAE,mBAAmB,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACjF,MAAM,CAAC,IAAI,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAChD,CAAC;AAED,6BAA6B,MAAsB;IACjD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,IAAS,EAAE,CAAM,IAAK,OAAA,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAA9B,CAA8B,EAAE,EAAE,CAAC,CAAC;AAClF,CAAC;AAED;;GAEG;AACH,OAAO,IAAM,uBAAuB,GAAe,CAAC;QAClD,OAAO,EAAE,YAAY;QACrB,UAAU,EAAE,8BAA8B;QAC1C,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,YAAY,EAAE,IAAI,QAAQ,EAAE,CAAC,CAAC;KACxD,CAAC,CAAC;AAEH,OAAO,IAAM,iCAAiC,GAAU,CAAC;QACvD,OAAO,EAAE,YAAY;QACrB,UAAU,EAAE,mBAAmB;QAC/B,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,YAAY,EAAE,IAAI,QAAQ,EAAE,CAAC,CAAC;KACxD,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, DebugNode, NgZone, Optional, Provider, RootRenderer, getDebugNode, isDevMode} from '@angular/core';\n\nimport {StringMapWrapper} from '../../facade/collection';\nimport {DebugDomRootRenderer} from '../../private_import_core';\nimport {getDOM} from '../dom_adapter';\nimport {DomRootRenderer} from '../dom_renderer';\n\n\nconst CORE_TOKENS = {\n  'ApplicationRef': ApplicationRef,\n  'NgZone': NgZone\n};\n\nconst INSPECT_GLOBAL_NAME = 'ng.probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element: any /** TODO #9100 */): DebugNode {\n  return getDebugNode(element);\n}\n\n/**\n * @experimental\n */\nexport class NgProbeToken {\n  constructor(private name: string, private token: any) {}\n}\n\nexport function _createConditionalRootRenderer(\n    rootRenderer: any /** TODO #9100 */, extraTokens: NgProbeToken[]) {\n  if (isDevMode()) {\n    return _createRootRenderer(rootRenderer, extraTokens);\n  }\n  return rootRenderer;\n}\n\nfunction _createRootRenderer(rootRenderer: any /** TODO #9100 */, extraTokens: NgProbeToken[]) {\n  getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  getDOM().setGlobalVar(\n      CORE_TOKENS_GLOBAL_NAME,\n      StringMapWrapper.merge(CORE_TOKENS, _ngProbeTokensToMap(extraTokens || [])));\n  return new DebugDomRootRenderer(rootRenderer);\n}\n\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: Provider[] = [{\n  provide: RootRenderer,\n  useFactory: _createConditionalRootRenderer,\n  deps: [DomRootRenderer, [NgProbeToken, new Optional()]]\n}];\n\nexport const ELEMENT_PROBE_PROVIDERS_PROD_MODE: any[] = [{\n  provide: RootRenderer,\n  useFactory: _createRootRenderer,\n  deps: [DomRootRenderer, [NgProbeToken, new Optional()]]\n}];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}