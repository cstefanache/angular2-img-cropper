{"version":3,"file":"tsc.spec.js","sourceRoot":"","sources":["../../../../../tools/@angular/tsc-wrapped/test/tsc.spec.ts"],"names":[],"mappings":";AAAA,IAAY,EAAE,WAAM,YAAY,CAAC,CAAA;AACjC,oBAAkB,YAAY,CAAC,CAAA;AAE/B,QAAQ,CAAC,iBAAiB,EAAE;IAE1B,IAAM,GAAG,GAAG,IAAI,SAAG,CACf,cAAM,OAAA,+LASV,EATU,CASV,EACI,cAAM,OAAA,CAAC,eAAe,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAE7B,EAAE,CAAC,2CAA2C,EAAE;QAC9C,IAAA,oDAA2E,EAApE,kBAAM,EAAE,wBAAS,CAAoD;QAE5E,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;YACxB,MAAM,EAAE,UAAU;YAClB,mBAAmB,EAAE,IAAI;YACzB,MAAM,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ;YAC9B,MAAM,EAAE,gBAAgB;YACxB,cAAc,EAAE,SAAS;SAC1B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as ts from 'typescript';\nimport {Tsc} from '../src/tsc';\n\ndescribe('options parsing', () => {\n\n  const tsc = new Tsc(\n      () => `\n{\n    \"angularCompilerOptions\": {\n        \"googleClosureOutput\": true\n    },\n    \"compilerOptions\": {\n        \"module\": \"commonjs\",\n        \"outDir\": \"built\"\n    }\n}`,\n      () => ['tsconfig.json']);\n\n  it('should combine all options into ngOptions', () => {\n    const {parsed, ngOptions} = tsc.readConfiguration('projectDir', 'basePath');\n\n    expect(ngOptions).toEqual({\n      genDir: 'basePath',\n      googleClosureOutput: true,\n      module: ts.ModuleKind.CommonJS,\n      outDir: 'basePath/built',\n      configFilePath: undefined\n    });\n  });\n});\n"]}