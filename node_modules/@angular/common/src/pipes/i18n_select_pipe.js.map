{"version":3,"file":"i18n_select_pipe.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/pipes/i18n_select_pipe.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,IAAI,EAAgB,MAAM,eAAe;OAC1C,EAAC,OAAO,EAAE,WAAW,EAAC,MAAM,gBAAgB;OAC5C,EAAC,wBAAwB,EAAC,MAAM,+BAA+B;AAEtE;;;;;;;;;;;;;;;GAeG;AAEH;IAAA;IAgBA,CAAC;IAfC,kCAAS,GAAT,UAAU,KAAa,EAAE,OAAgC;QACvD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC;QAE9B,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,wBAAwB,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAC9D,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC7D,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAC,EAAG,EAAE;KACzD,CAAC;IACF,kBAAkB;IACX,6BAAc,GAA6D,EACjF,CAAC;IACF,qBAAC;AAAD,CAAC,AAhBD,IAgBC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {isBlank, isStringMap} from '../facade/lang';\nimport {InvalidPipeArgumentError} from './invalid_pipe_argument_error';\n\n/**\n * @ngModule CommonModule\n * @whatItDoes Generic selector that displays the string that matches the current value.\n * @howToUse `expression | i18nSelect:mapping`\n * @description\n *\n *  Where:\n *  - `mapping`: is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *\n *  ## Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n *  @experimental\n */\n\nexport class I18nSelectPipe implements PipeTransform {\n  transform(value: string, mapping: {[key: string]: string}): string {\n    if (isBlank(value)) return '';\n\n    if (!isStringMap(mapping)) {\n      throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    return mapping.hasOwnProperty(value) ? mapping[value] : '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nSelect', pure: true}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}