{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/change_detection/constants.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,OAAO,EAAC,MAAM,gBAAgB;AAEtC;;;;GAIG;AACH,WAAY,uBAUX;AAVD,WAAY,uBAAuB;IACjC;;OAEG;IACH,yEAAM,CAAA;IAEN;;OAEG;IACH,2EAAO,CAAA;AACT,CAAC,EAVW,uBAAuB,KAAvB,uBAAuB,QAUlC;AAED;;GAEG;AACH,WAAY,oBAoCX;AApCD,WAAY,oBAAoB;IAC9B;;;OAGG;IACH,yEAAS,CAAA;IAET;;;OAGG;IACH,qEAAO,CAAA;IAEP;;;OAGG;IACH,6EAAW,CAAA;IAEX;;;OAGG;IACH,uEAAQ,CAAA;IAER;;;;OAIG;IACH,qEAAO,CAAA;IAEP;;OAEG;IACH,yEAAS,CAAA;AACX,CAAC,EApCW,oBAAoB,KAApB,oBAAoB,QAoC/B;AAED,iDAAiD,uBAAgD;IAE/F,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC;QACnC,uBAAuB,KAAK,uBAAuB,CAAC,OAAO,CAAC;AAClE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isBlank} from '../facade/lang';\n\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n * @stable\n */\nexport enum ChangeDetectionStrategy {\n  /**\n   * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n   */\n  OnPush,\n\n  /**\n   * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n   */\n  Default,\n}\n\n/**\n * Describes the status of the detector.\n */\nexport enum ChangeDetectorStatus {\n  /**\n   * `CheckedOnce` means that after calling detectChanges the mode of the change detector\n   * will become `Checked`.\n   */\n  CheckOnce,\n\n  /**\n   * `Checked` means that the change detector should be skipped until its mode changes to\n   * `CheckOnce`.\n   */\n  Checked,\n\n  /**\n   * `CheckAlways` means that after calling detectChanges the mode of the change detector\n   * will remain `CheckAlways`.\n   */\n  CheckAlways,\n\n  /**\n   * `Detached` means that the change detector sub tree is not a part of the main tree and\n   * should be skipped.\n   */\n  Detached,\n\n  /**\n   * `Errored` means that the change detector encountered an error checking a binding\n   * or calling a directive lifecycle method and is now in an inconsistent state. Change\n   * detectors in this state will no longer detect changes.\n   */\n  Errored,\n\n  /**\n   * `Destroyed` means that the change detector is destroyed.\n   */\n  Destroyed,\n}\n\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return isBlank(changeDetectionStrategy) ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}