{"version":3,"file":"application_ref.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/application_ref.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,YAAY,EAAC,MAAM,sBAAsB;OAC1C,EAAC,WAAW,EAAC,MAAM,0BAA0B;OAC7C,EAAC,aAAa,EAAC,MAAM,sBAAsB;OAC3C,EAAC,SAAS,EAAC,MAAM,oBAAoB;OACrC,EAAC,SAAS,EAAC,MAAM,kBAAkB;OAEnC,EAAC,qBAAqB,EAAC,MAAM,oBAAoB;OACjD,EAAC,sBAAsB,EAAE,oBAAoB,EAAC,MAAM,sBAAsB;OAE1E,EAAC,OAAO,EAAC,MAAM,WAAW;OAC1B,EAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAY,kBAAkB,EAAC,MAAM,MAAM;OACvF,EAAC,eAAe,EAAkB,MAAM,mBAAmB;OAC3D,EAAC,gBAAgB,EAAe,MAAM,4BAA4B;OAClE,EAAC,wBAAwB,EAAC,MAAM,qCAAqC;OAErE,EAAa,cAAc,EAAE,QAAQ,EAAC,MAAM,mBAAmB;OAC/D,EAAC,WAAW,EAAE,mBAAmB,EAAC,MAAM,2BAA2B;OAEnE,EAAC,MAAM,EAAC,MAAM,gBAAgB;AAErC,IAAI,QAAQ,GAAY,IAAI,CAAC;AAC7B,IAAI,cAAc,GAAY,KAAK,CAAC;AACpC,IAAI,SAAsB,CAAC;AAE3B;;;;;;;;;GASG;AACH;IACE,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACnB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IACnE,CAAC;IACD,QAAQ,GAAG,KAAK,CAAC;AACnB,CAAC;AAED;;;;;;;GAOG;AACH;IACE,cAAc,GAAG,IAAI,CAAC;IACtB,MAAM,CAAC,QAAQ,CAAC;AAClB,CAAC;AAED;;;;;GAKG;AACH,+BAA+B,QAAkB;IAC/C,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QACtC,MAAM,IAAI,KAAK,CACX,+EAA+E,CAAC,CAAC;IACvF,CAAC;IACD,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtC,IAAM,KAAK,GAA2B,QAAQ,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAC/E,EAAE,CAAC,CAAC,KAAK,CAAC;QAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,EAAE,EAAN,CAAM,CAAC,CAAC;IACzC,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAED;;;;GAIG;AACH,sCACI,oBAAkE,EAAE,IAAY,EAChF,SAA0B;IAA1B,yBAA0B,GAA1B,cAA0B;IAC5B,IAAM,MAAM,GAAG,IAAI,WAAW,CAAC,eAAa,IAAM,CAAC,CAAC;IACpD,MAAM,CAAC,UAAC,cAA+B;QAA/B,8BAA+B,GAA/B,mBAA+B;QACrC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACzB,oBAAoB,CAChB,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;YAClF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,cAAc,CAAC,kBAAkB,CAAC,gBAAgB,CAC9C,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC;YACnF,CAAC;QACH,CAAC;QACD,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC,CAAC;AACJ,CAAC;AAED;;;;;GAKG;AACH,+BAA+B,aAAkB;IAC/C,IAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAE/B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACzC,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,IAAI,KAAK,CACX,sFAAsF,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC;AAClB,CAAC;AAED;;;;GAIG;AACH;IACE,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QACtC,SAAS,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;AACH,CAAC;AAED;;;;GAIG;AACH;IACE,MAAM,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC;AAC9D,CAAC;AAED;;;;;;;;;GASG;AACH;IAAA;IAiEA,CAAC;IAhEC;;;;;;;;;;;;;;;;;;;;;;OAsBG;IACH,4CAAsB,GAAtB,UAA0B,aAAiC;QACzD,MAAM,aAAa,EAAE,CAAC;IACxB,CAAC;IAED;;;;;;;;;;;;;;OAcG;IACH,qCAAe,GAAf,UAAmB,UAAmB,EAAE,eAAuD;QAAvD,+BAAuD,GAAvD,oBAAuD;QAE7F,MAAM,aAAa,EAAE,CAAC;IACxB,CAAC;IAWD,sBAAI,iCAAQ;QAJZ;;;WAGG;aACH,cAA2B,MAAM,aAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;;IAOnD,sBAAI,kCAAS;aAAb,cAA2B,MAAM,aAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;IACrD,kBAAC;AAAD,CAAC,AAjED,IAiEC;AAED,sCAAsC,YAA0B,EAAE,QAAmB;IACnF,IAAI,CAAC;QACH,IAAM,MAAM,GAAG,QAAQ,EAAE,CAAC;QAC1B,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,UAAC,CAAM;gBACzB,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC5B,mDAAmD;gBACnD,MAAM,CAAC,CAAC;YACV,CAAC,CAAC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAE;IAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC5B,mDAAmD;QACnD,MAAM,CAAC,CAAC;IACV,CAAC;AACH,CAAC;AAGD;IAAkC,gCAAW;IAK3C,sBAAoB,SAAmB;QAAI,iBAAO,CAAC;QAA/B,cAAS,GAAT,SAAS,CAAU;QAJ/B,aAAQ,GAAuB,EAAE,CAAC;QAClC,sBAAiB,GAAe,EAAE,CAAC;QACnC,eAAU,GAAY,KAAK,CAAC;IAEgB,CAAC;IAErD,gCAAS,GAAT,UAAU,QAAoB,IAAU,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAEhF,sBAAI,kCAAQ;aAAZ,cAA2B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;OAAA;IAEnD,sBAAI,mCAAS;aAAb,cAAkB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAE3C,8BAAO,GAAP;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAC9D,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,EAAE,EAAhB,CAAgB,CAAC,CAAC;QAC1D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,EAAE,EAAV,CAAU,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,6CAAsB,GAAtB,UAA0B,aAAiC;QACzD,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAEO,sDAA+B,GAAvC,UAA2C,aAAiC,EAAE,MAAc;QAA5F,iBA2BC;QAzBC,yEAAyE;QACzE,8DAA8D;QAC9D,4EAA4E;QAC5E,8CAA8C;QAC9C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YAAC,MAAM,GAAG,IAAI,MAAM,CAAC,EAAC,oBAAoB,EAAE,SAAS,EAAE,EAAC,CAAC,CAAC;QACtE,gDAAgD;QAChD,qFAAqF;QACrF,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;YAChB,IAAM,cAAc,GAChB,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,EAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC9F,IAAM,SAAS,GAAwB,aAAa,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC5E,IAAM,gBAAgB,GAAiB,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAClF,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACtB,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;YACnF,CAAC;YACD,SAAS,CAAC,SAAS,CAAC,cAAM,OAAA,WAAW,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,EAA5C,CAA4C,CAAC,CAAC;YACxE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,UAAC,KAAU,IAAO,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAC3F,MAAM,CAAC,4BAA4B,CAAC,gBAAgB,EAAE;gBACpD,IAAM,UAAU,GAA0B,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACxF,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC;oBACjC,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;oBACnC,MAAM,CAAC,SAAS,CAAC;gBACnB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAe,GAAf,UAAmB,UAAmB,EAAE,eAAuD;QAAvD,+BAAuD,GAAvD,oBAAuD;QAE7F,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;IAC1E,CAAC;IAEO,+CAAwB,GAAhC,UACI,UAAmB,EAAE,eAAuD,EAAE,MAAc,EAC5F,wBAA8B;QAFlC,iBAoBC;QAnBwB,+BAAuD,GAAvD,oBAAuD;QAE9E,IAAM,eAAe,GAAoB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC5E,IAAM,QAAQ,GAAG,eAAe,CAAC,cAAc,CAC3C,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,eAAe,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;QAE1E,4FAA4F;QAC5F,0FAA0F;QAC1F,aAAa;QACb,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,QAAQ,CAAC,kCAAkC,CAAC,UAAU,CAAC;iBACzD,IAAI,CAAC,UAAC,EAAqC;oBAApC,oCAAe,EAAE,0CAAkB;gBACzC,wBAAwB,CAAC,kBAAkB,CAAC,CAAC;gBAC7C,MAAM,CAAC,KAAI,CAAC,+BAA+B,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;QACT,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC;aACzC,IAAI,CAAC,UAAC,aAAa,IAAK,OAAA,KAAI,CAAC,+BAA+B,CAAC,aAAa,EAAE,MAAM,CAAC,EAA3D,CAA2D,CAAC,CAAC;IAC5F,CAAC;IAEO,yCAAkB,GAA1B,UAA2B,SAAgC;QACzD,IAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5C,SAAS,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAC,WAAW,IAAK,OAAA,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACvF,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;YAC5C,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CACX,iBAAc,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,oHAA4G;gBACnK,6BAA6B,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,2BAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,CAAC;IACF,mBAAC;AAAD,CAAC,AArGD,CAAkC,WAAW,GAqG5C;AAED;;;;;;GAMG;AACH;IAAA;IAqCA,CAAC;IANC,sBAAI,0CAAc;QAJlB;;;WAGG;aACH,cAAoC,MAAM,CAAc,aAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;;IAK1E,sBAAI,sCAAU;QAHd;;WAEG;aACH,cAAwC,MAAM,CAAsB,aAAa,EAAE,CAAC,CAAC,CAAC;;;OAAA;;IACxF,qBAAC;AAAD,CAAC,AArCD,IAqCC;AAGD;IAAqC,mCAAc;IAWjD,yBACY,KAAa,EAAU,QAAiB,EAAU,SAAmB,EACrE,iBAA+B,EAC/B,yBAAmD,EACnD,WAAkC,EACjC,oBAAyC,EACzC,YAAyB;QAjBxC,iBA0HC;QAxGG,iBAAO,CAAC;QANE,UAAK,GAAL,KAAK,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAS;QAAU,cAAS,GAAT,SAAS,CAAU;QACrE,sBAAiB,GAAjB,iBAAiB,CAAc;QAC/B,8BAAyB,GAAzB,yBAAyB,CAA0B;QACnD,gBAAW,GAAX,WAAW,CAAuB;QACjC,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,iBAAY,GAAZ,YAAY,CAAa;QAb9B,wBAAmB,GAAe,EAAE,CAAC;QACrC,oBAAe,GAAwB,EAAE,CAAC;QAC1C,wBAAmB,GAAgB,EAAE,CAAC;QACtC,wBAAmB,GAAwB,EAAE,CAAC;QAC9C,iBAAY,GAAY,KAAK,CAAC;QAC9B,yBAAoB,GAAY,KAAK,CAAC;QAU5C,IAAI,CAAC,oBAAoB,GAAG,SAAS,EAAE,CAAC;QAExC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CACjC,EAAC,IAAI,EAAE,cAAQ,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAQ,KAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,gDAAsB,GAAtB,UAAuB,cAAiC;QACtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAChD,CAAC;IAED,kDAAwB,GAAxB,UAAyB,cAAiC;QACxD,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,cAAc,CAAC,CAAC;IAC/D,CAAC;IAED,mCAAS,GAAT,UAAa,kBAA+C;QAA5D,iBA0BC;QAzBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3B,MAAM,IAAI,KAAK,CACX,+IAA+I,CAAC,CAAC;QACvJ,CAAC;QACD,IAAI,gBAAqC,CAAC;QAC1C,EAAE,CAAC,CAAC,kBAAkB,YAAY,gBAAgB,CAAC,CAAC,CAAC;YACnD,gBAAgB,GAAG,kBAAkB,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;QAChG,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAM,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACvF,OAAO,CAAC,SAAS,CAAC,cAAQ,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC;iBACpC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QACxE,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7B,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,CACb,oGAAoG,CAAC,CAAC;QAC5G,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,gBAAgB;IAChB,wCAAc,GAAd,UAAe,YAA+B;QAC5C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACxC,iDAAiD;QACjD,IAAM,SAAS,GAC+B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,CAAC;aACnF,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC1C,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,YAAY,CAAC,EAAtB,CAAsB,CAAC,CAAC;IAC1D,CAAC;IAED,gBAAgB;IAChB,0CAAgB,GAAhB,UAAiB,YAA+B;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC9D,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;IACzD,CAAC;IAED,8BAAI,GAAJ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAC/D,CAAC;QAED,IAAM,KAAK,GAAG,eAAe,CAAC,UAAU,EAAE,CAAC;QAC3C,IAAI,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,aAAa,EAAE,EAAxB,CAAwB,CAAC,CAAC;YACzE,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,cAAc,EAAE,EAAzB,CAAyB,CAAC,CAAC;YAC5E,CAAC;QACH,CAAC;gBAAS,CAAC;YACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,QAAQ,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;IAED,qCAAW,GAAX;QACE,uCAAuC;QACvC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,OAAO,EAAE,EAAnB,CAAmB,CAAC,CAAC;IAC3E,CAAC;IAED,sBAAI,2CAAc;aAAlB,cAAoC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;;;OAAA;IAEtE,sBAAI,uCAAU;aAAd,cAAwC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;;;OAAA;IA1GtE,gBAAgB;IACT,0BAAU,GAAe,cAAc,CAAC,uBAAuB,CAAC,CAAC;IA0GnE,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,MAAM,GAAG;QAChB,EAAC,IAAI,EAAE,OAAO,GAAG;QACjB,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,YAAY,GAAG;QACtB,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,qBAAqB,GAAG;QAC/B,EAAC,IAAI,EAAE,mBAAmB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;QAC/D,EAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;KACtD,CAAC;IACF,sBAAC;AAAD,CAAC,AA1HD,CAAqC,cAAc,GA0HlD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {ListWrapper} from '../src/facade/collection';\nimport {unimplemented} from '../src/facade/errors';\nimport {stringify} from '../src/facade/lang';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {ChangeDetectorRef} from './change_detection/change_detector_ref';\nimport {Console} from './console';\nimport {Injectable, Injector, OpaqueToken, Optional, Provider, ReflectiveInjector} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {NgModuleFactory, NgModuleInjector, NgModuleRef} from './linker/ng_module_factory';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone} from './zone/ng_zone';\n\nlet _devMode: boolean = true;\nlet _runModeLocked: boolean = false;\nlet _platform: PlatformRef;\n\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @stable\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const inits: Function[] = <Function[]>injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach(init => init());\n  return _platform;\n}\n\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function createPlatformFactory(\n    parentPlaformFactory: (extraProviders?: Provider[]) => PlatformRef, name: string,\n    providers: Provider[] = []): (extraProviders?: Provider[]) => PlatformRef {\n  const marker = new OpaqueToken(`Platform: ${name}`);\n  return (extraProviders: Provider[] = []) => {\n    if (!getPlatform()) {\n      if (parentPlaformFactory) {\n        parentPlaformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there currently is a platform\n * which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function getPlatform(): PlatformRef {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n * explicitly by calling {@link createPlatform}().\n *\n * @stable\n */\nexport abstract class PlatformRef {\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   *\n   * @experimental APIs related to application bootstrap are currently under review.\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    throw unimplemented();\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * ## Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   * @stable\n   */\n  bootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    throw unimplemented();\n  }\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  abstract onDestroy(callback: () => void): void;\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector { throw unimplemented(); };\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  abstract destroy(): void;\n\n  get destroyed(): boolean { throw unimplemented(); }\n}\n\nfunction _callAndReportToErrorHandler(errorHandler: ErrorHandler, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        errorHandler.handleError(e);\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch (e) {\n    errorHandler.handleError(e);\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n\n\nexport class PlatformRef_ extends PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Function[] = [];\n  private _destroyed: boolean = false;\n\n  constructor(private _injector: Injector) { super(); }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n\n  get injector(): Injector { return this._injector; }\n\n  get destroyed() { return this._destroyed; }\n\n  destroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n  }\n\n  private _bootstrapModuleFactoryWithZone<M>(moduleFactory: NgModuleFactory<M>, ngZone: NgZone):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const ngZoneInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], this.injector);\n      const moduleRef = <NgModuleInjector<M>>moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => ListWrapper.remove(this._modules, moduleRef));\n      ngZone.onError.subscribe({next: (error: any) => { exceptionHandler.handleError(error); }});\n      return _callAndReportToErrorHandler(exceptionHandler, () => {\n        const initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  bootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n  }\n\n  private _bootstrapModuleWithZone<M>(\n      moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = [], ngZone: NgZone,\n      componentFactoryCallback?: any): Promise<NgModuleRef<M>> {\n    const compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const compiler = compilerFactory.createCompiler(\n        Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\n    // ugly internal api hack: generate host component factories for all declared components and\n    // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n    // factories.\n    if (componentFactoryCallback) {\n      return compiler.compileModuleAndAllComponentsAsync(moduleType)\n          .then(({ngModuleFactory, componentFactories}) => {\n            componentFactoryCallback(componentFactories);\n            return this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n          });\n    }\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n\n  private _moduleDoBootstrap(moduleRef: NgModuleInjector<any>) {\n    const appRef = moduleRef.injector.get(ApplicationRef);\n    if (moduleRef.bootstrapFactories.length > 0) {\n      moduleRef.bootstrapFactories.forEach((compFactory) => appRef.bootstrap(compFactory));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Injector, },\n];\n}\n\n/**\n * A reference to an Angular application running on a page.\n *\n * For more about Angular applications, see the documentation for {@link bootstrap}.\n *\n * @stable\n */\nexport abstract class ApplicationRef {\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the [componentType]'s\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  abstract bootstrap<C>(componentFactory: ComponentFactory<C>|Type<C>): ComponentRef<C>;\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  abstract tick(): void;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  get componentTypes(): Type<any>[] { return <Type<any>[]>unimplemented(); };\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  get components(): ComponentRef<any>[] { return <ComponentRef<any>[]>unimplemented(); };\n}\n\n\nexport class ApplicationRef_ extends ApplicationRef {\n  /** @internal */\n  static _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\n\n  private _bootstrapListeners: Function[] = [];\n  private _rootComponents: ComponentRef<any>[] = [];\n  private _rootComponentTypes: Type<any>[] = [];\n  private _changeDetectorRefs: ChangeDetectorRef[] = [];\n  private _runningTick: boolean = false;\n  private _enforceNoNewChanges: boolean = false;\n\n  constructor(\n      private _zone: NgZone, private _console: Console, private _injector: Injector,\n      private _exceptionHandler: ErrorHandler,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _initStatus: ApplicationInitStatus,\n       private _testabilityRegistry: TestabilityRegistry,\n       private _testability: Testability) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n  }\n\n  registerChangeDetector(changeDetector: ChangeDetectorRef): void {\n    this._changeDetectorRefs.push(changeDetector);\n  }\n\n  unregisterChangeDetector(changeDetector: ChangeDetectorRef): void {\n    ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n  }\n\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>): ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n    const compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n\n  /** @internal */\n  _loadComponent(componentRef: ComponentRef<any>): void {\n    this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const listeners =\n        <((compRef: ComponentRef<any>) => void)[]>this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n            .concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n\n  /** @internal */\n  _unloadComponent(componentRef: ComponentRef<any>): void {\n    if (this._rootComponents.indexOf(componentRef) == -1) {\n      return;\n    }\n    this.unregisterChangeDetector(componentRef.changeDetectorRef);\n    ListWrapper.remove(this._rootComponents, componentRef);\n  }\n\n  tick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._changeDetectorRefs.forEach((detector) => detector.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._changeDetectorRefs.forEach((detector) => detector.checkNoChanges());\n      }\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n\n  ngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._rootComponents.slice().forEach((component) => component.destroy());\n  }\n\n  get componentTypes(): Type<any>[] { return this._rootComponentTypes; }\n\n  get components(): ComponentRef<any>[] { return this._rootComponents; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ErrorHandler, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationInitStatus, },\n{type: TestabilityRegistry, decorators: [{ type: Optional }, ]},\n{type: Testability, decorators: [{ type: Optional }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}