{"version":3,"file":"element.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/linker/element.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ListWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\n\nimport {ElementRef} from './element_ref';\nimport {QueryList} from './query_list';\nimport {AppView} from './view';\nimport {ViewContainerRef_} from './view_container_ref';\nimport {ViewType} from './view_type';\n\n\n/**\n * An AppElement is created for elements that have a ViewContainerRef,\n * a nested component or a <template> element to keep data around\n * that is needed for later instantiations.\n */\nexport class AppElement {\n  public nestedViews: AppView<any>[] = null;\n  public componentView: AppView<any> = null;\n\n  public component: any;\n  public componentConstructorViewQueries: QueryList<any>[];\n\n  constructor(\n      public index: number, public parentIndex: number, public parentView: AppView<any>,\n      public nativeElement: any) {}\n\n  get elementRef(): ElementRef { return new ElementRef(this.nativeElement); }\n\n  get vcRef(): ViewContainerRef_ { return new ViewContainerRef_(this); }\n\n  initComponent(\n      component: any, componentConstructorViewQueries: QueryList<any>[], view: AppView<any>) {\n    this.component = component;\n    this.componentConstructorViewQueries = componentConstructorViewQueries;\n    this.componentView = view;\n  }\n\n  get parentInjector(): Injector { return this.parentView.injector(this.parentIndex); }\n  get injector(): Injector { return this.parentView.injector(this.index); }\n\n  mapNestedViews(nestedViewClass: any, callback: Function): any[] {\n    var result: any[] /** TODO #9100 */ = [];\n    if (isPresent(this.nestedViews)) {\n      this.nestedViews.forEach((nestedView) => {\n        if (nestedView.clazz === nestedViewClass) {\n          result.push(callback(nestedView));\n        }\n      });\n    }\n    return result;\n  }\n\n  moveView(view: AppView<any>, currentIndex: number) {\n    var previousIndex = this.nestedViews.indexOf(view);\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    var nestedViews = this.nestedViews;\n    if (nestedViews == null) {\n      nestedViews = [];\n      this.nestedViews = nestedViews;\n    }\n    ListWrapper.removeAt(nestedViews, previousIndex);\n    ListWrapper.insert(nestedViews, currentIndex, view);\n    var refRenderNode: any /** TODO #9100 */;\n    if (currentIndex > 0) {\n      var prevView = nestedViews[currentIndex - 1];\n      refRenderNode = prevView.lastRootNode;\n    } else {\n      refRenderNode = this.nativeElement;\n    }\n    if (isPresent(refRenderNode)) {\n      view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n    }\n    view.markContentChildAsMoved(this);\n  }\n\n  attachView(view: AppView<any>, viewIndex: number) {\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    var nestedViews = this.nestedViews;\n    if (nestedViews == null) {\n      nestedViews = [];\n      this.nestedViews = nestedViews;\n    }\n    ListWrapper.insert(nestedViews, viewIndex, view);\n    var refRenderNode: any /** TODO #9100 */;\n    if (viewIndex > 0) {\n      var prevView = nestedViews[viewIndex - 1];\n      refRenderNode = prevView.lastRootNode;\n    } else {\n      refRenderNode = this.nativeElement;\n    }\n    if (isPresent(refRenderNode)) {\n      view.renderer.attachViewAfter(refRenderNode, view.flatRootNodes);\n    }\n    view.addToContentChildren(this);\n  }\n\n  detachView(viewIndex: number): AppView<any> {\n    var view = ListWrapper.removeAt(this.nestedViews, viewIndex);\n    if (view.type === ViewType.COMPONENT) {\n      throw new Error(`Component views can't be moved!`);\n    }\n    view.detach();\n\n    view.removeFromContentChildren(this);\n    return view;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}