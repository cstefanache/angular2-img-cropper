{"version":3,"file":"decorators.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/util/decorators.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global, stringify} from '../facade/lang';\nimport {Type} from '../type';\n\nlet _nextClassId = 0;\nconst Reflect = global.Reflect;\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport interface ClassDefinition {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function|any[];\n\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any>|Function|any[];\n}\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n\nfunction applyParams(fnOrArray: (Function | any[]), key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const annotations: any[] = fnOrArray;\n    const annoLength = annotations.length - 1;\n    const fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const paramsAnnotations: any[][] = [];\n    for (let i = 0, ii = annotations.length - 1; i < ii; i++) {\n      const paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(\n      `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n *\n * ## Basic Example\n *\n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n *\n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n *\n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n *\n * or equivalent to ES5:\n *\n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n *\n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n *\n * ### Example with parameter annotations\n *\n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class MyService {\n *   constructor(name: string, @Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n *\n * ### Example with inheritance\n *\n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n *\n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @stable\n */\nexport function Class(clsDef: ClassDefinition): Type<any> {\n  const constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      (<Function>constructor).prototype = proto =\n          Object.create((<Function>clsDef.extends).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (let key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(<any>clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    (constructor as any)['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return <Type<any>>constructor;\n}\n\nexport function makeDecorator(\n    name: string, props: {[name: string]: any}, parentClass?: any,\n    chainFn: (fn: Function) => void = null): (...args: any[]) => (cls: any) => any {\n  const metaCtor = makeMetadataCtor([props]);\n\n  function DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const annotationInstance = new (<any>DecoratorFactory)(objOrType);\n    const chainAnnotation =\n        typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const TypeDecorator: TypeDecorator = <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    };\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  (<any>DecoratorFactory).annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n\nfunction makeMetadataCtor(props: ([string, any] | {[key: string]: any})[]): any {\n  function ctor(...args: any[]) {\n    props.forEach((prop, i) => {\n      const argVal = args[i];\n      if (Array.isArray(prop)) {\n        // plain parameter\n        this[prop[0]] = !argVal || argVal === undefined ? prop[1] : argVal;\n      } else {\n        for (let propName in prop) {\n          this[propName] =\n              !argVal || argVal[propName] === undefined ? prop[propName] : argVal[propName];\n        }\n      }\n    });\n  }\n  return ctor;\n}\n\nexport function makeParamDecorator(\n    name: string, props: ([string, any] | {[name: string]: any})[], parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const parameters: any[][] = Reflect.getMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || [];\n      parameters[index].push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(\n    name: string, props: ([string, any] | {[key: string]: any})[], parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n    return function PropDecorator(target: any, name: string) {\n      const meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}