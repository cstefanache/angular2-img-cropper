{"version":3,"file":"di.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/di.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;;GAIG;AAEH,cAAc,eAAe,CAAC;AAE9B,SAAQ,UAAU,EAAE,iBAAiB,QAAqB,kBAAkB,CAAC;AAE7E,SAAQ,QAAQ,QAAO,eAAe,CAAC;AACvC,SAAQ,kBAAkB,QAAO,0BAA0B,CAAC;AAE5D,SAAQ,yBAAyB,QAAmC,0BAA0B,CAAC;AAC/F,SAAQ,aAAa,QAAO,qBAAqB,CAAC;AAClD,SAAQ,WAAW,QAAO,mBAAmB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport * from './di/metadata';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {Provider, TypeProvider, ValueProvider, ClassProvider, ExistingProvider, FactoryProvider} from './di/provider';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {OpaqueToken} from './di/opaque_token';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}