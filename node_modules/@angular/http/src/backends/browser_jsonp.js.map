{"version":3,"file":"browser_jsonp.js","sourceRoot":"","sources":["../../../../../modules/@angular/http/src/backends/browser_jsonp.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,UAAU,EAAC,MAAM,eAAe;OACjC,EAAC,MAAM,EAAC,MAAM,gBAAgB;AAErC,IAAI,cAAc,GAAG,CAAC,CAAC;AACvB,OAAO,IAAM,UAAU,GAAG,cAAc,CAAC;AACzC,IAAI,iBAAiB,GAAyB,IAAI,CAAC;AAEnD;IACE,EAAE,CAAC,CAAC,iBAAiB,KAAK,IAAI,CAAC,CAAC,CAAC;QAC/B,iBAAiB,GAA0B,MAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACtE,CAAC;IACD,MAAM,CAAC,iBAAiB,CAAC;AAC3B,CAAC;AAED,+DAA+D;AAE/D;IAAA;IAqCA,CAAC;IApCC,sDAAsD;IACtD,4BAAK,GAAL,UAAM,GAAW;QACf,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,oCAAa,GAAb,cAA0B,MAAM,CAAC,UAAQ,cAAc,EAAI,CAAC,CAAC,CAAC;IAE9D,sCAAe,GAAf,UAAgB,EAAU,IAAY,MAAM,CAAI,UAAU,SAAI,EAAE,cAAW,CAAC,CAAC,CAAC;IAE9E,uCAAgB,GAAhB,UAAiB,EAAU,EAAE,UAAe;QAC1C,IAAI,WAAW,GAAG,oBAAoB,EAAE,CAAC;QACzC,WAAW,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,uCAAgB,GAAhB,UAAiB,EAAU;QACzB,IAAI,WAAW,GAAG,oBAAoB,EAAE,CAAC;QACzC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,yCAAyC;IACzC,2BAAI,GAAJ,UAAK,IAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5D,uCAAuC;IACvC,8BAAO,GAAP,UAAQ,IAAS;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,2BAAc,GAA6D,EACjF,CAAC;IACF,mBAAC;AAAD,CAAC,AArCD,IAqCC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {global} from '../facade/lang';\n\nlet _nextRequestId = 0;\nexport const JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections: {[key: string]: any} = null;\n\nfunction _getJsonpConnections(): {[key: string]: any} {\n  if (_jsonpConnections === null) {\n    _jsonpConnections = (<{[key: string]: any}>global)[JSONP_HOME] = {};\n  }\n  return _jsonpConnections;\n}\n\n// Make sure not to evaluate this in a non-browser environment!\n\nexport class BrowserJsonp {\n  // Construct a <script> element with the specified URL\n  build(url: string): any {\n    let node = document.createElement('script');\n    node.src = url;\n    return node;\n  }\n\n  nextRequestID(): string { return `__req${_nextRequestId++}`; }\n\n  requestCallback(id: string): string { return `${JSONP_HOME}.${id}.finished`; }\n\n  exposeConnection(id: string, connection: any) {\n    let connections = _getJsonpConnections();\n    connections[id] = connection;\n  }\n\n  removeConnection(id: string) {\n    var connections = _getJsonpConnections();\n    connections[id] = null;\n  }\n\n  // Attach the <script> element to the DOM\n  send(node: any) { document.body.appendChild(<Node>(node)); }\n\n  // Remove <script> element from the DOM\n  cleanup(node: any) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(<Node>(node));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}