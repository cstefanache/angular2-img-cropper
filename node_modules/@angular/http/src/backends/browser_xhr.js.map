{"version":3,"file":"browser_xhr.js","sourceRoot":"","sources":["../../../../../modules/@angular/http/src/backends/browser_xhr.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,UAAU,EAAC,MAAM,eAAe;AAExC;;;;;;GAMG;AAEH;IACE;IAAe,CAAC;IAChB,0BAAK,GAAL,cAAe,MAAM,CAAM,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAA6D,EACjF,CAAC;IACF,iBAAC;AAAD,CAAC,AATD,IASC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @experimental\n */\n\nexport class BrowserXhr {\n  constructor() {}\n  build(): any { return <any>(new XMLHttpRequest()); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}