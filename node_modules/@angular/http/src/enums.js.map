{"version":3,"file":"enums.js","sourceRoot":"","sources":["../../../../modules/@angular/http/src/enums.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;GAGG;AACH,WAAY,aAQX;AARD,WAAY,aAAa;IACvB,+CAAG,CAAA;IACH,iDAAI,CAAA;IACJ,+CAAG,CAAA;IACH,qDAAM,CAAA;IACN,uDAAO,CAAA;IACP,iDAAI,CAAA;IACJ,mDAAK,CAAA;AACP,CAAC,EARW,aAAa,KAAb,aAAa,QAQxB;AAED;;;;;GAKG;AACH,WAAY,UAOX;AAPD,WAAY,UAAU;IACpB,+CAAM,CAAA;IACN,2CAAI,CAAA;IACJ,iEAAe,CAAA;IACf,iDAAO,CAAA;IACP,2CAAI,CAAA;IACJ,qDAAS,CAAA;AACX,CAAC,EAPW,UAAU,KAAV,UAAU,QAOrB;AAED;;;;GAIG;AACH,WAAY,YAMX;AAND,WAAY,YAAY;IACtB,iDAAK,CAAA;IACL,+CAAI,CAAA;IACJ,qDAAO,CAAA;IACP,iDAAK,CAAA;IACL,mDAAM,CAAA;AACR,CAAC,EANW,YAAY,KAAZ,YAAY,QAMvB;AAED;;;GAGG;AACH,WAAY,WAQX;AARD,WAAY,WAAW;IACrB,6CAAI,CAAA;IACJ,6CAAI,CAAA;IACJ,6CAAI,CAAA;IACJ,uDAAS,CAAA;IACT,6CAAI,CAAA;IACJ,6CAAI,CAAA;IACJ,6DAAY,CAAA;AACd,CAAC,EARW,WAAW,KAAX,WAAW,QAQtB;AAED;;;GAGG;AACH,WAAY,mBAKX;AALD,WAAY,mBAAmB;IAC7B,6DAAI,CAAA;IACJ,6DAAI,CAAA;IACJ,2EAAW,CAAA;IACX,6DAAI,CAAA;AACN,CAAC,EALW,mBAAmB,KAAnB,mBAAmB,QAK9B","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Supported http methods.\n * @experimental\n */\nexport enum RequestMethod {\n  Get,\n  Post,\n  Put,\n  Delete,\n  Options,\n  Head,\n  Patch\n}\n\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @experimental\n */\nexport enum ReadyState {\n  Unsent,\n  Open,\n  HeadersReceived,\n  Loading,\n  Done,\n  Cancelled\n}\n\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @experimental\n */\nexport enum ResponseType {\n  Basic,\n  Cors,\n  Default,\n  Error,\n  Opaque\n}\n\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @experimental\n */\nexport enum ContentType {\n  NONE,\n  JSON,\n  FORM,\n  FORM_DATA,\n  TEXT,\n  BLOB,\n  ARRAY_BUFFER\n}\n\n/**\n * Define which buffer to use to store the response\n * @experimental\n */\nexport enum ResponseContentType {\n  Text,\n  Json,\n  ArrayBuffer,\n  Blob\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}