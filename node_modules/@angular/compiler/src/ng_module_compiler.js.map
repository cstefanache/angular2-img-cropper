{"version":3,"file":"ng_module_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/ng_module_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {CompileDiDependencyMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompileProviderMetadata, CompileTokenMetadata} from './compile_metadata';\nimport {isPresent} from './facade/lang';\nimport {Identifiers, resolveIdentifier, resolveIdentifierToken} from './identifiers';\nimport * as o from './output/output_ast';\nimport {convertValueToOutputAst} from './output/value_util';\nimport {ParseLocation, ParseSourceFile, ParseSourceSpan} from './parse_util';\nimport {LifecycleHooks} from './private_import_core';\nimport {NgModuleProviderAnalyzer} from './provider_analyzer';\nimport {ProviderAst} from './template_parser/template_ast';\nimport {createDiTokenExpression} from './util';\n\nexport class ComponentFactoryDependency {\n  constructor(\n      public comp: CompileIdentifierMetadata, public placeholder: CompileIdentifierMetadata) {}\n}\n\nexport class NgModuleCompileResult {\n  constructor(\n      public statements: o.Statement[], public ngModuleFactoryVar: string,\n      public dependencies: ComponentFactoryDependency[]) {}\n}\n\n\nexport class NgModuleCompiler {\n  compile(ngModuleMeta: CompileNgModuleMetadata, extraProviders: CompileProviderMetadata[]):\n      NgModuleCompileResult {\n    var sourceFileName = isPresent(ngModuleMeta.type.moduleUrl) ?\n        `in NgModule ${ngModuleMeta.type.name} in ${ngModuleMeta.type.moduleUrl}` :\n        `in NgModule ${ngModuleMeta.type.name}`;\n    var sourceFile = new ParseSourceFile('', sourceFileName);\n    var sourceSpan = new ParseSourceSpan(\n        new ParseLocation(sourceFile, null, null, null),\n        new ParseLocation(sourceFile, null, null, null));\n    var deps: ComponentFactoryDependency[] = [];\n    var bootstrapComponentFactories: CompileIdentifierMetadata[] = [];\n    var entryComponentFactories =\n        ngModuleMeta.transitiveModule.entryComponents.map((entryComponent) => {\n          var id = new CompileIdentifierMetadata({name: entryComponent.name});\n          if (ngModuleMeta.bootstrapComponents.indexOf(entryComponent) > -1) {\n            bootstrapComponentFactories.push(id);\n          }\n          deps.push(new ComponentFactoryDependency(entryComponent, id));\n          return id;\n        });\n    var builder = new _InjectorBuilder(\n        ngModuleMeta, entryComponentFactories, bootstrapComponentFactories, sourceSpan);\n\n    var providerParser = new NgModuleProviderAnalyzer(ngModuleMeta, extraProviders, sourceSpan);\n    providerParser.parse().forEach((provider) => builder.addProvider(provider));\n    var injectorClass = builder.build();\n    var ngModuleFactoryVar = `${ngModuleMeta.type.name}NgFactory`;\n    var ngModuleFactoryStmt =\n        o.variable(ngModuleFactoryVar)\n            .set(o.importExpr(resolveIdentifier(Identifiers.NgModuleFactory))\n                     .instantiate(\n                         [o.variable(injectorClass.name), o.importExpr(ngModuleMeta.type)],\n                         o.importType(\n                             resolveIdentifier(Identifiers.NgModuleFactory),\n                             [o.importType(ngModuleMeta.type)], [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]);\n\n    let stmts: o.Statement[] = [injectorClass, ngModuleFactoryStmt];\n    if (ngModuleMeta.id) {\n      let registerFactoryStmt =\n          o.importExpr(resolveIdentifier(Identifiers.RegisterModuleFactoryFn))\n              .callFn([o.literal(ngModuleMeta.id), o.variable(ngModuleFactoryVar)])\n              .toStmt();\n      stmts.push(registerFactoryStmt);\n    }\n\n    return new NgModuleCompileResult(stmts, ngModuleFactoryVar, deps);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\nclass _InjectorBuilder {\n  private _tokens: CompileTokenMetadata[] = [];\n  private _instances = new Map<any, o.Expression>();\n  private _fields: o.ClassField[] = [];\n  private _createStmts: o.Statement[] = [];\n  private _destroyStmts: o.Statement[] = [];\n  private _getters: o.ClassGetter[] = [];\n\n  constructor(\n      private _ngModuleMeta: CompileNgModuleMetadata,\n      private _entryComponentFactories: CompileIdentifierMetadata[],\n      private _bootstrapComponentFactories: CompileIdentifierMetadata[],\n      private _sourceSpan: ParseSourceSpan) {}\n\n  addProvider(resolvedProvider: ProviderAst) {\n    var providerValueExpressions =\n        resolvedProvider.providers.map((provider) => this._getProviderValue(provider));\n    var propName = `_${resolvedProvider.token.name}_${this._instances.size}`;\n    var instance = this._createProviderProperty(\n        propName, resolvedProvider, providerValueExpressions, resolvedProvider.multiProvider,\n        resolvedProvider.eager);\n    if (resolvedProvider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n      this._destroyStmts.push(instance.callMethod('ngOnDestroy', []).toStmt());\n    }\n    this._tokens.push(resolvedProvider.token);\n    this._instances.set(resolvedProvider.token.reference, instance);\n  }\n\n  build(): o.ClassStmt {\n    let getMethodStmts: o.Statement[] = this._tokens.map((token) => {\n      var providerExpr = this._instances.get(token.reference);\n      return new o.IfStmt(\n          InjectMethodVars.token.identical(createDiTokenExpression(token)),\n          [new o.ReturnStatement(providerExpr)]);\n    });\n    var methods = [\n      new o.ClassMethod(\n        'createInternal', [], this._createStmts.concat(\n          new o.ReturnStatement(this._instances.get(this._ngModuleMeta.type.reference))\n        ), o.importType(this._ngModuleMeta.type)\n      ),\n      new o.ClassMethod(\n          'getInternal',\n          [\n            new o.FnParam(InjectMethodVars.token.name, o.DYNAMIC_TYPE),\n            new o.FnParam(InjectMethodVars.notFoundResult.name, o.DYNAMIC_TYPE)\n          ],\n          getMethodStmts.concat([new o.ReturnStatement(InjectMethodVars.notFoundResult)]),\n          o.DYNAMIC_TYPE),\n      new o.ClassMethod(\n        'destroyInternal', [], this._destroyStmts\n      ),\n    ];\n\n    var ctor = new o.ClassMethod(\n        null,\n        [new o.FnParam(\n            InjectorProps.parent.name, o.importType(resolveIdentifier(Identifiers.Injector)))],\n        [o.SUPER_EXPR\n             .callFn([\n               o.variable(InjectorProps.parent.name),\n               o.literalArr(this._entryComponentFactories.map(\n                   (componentFactory) => o.importExpr(componentFactory))),\n               o.literalArr(this._bootstrapComponentFactories.map(\n                   (componentFactory) => o.importExpr(componentFactory)))\n             ])\n             .toStmt()]);\n\n    var injClassName = `${this._ngModuleMeta.type.name}Injector`;\n    return new o.ClassStmt(\n        injClassName, o.importExpr(\n                          resolveIdentifier(Identifiers.NgModuleInjector),\n                          [o.importType(this._ngModuleMeta.type)]),\n        this._fields, this._getters, ctor, methods);\n  }\n\n  private _getProviderValue(provider: CompileProviderMetadata): o.Expression {\n    var result: o.Expression;\n    if (isPresent(provider.useExisting)) {\n      result = this._getDependency(new CompileDiDependencyMetadata({token: provider.useExisting}));\n    } else if (isPresent(provider.useFactory)) {\n      var deps = provider.deps || provider.useFactory.diDeps;\n      var depsExpr = deps.map((dep) => this._getDependency(dep));\n      result = o.importExpr(provider.useFactory).callFn(depsExpr);\n    } else if (isPresent(provider.useClass)) {\n      var deps = provider.deps || provider.useClass.diDeps;\n      var depsExpr = deps.map((dep) => this._getDependency(dep));\n      result =\n          o.importExpr(provider.useClass).instantiate(depsExpr, o.importType(provider.useClass));\n    } else {\n      result = convertValueToOutputAst(provider.useValue);\n    }\n    return result;\n  }\n\n\n  private _createProviderProperty(\n      propName: string, provider: ProviderAst, providerValueExpressions: o.Expression[],\n      isMulti: boolean, isEager: boolean): o.Expression {\n    var resolvedProviderValueExpr: o.Expression;\n    var type: o.Type;\n    if (isMulti) {\n      resolvedProviderValueExpr = o.literalArr(providerValueExpressions);\n      type = new o.ArrayType(o.DYNAMIC_TYPE);\n    } else {\n      resolvedProviderValueExpr = providerValueExpressions[0];\n      type = providerValueExpressions[0].type;\n    }\n    if (!type) {\n      type = o.DYNAMIC_TYPE;\n    }\n    if (isEager) {\n      this._fields.push(new o.ClassField(propName, type));\n      this._createStmts.push(o.THIS_EXPR.prop(propName).set(resolvedProviderValueExpr).toStmt());\n    } else {\n      var internalField = `_${propName}`;\n      this._fields.push(new o.ClassField(internalField, type));\n      // Note: Equals is important for JS so that it also checks the undefined case!\n      var getterStmts = [\n        new o.IfStmt(\n            o.THIS_EXPR.prop(internalField).isBlank(),\n            [o.THIS_EXPR.prop(internalField).set(resolvedProviderValueExpr).toStmt()]),\n        new o.ReturnStatement(o.THIS_EXPR.prop(internalField))\n      ];\n      this._getters.push(new o.ClassGetter(propName, getterStmts, type));\n    }\n    return o.THIS_EXPR.prop(propName);\n  }\n\n  private _getDependency(dep: CompileDiDependencyMetadata): o.Expression {\n    var result: o.Expression = null;\n    if (dep.isValue) {\n      result = o.literal(dep.value);\n    }\n    if (!dep.isSkipSelf) {\n      if (dep.token &&\n          (dep.token.reference === resolveIdentifierToken(Identifiers.Injector).reference ||\n           dep.token.reference ===\n               resolveIdentifierToken(Identifiers.ComponentFactoryResolver).reference)) {\n        result = o.THIS_EXPR;\n      }\n      if (!result) {\n        result = this._instances.get(dep.token.reference);\n      }\n    }\n    if (!result) {\n      var args = [createDiTokenExpression(dep.token)];\n      if (dep.isOptional) {\n        args.push(o.NULL_EXPR);\n      }\n      result = InjectorProps.parent.callMethod('get', args);\n    }\n    return result;\n  }\n}\n\nclass InjectorProps {\n  static parent = o.THIS_EXPR.prop('parent');\n}\n\nclass InjectMethodVars {\n  static token = o.variable('token');\n  static notFoundResult = o.variable('notFoundResult');\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}