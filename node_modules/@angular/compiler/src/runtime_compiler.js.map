{"version":3,"file":"runtime_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/runtime_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactory, Injectable, Injector, ModuleWithComponentFactories, NgModuleFactory, SchemaMetadata, Type} from '@angular/core';\nimport {AnimationCompiler} from './animation/animation_compiler';\nimport {AnimationParser} from './animation/animation_parser';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompilePipeMetadata, ProviderMeta, createHostComponentMeta} from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {stringify} from './facade/lang';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {NgModuleCompiler} from './ng_module_compiler';\nimport * as ir from './output/output_ast';\nimport {interpretStatements} from './output/output_interpreter';\nimport {jitStatements} from './output/output_jit';\nimport {ComponentStillLoadingError} from './private_import_core';\nimport {CompiledStylesheet, StyleCompiler} from './style_compiler';\nimport {TemplateParser} from './template_parser/template_parser';\nimport {SyncAsyncResult} from './util';\nimport {ComponentFactoryDependency, ViewCompiler, ViewFactoryDependency} from './view_compiler/view_compiler';\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * @security  When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\n\nexport class RuntimeCompiler implements Compiler {\n  private _compiledTemplateCache = new Map<Type<any>, CompiledTemplate>();\n  private _compiledHostTemplateCache = new Map<Type<any>, CompiledTemplate>();\n  private _compiledNgModuleCache = new Map<Type<any>, NgModuleFactory<any>>();\n  private _animationParser = new AnimationParser();\n  private _animationCompiler = new AnimationCompiler();\n\n  constructor(\n      private _injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      private _templateNormalizer: DirectiveNormalizer, private _templateParser: TemplateParser,\n      private _styleCompiler: StyleCompiler, private _viewCompiler: ViewCompiler,\n      private _ngModuleCompiler: NgModuleCompiler, private _compilerConfig: CompilerConfig) {}\n\n  get injector(): Injector { return this._injector; }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._compileModuleAndComponents(moduleType, true).syncResult;\n  }\n\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._compileModuleAndComponents(moduleType, false).asyncResult;\n  }\n\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n  }\n\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n  }\n\n  private _compileModuleAndComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<NgModuleFactory<T>> {\n    const componentPromise = this._compileComponents(moduleType, isSync);\n    const ngModuleFactory = this._compileModule(moduleType);\n    return new SyncAsyncResult(ngModuleFactory, componentPromise.then(() => ngModuleFactory));\n  }\n\n  private _compileModuleAndAllComponents<T>(moduleType: Type<T>, isSync: boolean):\n      SyncAsyncResult<ModuleWithComponentFactories<T>> {\n    const componentPromise = this._compileComponents(moduleType, isSync);\n    const ngModuleFactory = this._compileModule(moduleType);\n    const moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n    const componentFactories: ComponentFactory<any>[] = [];\n    const templates = new Set<CompiledTemplate>();\n    moduleMeta.transitiveModule.modules.forEach((moduleMeta) => {\n      moduleMeta.declaredDirectives.forEach((dirMeta) => {\n        if (dirMeta.isComponent) {\n          const template = this._createCompiledHostTemplate(dirMeta.type.reference);\n          templates.add(template);\n          componentFactories.push(template.proxyComponentFactory);\n        }\n      });\n    });\n    const syncResult = new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    // Note: host components themselves can always be compiled synchronously as they have an\n    // inline template. However, we still need to wait for the components that they\n    // reference to be loaded / compiled.\n    const compile = () => {\n      templates.forEach((template) => { this._compileTemplate(template); });\n      return syncResult;\n    };\n    const asyncResult = isSync ? Promise.resolve(compile()) : componentPromise.then(compile);\n    return new SyncAsyncResult(syncResult, asyncResult);\n  }\n\n  private _compileModule<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    let ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n    if (!ngModuleFactory) {\n      const moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n      // Always provide a bound Compiler\n      const extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(\n          Compiler, {useFactory: () => new ModuleBoundCompiler(this, moduleMeta.type.reference)}))];\n      var compileResult = this._ngModuleCompiler.compile(moduleMeta, extraProviders);\n      compileResult.dependencies.forEach((dep) => {\n        dep.placeholder.reference =\n            this._assertComponentKnown(dep.comp.reference, true).proxyComponentFactory;\n        dep.placeholder.name = `compFactory_${dep.comp.name}`;\n      });\n      if (!this._compilerConfig.useJit) {\n        ngModuleFactory =\n            interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n      } else {\n        ngModuleFactory = jitStatements(\n            `${moduleMeta.type.name}.ngfactory.js`, compileResult.statements,\n            compileResult.ngModuleFactoryVar);\n      }\n      this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n\n  /**\n   * @internal\n   */\n  _compileComponents(mainModule: Type<any>, isSync: boolean): Promise<any> {\n    const templates = new Set<CompiledTemplate>();\n    var loadingPromises: Promise<any>[] = [];\n\n    const ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n    ngModule.transitiveModule.modules.forEach((localModuleMeta) => {\n      localModuleMeta.declaredDirectives.forEach((dirMeta) => {\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            templates.add(this._createCompiledHostTemplate(entryComponentType.reference));\n          });\n          // TODO: what about entryComponents of entryComponents? maybe skip here and just do the\n          // below?\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        templates.add(this._createCompiledHostTemplate(entryComponentType.reference));\n        // TODO: what about entryComponents of entryComponents?\n      });\n    });\n    templates.forEach((template) => {\n      if (template.loading) {\n        if (isSync) {\n          throw new ComponentStillLoadingError(template.compType.reference);\n        } else {\n          loadingPromises.push(template.loading);\n        }\n      }\n    });\n    const compile =\n        () => { templates.forEach((template) => { this._compileTemplate(template); }); };\n    if (isSync) {\n      compile();\n      return Promise.resolve(null);\n    } else {\n      return Promise.all(loadingPromises).then(compile);\n    }\n  }\n\n  clearCacheFor(type: Type<any>) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    var compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._templateNormalizer.clearCacheFor(compiledTemplate.normalizedCompMeta);\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n\n  clearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._templateNormalizer.clearCache();\n    this._compiledNgModuleCache.clear();\n  }\n\n  private _createCompiledHostTemplate(compType: Type<any>): CompiledTemplate {\n    var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n      var hostMeta = createHostComponentMeta(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          true, compMeta.selector, compMeta.type, [compMeta], [], [],\n          this._templateNormalizer.normalizeDirective(hostMeta));\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n    if (!compiledTemplate) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.selector, compMeta.type, ngModule.transitiveModule.directives,\n          ngModule.transitiveModule.pipes, ngModule.schemas,\n          this._templateNormalizer.normalizeDirective(compMeta));\n      this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _assertComponentKnown(compType: any, isHost: boolean): CompiledTemplate {\n    const compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n                                      this._compiledTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      if (isHost) {\n        throw new Error(\n            `Illegal state: Compiled view for component ${stringify(compType)} does not exist!`);\n      } else {\n        throw new Error(\n            `Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n      }\n    }\n    return compiledTemplate;\n  }\n\n  private _assertComponentLoaded(compType: any, isHost: boolean): CompiledTemplate {\n    const compiledTemplate = this._assertComponentKnown(compType, isHost);\n    if (compiledTemplate.loading) {\n      throw new Error(\n          `Illegal state: CompiledTemplate for ${stringify(compType)} (isHost: ${isHost}) is still loading!`);\n    }\n    return compiledTemplate;\n  }\n\n  private _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const compMeta = template.normalizedCompMeta;\n    const externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n    stylesCompileResult.externalStylesheets.forEach(\n        (r) => { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n    this._resolveStylesCompileResult(\n        stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n    const viewCompMetas = template.viewComponentTypes.map(\n        (compType) => this._assertComponentLoaded(compType, false).normalizedCompMeta);\n    const parsedAnimations = this._animationParser.parseComponent(compMeta);\n    const parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, template.viewDirectives.concat(viewCompMetas),\n        template.viewPipes, template.schemas, compMeta.type.name);\n    const compiledAnimations =\n        this._animationCompiler.compile(compMeta.type.name, parsedAnimations);\n    const compileResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, ir.variable(stylesCompileResult.componentStylesheet.stylesVar),\n        template.viewPipes, compiledAnimations);\n    compileResult.dependencies.forEach((dep) => {\n      let depTemplate: CompiledTemplate;\n      if (dep instanceof ViewFactoryDependency) {\n        let vfd = <ViewFactoryDependency>dep;\n        depTemplate = this._assertComponentLoaded(vfd.comp.reference, false);\n        vfd.placeholder.reference = depTemplate.proxyViewFactory;\n        vfd.placeholder.name = `viewFactory_${vfd.comp.name}`;\n      } else if (dep instanceof ComponentFactoryDependency) {\n        let cfd = <ComponentFactoryDependency>dep;\n        depTemplate = this._assertComponentLoaded(cfd.comp.reference, true);\n        cfd.placeholder.reference = depTemplate.proxyComponentFactory;\n        cfd.placeholder.name = `compFactory_${cfd.comp.name}`;\n      }\n    });\n    const statements =\n        stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n    compiledAnimations.forEach(\n        entry => { entry.statements.forEach(statement => { statements.push(statement); }); });\n    let factory: any;\n    if (!this._compilerConfig.useJit) {\n      factory = interpretStatements(statements, compileResult.viewFactoryVar);\n    } else {\n      factory = jitStatements(\n          `${template.compType.name}${template.isHost?'_Host':''}.ngfactory.js`, statements,\n          compileResult.viewFactoryVar);\n    }\n    template.compiled(factory);\n  }\n\n  private _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n      var nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.valuePlaceholder.reference = nestedStylesArr;\n      dep.valuePlaceholder.name = `importedStyles${i}`;\n    });\n  }\n\n  private _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(result.statements, result.stylesVar);\n    } else {\n      return jitStatements(`${result.meta.moduleUrl}.css.js`, result.statements, result.stylesVar);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Injector, },\n{type: CompileMetadataResolver, },\n{type: DirectiveNormalizer, },\n{type: TemplateParser, },\n{type: StyleCompiler, },\n{type: ViewCompiler, },\n{type: NgModuleCompiler, },\n{type: CompilerConfig, },\n];\n}\n\nclass CompiledTemplate {\n  private _viewFactory: Function = null;\n  proxyViewFactory: Function;\n  proxyComponentFactory: ComponentFactory<any>;\n  loading: Promise<any> = null;\n  private _normalizedCompMeta: CompileDirectiveMetadata = null;\n  isCompiled = false;\n  isCompiledWithDeps = false;\n  viewComponentTypes: Type<any>[] = [];\n  viewDirectives: CompileDirectiveMetadata[] = [];\n\n  constructor(\n      public isHost: boolean, selector: string, public compType: CompileIdentifierMetadata,\n      viewDirectivesAndComponents: CompileDirectiveMetadata[],\n      public viewPipes: CompilePipeMetadata[], public schemas: SchemaMetadata[],\n      _normalizeResult: SyncAsyncResult<CompileDirectiveMetadata>) {\n    viewDirectivesAndComponents.forEach((dirMeta) => {\n      if (dirMeta.isComponent) {\n        this.viewComponentTypes.push(dirMeta.type.reference);\n      } else {\n        this.viewDirectives.push(dirMeta);\n      }\n    });\n    this.proxyViewFactory = (...args: any[]) => {\n      if (!this._viewFactory) {\n        throw new Error(\n            `Illegal state: CompiledTemplate for ${stringify(this.compType)} is not compiled yet!`);\n      }\n      return this._viewFactory.apply(null, args);\n    };\n    this.proxyComponentFactory = isHost ?\n        new ComponentFactory<any>(selector, this.proxyViewFactory, compType.reference) :\n        null;\n    if (_normalizeResult.syncResult) {\n      this._normalizedCompMeta = _normalizeResult.syncResult;\n    } else {\n      this.loading = _normalizeResult.asyncResult.then((normalizedCompMeta) => {\n        this._normalizedCompMeta = normalizedCompMeta;\n        this.loading = null;\n      });\n    }\n  }\n\n  get normalizedCompMeta(): CompileDirectiveMetadata {\n    if (this.loading) {\n      throw new Error(`Template is still loading for ${this.compType.name}!`);\n    }\n    return this._normalizedCompMeta;\n  }\n\n  compiled(viewFactory: Function) {\n    this._viewFactory = viewFactory;\n    this.isCompiled = true;\n  }\n\n  depsCompiled() { this.isCompiledWithDeps = true; }\n}\n\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n\n/**\n * Implements `Compiler` by delegating to the RuntimeCompiler using a known module.\n */\nclass ModuleBoundCompiler implements Compiler {\n  constructor(private _delegate: RuntimeCompiler, private _ngModule: Type<any>) {}\n\n  get _injector(): Injector { return this._delegate.injector; }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n  }\n\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n  }\n\n  /**\n   * Clears all caches\n   */\n  clearCache(): void { this._delegate.clearCache(); }\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}