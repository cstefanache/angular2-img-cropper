{"version":3,"file":"template_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/template_parser/template_parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, OpaqueToken, Optional, SchemaMetadata, SecurityContext} from '@angular/core';\n\nimport {CompileDirectiveMetadata, CompilePipeMetadata, CompileTemplateMetadata, CompileTokenMetadata, removeIdentifierDuplicates} from '../compile_metadata';\nimport {AST, ASTWithSource, BindingPipe, EmptyExpr, Interpolation, ParserError, RecursiveAstVisitor, TemplateBinding} from '../expression_parser/ast';\nimport {Parser} from '../expression_parser/parser';\nimport {isPresent, isString} from '../facade/lang';\nimport {I18NHtmlParser} from '../i18n/i18n_html_parser';\nimport {Identifiers, identifierToken, resolveIdentifierToken} from '../identifiers';\nimport * as html from '../ml_parser/ast';\nimport {ParseTreeResult} from '../ml_parser/html_parser';\nimport {expandNodes} from '../ml_parser/icu_ast_expander';\nimport {InterpolationConfig} from '../ml_parser/interpolation_config';\nimport {mergeNsAndName, splitNsName} from '../ml_parser/tags';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {Console, MAX_INTERPOLATION_VALUES} from '../private_import_core';\nimport {ProviderElementContext, ProviderViewContext} from '../provider_analyzer';\nimport {ElementSchemaRegistry} from '../schema/element_schema_registry';\nimport {CssSelector, SelectorMatcher} from '../selector';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {splitAtColon, splitAtPeriod} from '../util';\n\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from './template_ast';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\n\n\n\n// Group 1 = \"bind-\"\n// Group 2 = \"let-\"\n// Group 3 = \"ref-/#\"\n// Group 4 = \"on-\"\n// Group 5 = \"bindon-\"\n// Group 6 = \"@\"\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n// Group 8 = identifier inside [()]\n// Group 9 = identifier inside []\n// Group 10 = identifier inside ()\nconst BIND_NAME_REGEXP =\n    /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n\nconst KW_BIND_IDX = 1;\nconst KW_LET_IDX = 2;\nconst KW_REF_IDX = 3;\nconst KW_ON_IDX = 4;\nconst KW_BINDON_IDX = 5;\nconst KW_AT_IDX = 6;\nconst IDENT_KW_IDX = 7;\nconst IDENT_BANANA_BOX_IDX = 8;\nconst IDENT_PROPERTY_IDX = 9;\nconst IDENT_EVENT_IDX = 10;\n\nconst ANIMATE_PROP_PREFIX = 'animate-';\nconst TEMPLATE_ELEMENT = 'template';\nconst TEMPLATE_ATTR = 'template';\nconst TEMPLATE_ATTR_PREFIX = '*';\nconst CLASS_ATTR = 'class';\n\nconst PROPERTY_PARTS_SEPARATOR = '.';\nconst ATTRIBUTE_PREFIX = 'attr';\nconst CLASS_PREFIX = 'class';\nconst STYLE_PREFIX = 'style';\n\nconst TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n\n/**\n * Provides an array of {@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nexport const TEMPLATE_TRANSFORMS = new OpaqueToken('TemplateTransforms');\n\nexport class TemplateParseError extends ParseError {\n  constructor(message: string, span: ParseSourceSpan, level: ParseErrorLevel) {\n    super(span, message, level);\n  }\n}\n\nexport class TemplateParseResult {\n  constructor(public templateAst?: TemplateAst[], public errors?: ParseError[]) {}\n}\n\n\nexport class TemplateParser {\n  constructor(\n      private _exprParser: Parser, private _schemaRegistry: ElementSchemaRegistry,\n      private _htmlParser: I18NHtmlParser, private _console: Console,\n        public transforms: TemplateAstVisitor[]) {}\n\n  parse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveMetadata[],\n      pipes: CompilePipeMetadata[], schemas: SchemaMetadata[], templateUrl: string): TemplateAst[] {\n    const result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n    const warnings = result.errors.filter(error => error.level === ParseErrorLevel.WARNING);\n    const errors = result.errors.filter(error => error.level === ParseErrorLevel.FATAL);\n\n    if (warnings.length > 0) {\n      this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n    }\n\n    if (errors.length > 0) {\n      const errorString = errors.join('\\n');\n      throw new Error(`Template parse errors:\\n${errorString}`);\n    }\n\n    return result.templateAst;\n  }\n\n  tryParse(\n      component: CompileDirectiveMetadata, template: string, directives: CompileDirectiveMetadata[],\n      pipes: CompilePipeMetadata[], schemas: SchemaMetadata[],\n      templateUrl: string): TemplateParseResult {\n    return this.tryParseHtml(\n        this.expandHtml(this._htmlParser.parse(\n            template, templateUrl, true, this.getInterpolationConfig(component))),\n        component, template, directives, pipes, schemas, templateUrl);\n  }\n\n  tryParseHtml(\n      htmlAstWithErrors: ParseTreeResult, component: CompileDirectiveMetadata, template: string,\n      directives: CompileDirectiveMetadata[], pipes: CompilePipeMetadata[],\n      schemas: SchemaMetadata[], templateUrl: string): TemplateParseResult {\n    var result: TemplateAst[];\n    var errors = htmlAstWithErrors.errors;\n    if (htmlAstWithErrors.rootNodes.length > 0) {\n      const uniqDirectives = removeIdentifierDuplicates(directives);\n      const uniqPipes = removeIdentifierDuplicates(pipes);\n      const providerViewContext =\n          new ProviderViewContext(component, htmlAstWithErrors.rootNodes[0].sourceSpan);\n      const parseVisitor = new TemplateParseVisitor(\n          providerViewContext, uniqDirectives, uniqPipes, schemas, this._exprParser,\n          this._schemaRegistry);\n      result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n      errors.push(...parseVisitor.errors, ...providerViewContext.errors);\n    } else {\n      result = [];\n    }\n    this._assertNoReferenceDuplicationOnTemplate(result, errors);\n\n    if (errors.length > 0) {\n      return new TemplateParseResult(result, errors);\n    }\n\n    if (isPresent(this.transforms)) {\n      this.transforms.forEach(\n          (transform: TemplateAstVisitor) => { result = templateVisitAll(transform, result); });\n    }\n\n    return new TemplateParseResult(result, errors);\n  }\n\n  expandHtml(htmlAstWithErrors: ParseTreeResult, forced: boolean = false): ParseTreeResult {\n    const errors: ParseError[] = htmlAstWithErrors.errors;\n\n    if (errors.length == 0 || forced) {\n      // Transform ICU messages to angular directives\n      const expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n      errors.push(...expandedHtmlAst.errors);\n      htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n    }\n    return htmlAstWithErrors;\n  }\n\n  getInterpolationConfig(component: CompileDirectiveMetadata): InterpolationConfig {\n    if (component.template) {\n      return InterpolationConfig.fromArray(component.template.interpolation);\n    }\n  }\n\n  /** @internal */\n  _assertNoReferenceDuplicationOnTemplate(result: TemplateAst[], errors: TemplateParseError[]):\n      void {\n    const existingReferences: string[] = [];\n\n    result.filter(element => !!(<any>element).references)\n        .forEach(element => (<any>element).references.forEach((reference: ReferenceAst) => {\n          const name = reference.name;\n          if (existingReferences.indexOf(name) < 0) {\n            existingReferences.push(name);\n          } else {\n            const error = new TemplateParseError(\n                `Reference \"#${name}\" is defined several times`, reference.sourceSpan,\n                ParseErrorLevel.FATAL);\n            errors.push(error);\n          }\n        }));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Parser, },\n{type: ElementSchemaRegistry, },\n{type: I18NHtmlParser, },\n{type: Console, },\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS, ] }, ]},\n];\n}\n\nclass TemplateParseVisitor implements html.Visitor {\n  selectorMatcher = new SelectorMatcher();\n  errors: TemplateParseError[] = [];\n  directivesIndex = new Map<CompileDirectiveMetadata, number>();\n  ngContentCount: number = 0;\n  pipesByName: Map<string, CompilePipeMetadata> = new Map();\n\n  private _interpolationConfig: InterpolationConfig;\n\n  constructor(\n      public providerViewContext: ProviderViewContext, directives: CompileDirectiveMetadata[],\n      pipes: CompilePipeMetadata[], private _schemas: SchemaMetadata[], private _exprParser: Parser,\n      private _schemaRegistry: ElementSchemaRegistry) {\n    const tempMeta = providerViewContext.component.template;\n\n    if (tempMeta && tempMeta.interpolation) {\n      this._interpolationConfig = {\n        start: tempMeta.interpolation[0],\n        end: tempMeta.interpolation[1]\n      };\n    }\n\n    directives.forEach((directive: CompileDirectiveMetadata, index: number) => {\n      const selector = CssSelector.parse(directive.selector);\n      this.selectorMatcher.addSelectables(selector, directive);\n      this.directivesIndex.set(directive, index);\n    });\n\n    pipes.forEach(pipe => this.pipesByName.set(pipe.name, pipe));\n  }\n\n  private _reportError(\n      message: string, sourceSpan: ParseSourceSpan,\n      level: ParseErrorLevel = ParseErrorLevel.FATAL) {\n    this.errors.push(new TemplateParseError(message, sourceSpan, level));\n  }\n\n  private _reportParserErrors(errors: ParserError[], sourceSpan: ParseSourceSpan) {\n    for (const error of errors) {\n      this._reportError(error.message, sourceSpan);\n    }\n  }\n\n  private _parseInterpolation(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    const sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n      if (ast) this._reportParserErrors(ast.errors, sourceSpan);\n      this._checkPipes(ast, sourceSpan);\n      if (isPresent(ast) &&\n          (<Interpolation>ast.ast).expressions.length > MAX_INTERPOLATION_VALUES) {\n        throw new Error(`Only support at most ${MAX_INTERPOLATION_VALUES} interpolation values!`);\n      }\n      return ast;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n\n  private _parseAction(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    const sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n      if (ast) {\n        this._reportParserErrors(ast.errors, sourceSpan);\n      }\n      if (!ast || ast.ast instanceof EmptyExpr) {\n        this._reportError(`Empty expressions are not allowed`, sourceSpan);\n        return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n      }\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n\n  private _parseBinding(value: string, sourceSpan: ParseSourceSpan): ASTWithSource {\n    const sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const ast = this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n      if (ast) this._reportParserErrors(ast.errors, sourceSpan);\n      this._checkPipes(ast, sourceSpan);\n      return ast;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n    }\n  }\n\n  private _parseTemplateBindings(value: string, sourceSpan: ParseSourceSpan): TemplateBinding[] {\n    const sourceInfo = sourceSpan.start.toString();\n\n    try {\n      const bindingsResult = this._exprParser.parseTemplateBindings(value, sourceInfo);\n      this._reportParserErrors(bindingsResult.errors, sourceSpan);\n      bindingsResult.templateBindings.forEach((binding) => {\n        if (isPresent(binding.expression)) {\n          this._checkPipes(binding.expression, sourceSpan);\n        }\n      });\n      bindingsResult.warnings.forEach(\n          (warning) => { this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n      return bindingsResult.templateBindings;\n    } catch (e) {\n      this._reportError(`${e}`, sourceSpan);\n      return [];\n    }\n  }\n\n  private _checkPipes(ast: ASTWithSource, sourceSpan: ParseSourceSpan) {\n    if (isPresent(ast)) {\n      const collector = new PipeCollector();\n      ast.visit(collector);\n      collector.pipes.forEach((pipeName) => {\n        if (!this.pipesByName.has(pipeName)) {\n          this._reportError(`The pipe '${pipeName}' could not be found`, sourceSpan);\n        }\n      });\n    }\n  }\n\n  visitExpansion(expansion: html.Expansion, context: any): any { return null; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return null; }\n\n  visitText(text: html.Text, parent: ElementContext): any {\n    const ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    const expr = this._parseInterpolation(text.value, text.sourceSpan);\n    if (isPresent(expr)) {\n      return new BoundTextAst(expr, ngContentIndex, text.sourceSpan);\n    } else {\n      return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n    }\n  }\n\n  visitAttribute(attribute: html.Attribute, context: any): any {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n\n  visitComment(comment: html.Comment, context: any): any { return null; }\n\n  visitElement(element: html.Element, parent: ElementContext): any {\n    const nodeName = element.name;\n    const preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE) {\n      // Skipping <script> for security reasons\n      // Skipping <style> as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n    if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n        isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n      // Skipping stylesheets with either relative urls or package scheme as we already processed\n      // them in the StyleCompiler\n      return null;\n    }\n\n    const matchableAttrs: string[][] = [];\n    const elementOrDirectiveProps: BoundElementOrDirectiveProperty[] = [];\n    const elementOrDirectiveRefs: ElementOrDirectiveRef[] = [];\n    const elementVars: VariableAst[] = [];\n    const animationProps: BoundElementPropertyAst[] = [];\n    const events: BoundEventAst[] = [];\n\n    const templateElementOrDirectiveProps: BoundElementOrDirectiveProperty[] = [];\n    const templateMatchableAttrs: string[][] = [];\n    const templateElementVars: VariableAst[] = [];\n\n    let hasInlineTemplates = false;\n    const attrs: AttrAst[] = [];\n    const lcElName = splitNsName(nodeName.toLowerCase())[1];\n    const isTemplateElement = lcElName == TEMPLATE_ELEMENT;\n\n    element.attrs.forEach(attr => {\n      const hasBinding = this._parseAttr(\n          isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, animationProps, events,\n          elementOrDirectiveRefs, elementVars);\n\n      const hasTemplateBinding = this._parseInlineTemplateBinding(\n          attr, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n\n      if (hasTemplateBinding && hasInlineTemplates) {\n        this._reportError(\n            `Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *`,\n            attr.sourceSpan);\n      }\n\n      if (!hasBinding && !hasTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attrs.push(this.visitAttribute(attr, null));\n        matchableAttrs.push([attr.name, attr.value]);\n      }\n\n      if (hasTemplateBinding) {\n        hasInlineTemplates = true;\n      }\n    });\n\n    const elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n    const {directives: directiveMetas, matchElement} =\n        this._parseDirectives(this.selectorMatcher, elementCssSelector);\n    const references: ReferenceAst[] = [];\n    const directiveAsts = this._createDirectiveAsts(\n        isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps,\n        elementOrDirectiveRefs, element.sourceSpan, references);\n    const elementProps: BoundElementPropertyAst[] =\n        this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directiveAsts)\n            .concat(animationProps);\n    const isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n    const providerContext = new ProviderElementContext(\n        this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs,\n        references, element.sourceSpan);\n    const children = html.visitAll(\n        preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children,\n        ElementContext.create(\n            isTemplateElement, directiveAsts,\n            isTemplateElement ? parent.providerContext : providerContext));\n    providerContext.afterElement();\n    // Override the actual selector when the `ngProjectAs` attribute is provided\n    const projectionSelector = isPresent(preparsedElement.projectAs) ?\n        CssSelector.parse(preparsedElement.projectAs)[0] :\n        elementCssSelector;\n    const ngContentIndex = parent.findNgContentIndex(projectionSelector);\n    let parsedElement: TemplateAst;\n\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      if (element.children && !element.children.every(_isEmptyTextNode)) {\n        this._reportError(`<ng-content> element cannot have content.`, element.sourceSpan);\n      }\n\n      parsedElement = new NgContentAst(\n          this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else if (isTemplateElement) {\n      this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          directiveAsts, elementProps, element.sourceSpan);\n\n      parsedElement = new EmbeddedTemplateAst(\n          attrs, events, references, elementVars, providerContext.transformedDirectiveAsts,\n          providerContext.transformProviders, providerContext.transformedHasViewContainer, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n    } else {\n      this._assertElementExists(matchElement, element);\n      this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n\n      const ngContentIndex =\n          hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n      parsedElement = new ElementAst(\n          nodeName, attrs, elementProps, events, references,\n          providerContext.transformedDirectiveAsts, providerContext.transformProviders,\n          providerContext.transformedHasViewContainer, children,\n          hasInlineTemplates ? null : ngContentIndex, element.sourceSpan, element.endSourceSpan);\n\n      this._findComponentDirectives(directiveAsts)\n          .forEach(\n              componentDirectiveAst => this._validateElementAnimationInputOutputs(\n                  componentDirectiveAst.hostProperties, componentDirectiveAst.hostEvents,\n                  componentDirectiveAst.directive.template));\n\n      const componentTemplate = providerContext.viewContext.component.template;\n      this._validateElementAnimationInputOutputs(elementProps, events, componentTemplate);\n    }\n\n    if (hasInlineTemplates) {\n      const templateCssSelector =\n          createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n      const {directives: templateDirectiveMetas} =\n          this._parseDirectives(this.selectorMatcher, templateCssSelector);\n      const templateDirectiveAsts = this._createDirectiveAsts(\n          true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [],\n          element.sourceSpan, []);\n      const templateElementProps: BoundElementPropertyAst[] = this._createElementPropertyAsts(\n          element.name, templateElementOrDirectiveProps, templateDirectiveAsts);\n      this._assertNoComponentsNorElementBindingsOnTemplate(\n          templateDirectiveAsts, templateElementProps, element.sourceSpan);\n      const templateProviderContext = new ProviderElementContext(\n          this.providerViewContext, parent.providerContext, parent.isTemplateElement,\n          templateDirectiveAsts, [], [], element.sourceSpan);\n      templateProviderContext.afterElement();\n\n      parsedElement = new EmbeddedTemplateAst(\n          [], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts,\n          templateProviderContext.transformProviders,\n          templateProviderContext.transformedHasViewContainer, [parsedElement], ngContentIndex,\n          element.sourceSpan);\n    }\n\n    return parsedElement;\n  }\n\n  private _validateElementAnimationInputOutputs(\n      inputs: BoundElementPropertyAst[], outputs: BoundEventAst[],\n      template: CompileTemplateMetadata) {\n    const triggerLookup = new Set<string>();\n    template.animations.forEach(entry => { triggerLookup.add(entry.name); });\n\n    const animationInputs = inputs.filter(input => input.isAnimation);\n    animationInputs.forEach(input => {\n      const name = input.name;\n      if (!triggerLookup.has(name)) {\n        this._reportError(`Couldn't find an animation entry for \"${name}\"`, input.sourceSpan);\n      }\n    });\n\n    outputs.forEach(output => {\n      if (output.isAnimation) {\n        const found = animationInputs.find(input => input.name == output.name);\n        if (!found) {\n          this._reportError(\n              `Unable to listen on (@${output.name}.${output.phase}) because the animation trigger [@${output.name}] isn't being used on the same element`,\n              output.sourceSpan);\n        }\n      }\n    });\n  }\n\n  private _parseInlineTemplateBinding(\n      attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: BoundElementOrDirectiveProperty[], targetVars: VariableAst[]): boolean {\n    let templateBindingsSource: string = null;\n    if (this._normalizeAttributeName(attr.name) == TEMPLATE_ATTR) {\n      templateBindingsSource = attr.value;\n    } else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n      const key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length);  // remove the star\n      templateBindingsSource = (attr.value.length == 0) ? key : key + ' ' + attr.value;\n    }\n    if (isPresent(templateBindingsSource)) {\n      const bindings = this._parseTemplateBindings(templateBindingsSource, attr.sourceSpan);\n      for (let i = 0; i < bindings.length; i++) {\n        const binding = bindings[i];\n        if (binding.keyIsVar) {\n          targetVars.push(new VariableAst(binding.key, binding.name, attr.sourceSpan));\n        } else if (isPresent(binding.expression)) {\n          this._parsePropertyAst(\n              binding.key, binding.expression, attr.sourceSpan, targetMatchableAttrs, targetProps);\n        } else {\n          targetMatchableAttrs.push([binding.key, '']);\n          this._parseLiteralAttr(binding.key, null, attr.sourceSpan, targetProps);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _parseAttr(\n      isTemplateElement: boolean, attr: html.Attribute, targetMatchableAttrs: string[][],\n      targetProps: BoundElementOrDirectiveProperty[],\n      targetAnimationProps: BoundElementPropertyAst[], targetEvents: BoundEventAst[],\n      targetRefs: ElementOrDirectiveRef[], targetVars: VariableAst[]): boolean {\n    const name = this._normalizeAttributeName(attr.name);\n    const value = attr.value;\n    const srcSpan = attr.sourceSpan;\n\n    const bindParts = name.match(BIND_NAME_REGEXP);\n    let hasBinding = false;\n\n    if (bindParts !== null) {\n      hasBinding = true;\n      if (isPresent(bindParts[KW_BIND_IDX])) {\n        this._parsePropertyOrAnimation(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetProps,\n            targetAnimationProps);\n\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const identifier = bindParts[IDENT_KW_IDX];\n          this._parseVariable(identifier, value, srcSpan, targetVars);\n        } else {\n          this._reportError(`\"let-\" is only supported on template elements.`, srcSpan);\n        }\n\n      } else if (bindParts[KW_REF_IDX]) {\n        const identifier = bindParts[IDENT_KW_IDX];\n        this._parseReference(identifier, value, srcSpan, targetRefs);\n\n      } else if (bindParts[KW_ON_IDX]) {\n        this._parseEventOrAnimationEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_BINDON_IDX]) {\n        this._parsePropertyOrAnimation(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetProps,\n            targetAnimationProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[KW_AT_IDX]) {\n        if (_isAnimationLabel(name) && isPresent(value) && value.length > 0) {\n          this._reportError(\n              `Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid.` +\n                  ` Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.`,\n              srcSpan, ParseErrorLevel.FATAL);\n        }\n        this._parseAnimation(\n            bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetAnimationProps);\n      } else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n        this._parsePropertyOrAnimation(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetProps,\n            targetAnimationProps);\n        this._parseAssignmentEvent(\n            bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n\n      } else if (bindParts[IDENT_PROPERTY_IDX]) {\n        this._parsePropertyOrAnimation(\n            bindParts[IDENT_PROPERTY_IDX], value, srcSpan, targetMatchableAttrs, targetProps,\n            targetAnimationProps);\n\n      } else if (bindParts[IDENT_EVENT_IDX]) {\n        this._parseEventOrAnimationEvent(\n            bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n      }\n    } else {\n      hasBinding =\n          this._parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n    }\n\n    if (!hasBinding) {\n      this._parseLiteralAttr(name, value, srcSpan, targetProps);\n    }\n\n    return hasBinding;\n  }\n\n  private _normalizeAttributeName(attrName: string): string {\n    return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n  }\n\n  private _parseVariable(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan, targetVars: VariableAst[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    }\n\n    targetVars.push(new VariableAst(identifier, value, sourceSpan));\n  }\n\n  private _parseReference(\n      identifier: string, value: string, sourceSpan: ParseSourceSpan,\n      targetRefs: ElementOrDirectiveRef[]) {\n    if (identifier.indexOf('-') > -1) {\n      this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    }\n\n    targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n  }\n\n  private _parsePropertyOrAnimation(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetProps: BoundElementOrDirectiveProperty[],\n      targetAnimationProps: BoundElementPropertyAst[]) {\n    const animatePropLength = ANIMATE_PROP_PREFIX.length;\n    var isAnimationProp = _isAnimationLabel(name);\n    var animationPrefixLength = 1;\n    if (name.substring(0, animatePropLength) == ANIMATE_PROP_PREFIX) {\n      isAnimationProp = true;\n      animationPrefixLength = animatePropLength;\n    }\n\n    if (isAnimationProp) {\n      this._parseAnimation(\n          name.substr(animationPrefixLength), expression, sourceSpan, targetMatchableAttrs,\n          targetAnimationProps);\n    } else {\n      this._parsePropertyAst(\n          name, this._parseBinding(expression, sourceSpan), sourceSpan, targetMatchableAttrs,\n          targetProps);\n    }\n  }\n\n  private _parseAnimation(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetAnimationProps: BoundElementPropertyAst[]) {\n    // This will occur when a @trigger is not paired with an expression.\n    // For animations it is valid to not have an expression since */void\n    // states will be applied by angular when the element is attached/detached\n    if (!isPresent(expression) || expression.length == 0) {\n      expression = 'null';\n    }\n\n    const ast = this._parseBinding(expression, sourceSpan);\n    targetMatchableAttrs.push([name, ast.source]);\n    targetAnimationProps.push(new BoundElementPropertyAst(\n        name, PropertyBindingType.Animation, SecurityContext.NONE, ast, null, sourceSpan));\n  }\n\n  private _parsePropertyInterpolation(\n      name: string, value: string, sourceSpan: ParseSourceSpan, targetMatchableAttrs: string[][],\n      targetProps: BoundElementOrDirectiveProperty[]): boolean {\n    const expr = this._parseInterpolation(value, sourceSpan);\n    if (isPresent(expr)) {\n      this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n      return true;\n    }\n    return false;\n  }\n\n  private _parsePropertyAst(\n      name: string, ast: ASTWithSource, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetProps: BoundElementOrDirectiveProperty[]) {\n    targetMatchableAttrs.push([name, ast.source]);\n    targetProps.push(new BoundElementOrDirectiveProperty(name, ast, false, sourceSpan));\n  }\n\n  private _parseAssignmentEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    this._parseEventOrAnimationEvent(\n        `${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n  }\n\n  private _parseEventOrAnimationEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    if (_isAnimationLabel(name)) {\n      name = name.substr(1);\n      this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n    } else {\n      this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n    }\n  }\n\n  private _parseAnimationEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetEvents: BoundEventAst[]) {\n    const matches = splitAtPeriod(name, [name, '']);\n    const eventName = matches[0];\n    const phase = matches[1].toLowerCase();\n    if (phase) {\n      switch (phase) {\n        case 'start':\n        case 'done':\n          const ast = this._parseAction(expression, sourceSpan);\n          targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n          break;\n\n        default:\n          this._reportError(\n              `The provided animation output phase value \"${phase}\" for \"@${eventName}\" is not supported (use start or done)`,\n              sourceSpan);\n          break;\n      }\n    } else {\n      this._reportError(\n          `The animation trigger output event (@${eventName}) is missing its phase value name (start or done are currently supported)`,\n          sourceSpan);\n    }\n  }\n\n  private _parseEvent(\n      name: string, expression: string, sourceSpan: ParseSourceSpan,\n      targetMatchableAttrs: string[][], targetEvents: BoundEventAst[]) {\n    // long format: 'target: eventName'\n    const [target, eventName] = splitAtColon(name, [null, name]);\n    const ast = this._parseAction(expression, sourceSpan);\n    targetMatchableAttrs.push([name, ast.source]);\n    targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n    // Don't detect directives for event names for now,\n    // so don't add the event name to the matchableAttrs\n  }\n\n  private _parseLiteralAttr(\n      name: string, value: string, sourceSpan: ParseSourceSpan,\n      targetProps: BoundElementOrDirectiveProperty[]) {\n    targetProps.push(new BoundElementOrDirectiveProperty(\n        name, this._exprParser.wrapLiteralPrimitive(value, ''), true, sourceSpan));\n  }\n\n  private _parseDirectives(selectorMatcher: SelectorMatcher, elementCssSelector: CssSelector):\n      {directives: CompileDirectiveMetadata[], matchElement: boolean} {\n    // Need to sort the directives so that we get consistent results throughout,\n    // as selectorMatcher uses Maps inside.\n    // Also deduplicate directives as they might match more than one time!\n    const directives = new Array(this.directivesIndex.size);\n    // Whether any directive selector matches on the element name\n    let matchElement = false;\n\n    selectorMatcher.match(elementCssSelector, (selector, directive) => {\n      directives[this.directivesIndex.get(directive)] = directive;\n      matchElement = matchElement || selector.hasElementSelector();\n    });\n\n    return {\n      directives: directives.filter(dir => !!dir),\n      matchElement,\n    };\n  }\n\n  private _createDirectiveAsts(\n      isTemplateElement: boolean, elementName: string, directives: CompileDirectiveMetadata[],\n      props: BoundElementOrDirectiveProperty[], elementOrDirectiveRefs: ElementOrDirectiveRef[],\n      elementSourceSpan: ParseSourceSpan, targetReferences: ReferenceAst[]): DirectiveAst[] {\n    const matchedReferences = new Set<string>();\n    let component: CompileDirectiveMetadata = null;\n    const directiveAsts = directives.map((directive: CompileDirectiveMetadata) => {\n      const sourceSpan = new ParseSourceSpan(\n          elementSourceSpan.start, elementSourceSpan.end, `Directive ${directive.type.name}`);\n      if (directive.isComponent) {\n        component = directive;\n      }\n      const hostProperties: BoundElementPropertyAst[] = [];\n      const hostEvents: BoundEventAst[] = [];\n      const directiveProperties: BoundDirectivePropertyAst[] = [];\n      this._createDirectiveHostPropertyAsts(\n          elementName, directive.hostProperties, sourceSpan, hostProperties);\n      this._createDirectiveHostEventAsts(directive.hostListeners, sourceSpan, hostEvents);\n      this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);\n      elementOrDirectiveRefs.forEach((elOrDirRef) => {\n        if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n            (directive.exportAs == elOrDirRef.value)) {\n          targetReferences.push(new ReferenceAst(\n              elOrDirRef.name, identifierToken(directive.type), elOrDirRef.sourceSpan));\n          matchedReferences.add(elOrDirRef.name);\n        }\n      });\n      return new DirectiveAst(\n          directive, directiveProperties, hostProperties, hostEvents, sourceSpan);\n    });\n    elementOrDirectiveRefs.forEach((elOrDirRef) => {\n      if (elOrDirRef.value.length > 0) {\n        if (!matchedReferences.has(elOrDirRef.name)) {\n          this._reportError(\n              `There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`,\n              elOrDirRef.sourceSpan);\n        }\n      } else if (!component) {\n        let refToken: CompileTokenMetadata = null;\n        if (isTemplateElement) {\n          refToken = resolveIdentifierToken(Identifiers.TemplateRef);\n        }\n        targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n      }\n    });  // fix syntax highlighting issue: `\n    return directiveAsts;\n  }\n\n  private _createDirectiveHostPropertyAsts(\n      elementName: string, hostProps: {[key: string]: string}, sourceSpan: ParseSourceSpan,\n      targetPropertyAsts: BoundElementPropertyAst[]) {\n    if (hostProps) {\n      Object.keys(hostProps).forEach(propName => {\n        const expression = hostProps[propName];\n        if (isString(expression)) {\n          const exprAst = this._parseBinding(expression, sourceSpan);\n          targetPropertyAsts.push(\n              this._createElementPropertyAst(elementName, propName, exprAst, sourceSpan));\n        } else {\n          this._reportError(\n              `Value of the host property binding \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`,\n              sourceSpan);\n        }\n      });\n    }\n  }\n\n  private _createDirectiveHostEventAsts(\n      hostListeners: {[key: string]: string}, sourceSpan: ParseSourceSpan,\n      targetEventAsts: BoundEventAst[]) {\n    if (hostListeners) {\n      Object.keys(hostListeners).forEach(propName => {\n        const expression = hostListeners[propName];\n        if (isString(expression)) {\n          this._parseEventOrAnimationEvent(propName, expression, sourceSpan, [], targetEventAsts);\n        } else {\n          this._reportError(\n              `Value of the host listener \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`,\n              sourceSpan);\n        }\n      });\n    }\n  }\n\n  private _createDirectivePropertyAsts(\n      directiveProperties: {[key: string]: string}, boundProps: BoundElementOrDirectiveProperty[],\n      targetBoundDirectiveProps: BoundDirectivePropertyAst[]) {\n    if (directiveProperties) {\n      const boundPropsByName = new Map<string, BoundElementOrDirectiveProperty>();\n      boundProps.forEach(boundProp => {\n        const prevValue = boundPropsByName.get(boundProp.name);\n        if (!prevValue || prevValue.isLiteral) {\n          // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n          boundPropsByName.set(boundProp.name, boundProp);\n        }\n      });\n\n      Object.keys(directiveProperties).forEach(dirProp => {\n        const elProp = directiveProperties[dirProp];\n        const boundProp = boundPropsByName.get(elProp);\n\n        // Bindings are optional, so this binding only needs to be set up if an expression is given.\n        if (boundProp) {\n          targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(\n              dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n        }\n      });\n    }\n  }\n\n  private _createElementPropertyAsts(\n      elementName: string, props: BoundElementOrDirectiveProperty[],\n      directives: DirectiveAst[]): BoundElementPropertyAst[] {\n    const boundElementProps: BoundElementPropertyAst[] = [];\n    const boundDirectivePropsIndex = new Map<string, BoundDirectivePropertyAst>();\n\n    directives.forEach((directive: DirectiveAst) => {\n      directive.inputs.forEach((prop: BoundDirectivePropertyAst) => {\n        boundDirectivePropsIndex.set(prop.templateName, prop);\n      });\n    });\n\n    props.forEach((prop: BoundElementOrDirectiveProperty) => {\n      if (!prop.isLiteral && !boundDirectivePropsIndex.get(prop.name)) {\n        boundElementProps.push(this._createElementPropertyAst(\n            elementName, prop.name, prop.expression, prop.sourceSpan));\n      }\n    });\n    return boundElementProps;\n  }\n\n  private _createElementPropertyAst(\n      elementName: string, name: string, ast: AST,\n      sourceSpan: ParseSourceSpan): BoundElementPropertyAst {\n    let unit: string = null;\n    let bindingType: PropertyBindingType;\n    let boundPropertyName: string;\n    const parts = name.split(PROPERTY_PARTS_SEPARATOR);\n    let securityContext: SecurityContext;\n\n    if (parts.length === 1) {\n      var partValue = parts[0];\n      if (_isAnimationLabel(partValue)) {\n        boundPropertyName = partValue.substr(1);\n        bindingType = PropertyBindingType.Animation;\n        securityContext = SecurityContext.NONE;\n      } else {\n        boundPropertyName = this._schemaRegistry.getMappedPropName(partValue);\n        securityContext = this._schemaRegistry.securityContext(elementName, boundPropertyName);\n        bindingType = PropertyBindingType.Property;\n        this._validatePropertyOrAttributeName(boundPropertyName, sourceSpan, false);\n        if (!this._schemaRegistry.hasProperty(elementName, boundPropertyName, this._schemas)) {\n          let errorMsg =\n              `Can't bind to '${boundPropertyName}' since it isn't a known property of '${elementName}'.`;\n          if (elementName.indexOf('-') > -1) {\n            errorMsg +=\n                `\\n1. If '${elementName}' is an Angular component and it has '${boundPropertyName}' input, then verify that it is part of this module.` +\n                `\\n2. If '${elementName}' is a Web Component then add \"CUSTOM_ELEMENTS_SCHEMA\" to the '@NgModule.schemas' of this component to suppress this message.\\n`;\n          }\n          this._reportError(errorMsg, sourceSpan);\n        }\n      }\n    } else {\n      if (parts[0] == ATTRIBUTE_PREFIX) {\n        boundPropertyName = parts[1];\n        this._validatePropertyOrAttributeName(boundPropertyName, sourceSpan, true);\n        // NB: For security purposes, use the mapped property name, not the attribute name.\n        const mapPropName = this._schemaRegistry.getMappedPropName(boundPropertyName);\n        securityContext = this._schemaRegistry.securityContext(elementName, mapPropName);\n\n        const nsSeparatorIdx = boundPropertyName.indexOf(':');\n        if (nsSeparatorIdx > -1) {\n          const ns = boundPropertyName.substring(0, nsSeparatorIdx);\n          const name = boundPropertyName.substring(nsSeparatorIdx + 1);\n          boundPropertyName = mergeNsAndName(ns, name);\n        }\n\n        bindingType = PropertyBindingType.Attribute;\n      } else if (parts[0] == CLASS_PREFIX) {\n        boundPropertyName = parts[1];\n        bindingType = PropertyBindingType.Class;\n        securityContext = SecurityContext.NONE;\n      } else if (parts[0] == STYLE_PREFIX) {\n        unit = parts.length > 2 ? parts[2] : null;\n        boundPropertyName = parts[1];\n        bindingType = PropertyBindingType.Style;\n        securityContext = SecurityContext.STYLE;\n      } else {\n        this._reportError(`Invalid property name '${name}'`, sourceSpan);\n        bindingType = null;\n        securityContext = null;\n      }\n    }\n\n    return new BoundElementPropertyAst(\n        boundPropertyName, bindingType, securityContext, ast, unit, sourceSpan);\n  }\n\n\n  /**\n   * @param propName the name of the property / attribute\n   * @param sourceSpan\n   * @param isAttr true when binding to an attribute\n   * @private\n   */\n  private _validatePropertyOrAttributeName(\n      propName: string, sourceSpan: ParseSourceSpan, isAttr: boolean): void {\n    const report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n                            this._schemaRegistry.validateProperty(propName);\n    if (report.error) {\n      this._reportError(report.msg, sourceSpan, ParseErrorLevel.FATAL);\n    }\n  }\n\n  private _findComponentDirectives(directives: DirectiveAst[]): DirectiveAst[] {\n    return directives.filter(directive => directive.directive.isComponent);\n  }\n\n  private _findComponentDirectiveNames(directives: DirectiveAst[]): string[] {\n    return this._findComponentDirectives(directives)\n        .map(directive => directive.directive.type.name);\n  }\n\n  private _assertOnlyOneComponent(directives: DirectiveAst[], sourceSpan: ParseSourceSpan) {\n    const componentTypeNames = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 1) {\n      this._reportError(`More than one component: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n  }\n\n  /**\n   * Make sure that non-angular tags conform to the schemas.\n   *\n   * Note: An element is considered an angular tag when at least one directive selector matches the\n   * tag name.\n   *\n   * @param matchElement Whether any directive has matched on the tag name\n   * @param element the html element\n   */\n  private _assertElementExists(matchElement: boolean, element: html.Element) {\n    const elName = element.name.replace(/^:xhtml:/, '');\n\n    if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n      const errorMsg = `'${elName}' is not a known element:\\n` +\n          `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n` +\n          `2. If '${elName}' is a Web Component then add \"CUSTOM_ELEMENTS_SCHEMA\" to the '@NgModule.schemas' of this component to suppress this message.`;\n      this._reportError(errorMsg, element.sourceSpan);\n    }\n  }\n\n  private _assertNoComponentsNorElementBindingsOnTemplate(\n      directives: DirectiveAst[], elementProps: BoundElementPropertyAst[],\n      sourceSpan: ParseSourceSpan) {\n    const componentTypeNames: string[] = this._findComponentDirectiveNames(directives);\n    if (componentTypeNames.length > 0) {\n      this._reportError(\n          `Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n    }\n    elementProps.forEach(prop => {\n      this._reportError(\n          `Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"directives\" section.`,\n          sourceSpan);\n    });\n  }\n\n  private _assertAllEventsPublishedByDirectives(\n      directives: DirectiveAst[], events: BoundEventAst[]) {\n    const allDirectiveEvents = new Set<string>();\n\n    directives.forEach(directive => {\n      Object.keys(directive.directive.outputs).forEach(k => {\n        const eventName = directive.directive.outputs[k];\n        allDirectiveEvents.add(eventName);\n      });\n    });\n\n    events.forEach(event => {\n      if (isPresent(event.target) || !allDirectiveEvents.has(event.name)) {\n        this._reportError(\n            `Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"directives\" section.`,\n            event.sourceSpan);\n      }\n    });\n  }\n}\n\nclass NonBindableVisitor implements html.Visitor {\n  visitElement(ast: html.Element, parent: ElementContext): ElementAst {\n    const preparsedElement = preparseElement(ast);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n        preparsedElement.type === PreparsedElementType.STYLE ||\n        preparsedElement.type === PreparsedElementType.STYLESHEET) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const attrNameAndValues = ast.attrs.map(attrAst => [attrAst.name, attrAst.value]);\n    const selector = createElementCssSelector(ast.name, attrNameAndValues);\n    const ngContentIndex = parent.findNgContentIndex(selector);\n    const children = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n    return new ElementAst(\n        ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, children,\n        ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n  }\n  visitComment(comment: html.Comment, context: any): any { return null; }\n\n  visitAttribute(attribute: html.Attribute, context: any): AttrAst {\n    return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n  }\n\n  visitText(text: html.Text, parent: ElementContext): TextAst {\n    const ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR);\n    return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n  }\n\n  visitExpansion(expansion: html.Expansion, context: any): any { return expansion; }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase, context: any): any { return expansionCase; }\n}\n\nclass BoundElementOrDirectiveProperty {\n  constructor(\n      public name: string, public expression: AST, public isLiteral: boolean,\n      public sourceSpan: ParseSourceSpan) {}\n}\n\nclass ElementOrDirectiveRef {\n  constructor(public name: string, public value: string, public sourceSpan: ParseSourceSpan) {}\n}\n\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\n\nclass ElementContext {\n  static create(\n      isTemplateElement: boolean, directives: DirectiveAst[],\n      providerContext: ProviderElementContext): ElementContext {\n    const matcher = new SelectorMatcher();\n    let wildcardNgContentIndex: number = null;\n    const component = directives.find(directive => directive.directive.isComponent);\n    if (component) {\n      const ngContentSelectors = component.directive.template.ngContentSelectors;\n      for (let i = 0; i < ngContentSelectors.length; i++) {\n        const selector = ngContentSelectors[i];\n        if (selector === '*') {\n          wildcardNgContentIndex = i;\n        } else {\n          matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n        }\n      }\n    }\n    return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n  }\n  constructor(\n      public isTemplateElement: boolean, private _ngContentIndexMatcher: SelectorMatcher,\n      private _wildcardNgContentIndex: number, public providerContext: ProviderElementContext) {}\n\n  findNgContentIndex(selector: CssSelector): number {\n    const ngContentIndices: number[] = [];\n    this._ngContentIndexMatcher.match(\n        selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n    ngContentIndices.sort();\n    if (isPresent(this._wildcardNgContentIndex)) {\n      ngContentIndices.push(this._wildcardNgContentIndex);\n    }\n    return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n  }\n}\n\nfunction createElementCssSelector(elementName: string, matchableAttrs: string[][]): CssSelector {\n  const cssSelector = new CssSelector();\n  const elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let i = 0; i < matchableAttrs.length; i++) {\n    let attrName = matchableAttrs[i][0];\n    let attrNameNoNs = splitNsName(attrName)[1];\n    let attrValue = matchableAttrs[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nconst EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\n\nexport class PipeCollector extends RecursiveAstVisitor {\n  pipes: Set<string> = new Set<string>();\n  visitPipe(ast: BindingPipe, context: any): any {\n    this.pipes.add(ast.name);\n    ast.exp.visit(this);\n    this.visitAll(ast.args, context);\n    return null;\n  }\n}\n\nfunction _isAnimationLabel(name: string): boolean {\n  return name[0] == '@';\n}\n\nfunction _isEmptyTextNode(node: html.Node): boolean {\n  return node instanceof html.Text && node.value.trim().length == 0;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}