{"version":3,"file":"output_jit.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/output/output_jit.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;OAEI,EAAC,cAAc,EAAE,SAAS,EAAC,MAAM,gBAAgB;OACjD,EAAC,kBAAkB,EAAC,MAAM,SAAS;OAEnC,EAAC,qBAAqB,EAAC,MAAM,oBAAoB;OACjD,EAAC,wBAAwB,EAAC,MAAM,uBAAuB;AAG9D,8BACI,SAAiB,EAAE,UAAyB,EAAE,SAAiB;IACjE,IAAI,SAAS,GAAG,IAAI,iBAAiB,EAAE,CAAC;IACxC,IAAI,GAAG,GAAG,qBAAqB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,SAAS,CAAC,kBAAkB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAC9C,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;AACnF,CAAC;AAED;IAAgC,qCAAwB;IAAxD;QAAgC,8BAAwB;QAC9C,kBAAa,GAAa,EAAE,CAAC;QAC7B,mBAAc,GAAU,EAAE,CAAC;IAsBrC,CAAC;IApBC,mCAAO,GAAP;QACE,IAAI,MAAM,GAAyB,EAAE,CAAC;QACtC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,6CAAiB,GAAjB,UAAkB,GAAmB,EAAE,GAA0B;QAC/D,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAClF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAO,IAAI,GAAG,EAAI,CAAC,CAAC,CAAC;QAClE,CAAC;QACD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,wBAAC;AAAD,CAAC,AAxBD,CAAgC,wBAAwB,GAwBvD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {evalExpression, isPresent} from '../facade/lang';\nimport {sanitizeIdentifier} from '../util';\n\nimport {EmitterVisitorContext} from './abstract_emitter';\nimport {AbstractJsEmitterVisitor} from './abstract_js_emitter';\nimport * as o from './output_ast';\n\nexport function jitStatements(\n    sourceUrl: string, statements: o.Statement[], resultVar: string): any {\n  var converter = new JitEmitterVisitor();\n  var ctx = EmitterVisitorContext.createRoot([resultVar]);\n  converter.visitAllStatements(statements, ctx);\n  return evalExpression(sourceUrl, resultVar, ctx.toSource(), converter.getArgs());\n}\n\nclass JitEmitterVisitor extends AbstractJsEmitterVisitor {\n  private _evalArgNames: string[] = [];\n  private _evalArgValues: any[] = [];\n\n  getArgs(): {[key: string]: any} {\n    var result: {[key: string]: any} = {};\n    for (var i = 0; i < this._evalArgNames.length; i++) {\n      result[this._evalArgNames[i]] = this._evalArgValues[i];\n    }\n    return result;\n  }\n\n  visitExternalExpr(ast: o.ExternalExpr, ctx: EmitterVisitorContext): any {\n    var value = ast.value.reference;\n    var id = this._evalArgValues.indexOf(value);\n    if (id === -1) {\n      id = this._evalArgValues.length;\n      this._evalArgValues.push(value);\n      var name = isPresent(ast.value.name) ? sanitizeIdentifier(ast.value.name) : 'val';\n      this._evalArgNames.push(sanitizeIdentifier(`jit_${name}${id}`));\n    }\n    ctx.print(this._evalArgNames[id]);\n    return null;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}