{"version":3,"file":"output_interpreter.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/output/output_interpreter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ListWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\n\nimport * as o from './output_ast';\nimport {debugOutputAstAsTypeScript} from './ts_emitter';\n\nexport function interpretStatements(statements: o.Statement[], resultVar: string): any {\n  var stmtsWithReturn = statements.concat([new o.ReturnStatement(o.variable(resultVar))]);\n  var ctx = new _ExecutionContext(null, null, null, new Map<string, any>());\n  var visitor = new StatementInterpreter();\n  var result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n  return isPresent(result) ? result.value : null;\n}\n\nfunction _executeFunctionStatements(\n    varNames: string[], varValues: any[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): any {\n  var childCtx = ctx.createChildWihtLocalVars();\n  for (var i = 0; i < varNames.length; i++) {\n    childCtx.vars.set(varNames[i], varValues[i]);\n  }\n  var result = visitor.visitAllStatements(statements, childCtx);\n  return isPresent(result) ? result.value : null;\n}\n\nclass _ExecutionContext {\n  constructor(\n      public parent: _ExecutionContext, public instance: any, public className: string,\n      public vars: Map<string, any>) {}\n\n  createChildWihtLocalVars(): _ExecutionContext {\n    return new _ExecutionContext(this, this.instance, this.className, new Map<string, any>());\n  }\n}\n\nclass ReturnValue {\n  constructor(public value: any) {}\n}\n\nfunction createDynamicClass(\n    _classStmt: o.ClassStmt, _ctx: _ExecutionContext, _visitor: StatementInterpreter): Function {\n  let propertyDescriptors: {[key: string]: any} = {};\n\n  _classStmt.getters.forEach((getter: o.ClassGetter) => {\n    // Note: use `function` instead of arrow function to capture `this`\n    propertyDescriptors[getter.name] = {\n      configurable: false,\n      get: function() {\n        let instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n      }\n    };\n  });\n  _classStmt.methods.forEach(function(method: o.ClassMethod) {\n    const paramNames = method.params.map(param => param.name);\n    // Note: use `function` instead of arrow function to capture `this`\n    propertyDescriptors[method.name] = {\n      writable: false,\n      configurable: false,\n      value: function(...args: any[]) {\n        let instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n      }\n    };\n  });\n\n  var ctorParamNames = _classStmt.constructorMethod.params.map(param => param.name);\n  // Note: use `function` instead of arrow function to capture `this`\n  var ctor = function(...args: any[]) {\n    let instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n    _classStmt.fields.forEach((field) => { this[field.name] = undefined; });\n    _executeFunctionStatements(\n        ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n  };\n  var superClass = _classStmt.parent.visitExpression(_visitor, _ctx);\n  ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n  return ctor;\n}\n\nclass StatementInterpreter implements o.StatementVisitor, o.ExpressionVisitor {\n  debugAst(ast: o.Expression|o.Statement|o.Type): string { return debugOutputAstAsTypeScript(ast); }\n\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: _ExecutionContext): any {\n    ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n    return null;\n  }\n  visitWriteVarExpr(expr: o.WriteVarExpr, ctx: _ExecutionContext): any {\n    var value = expr.value.visitExpression(this, ctx);\n    var currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(expr.name)) {\n        currCtx.vars.set(expr.name, value);\n        return value;\n      }\n      currCtx = currCtx.parent;\n    }\n    throw new Error(`Not declared variable ${expr.name}`);\n  }\n  visitReadVarExpr(ast: o.ReadVarExpr, ctx: _ExecutionContext): any {\n    var varName = ast.name;\n    if (isPresent(ast.builtin)) {\n      switch (ast.builtin) {\n        case o.BuiltinVar.Super:\n          return ctx.instance.__proto__;\n        case o.BuiltinVar.This:\n          return ctx.instance;\n        case o.BuiltinVar.CatchError:\n          varName = CATCH_ERROR_VAR;\n          break;\n        case o.BuiltinVar.CatchStack:\n          varName = CATCH_STACK_VAR;\n          break;\n        default:\n          throw new Error(`Unknown builtin variable ${ast.builtin}`);\n      }\n    }\n    var currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(varName)) {\n        return currCtx.vars.get(varName);\n      }\n      currCtx = currCtx.parent;\n    }\n    throw new Error(`Not declared variable ${varName}`);\n  }\n  visitWriteKeyExpr(expr: o.WriteKeyExpr, ctx: _ExecutionContext): any {\n    var receiver = expr.receiver.visitExpression(this, ctx);\n    var index = expr.index.visitExpression(this, ctx);\n    var value = expr.value.visitExpression(this, ctx);\n    receiver[index] = value;\n    return value;\n  }\n  visitWritePropExpr(expr: o.WritePropExpr, ctx: _ExecutionContext): any {\n    var receiver = expr.receiver.visitExpression(this, ctx);\n    var value = expr.value.visitExpression(this, ctx);\n    receiver[expr.name] = value;\n    return value;\n  }\n\n  visitInvokeMethodExpr(expr: o.InvokeMethodExpr, ctx: _ExecutionContext): any {\n    var receiver = expr.receiver.visitExpression(this, ctx);\n    var args = this.visitAllExpressions(expr.args, ctx);\n    var result: any;\n    if (isPresent(expr.builtin)) {\n      switch (expr.builtin) {\n        case o.BuiltinMethod.ConcatArray:\n          result = ListWrapper.concat(receiver, args[0]);\n          break;\n        case o.BuiltinMethod.SubscribeObservable:\n          result = receiver.subscribe({next: args[0]});\n          break;\n        case o.BuiltinMethod.Bind:\n          result = receiver.bind(args[0]);\n          break;\n        default:\n          throw new Error(`Unknown builtin method ${expr.builtin}`);\n      }\n    } else {\n      result = receiver[expr.name].apply(receiver, args);\n    }\n    return result;\n  }\n  visitInvokeFunctionExpr(stmt: o.InvokeFunctionExpr, ctx: _ExecutionContext): any {\n    var args = this.visitAllExpressions(stmt.args, ctx);\n    var fnExpr = stmt.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n      ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n      return null;\n    } else {\n      var fn = stmt.fn.visitExpression(this, ctx);\n      return fn.apply(null, args);\n    }\n  }\n  visitReturnStmt(stmt: o.ReturnStatement, ctx: _ExecutionContext): any {\n    return new ReturnValue(stmt.value.visitExpression(this, ctx));\n  }\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: _ExecutionContext): any {\n    var clazz = createDynamicClass(stmt, ctx, this);\n    ctx.vars.set(stmt.name, clazz);\n    return null;\n  }\n  visitExpressionStmt(stmt: o.ExpressionStatement, ctx: _ExecutionContext): any {\n    return stmt.expr.visitExpression(this, ctx);\n  }\n  visitIfStmt(stmt: o.IfStmt, ctx: _ExecutionContext): any {\n    var condition = stmt.condition.visitExpression(this, ctx);\n    if (condition) {\n      return this.visitAllStatements(stmt.trueCase, ctx);\n    } else if (isPresent(stmt.falseCase)) {\n      return this.visitAllStatements(stmt.falseCase, ctx);\n    }\n    return null;\n  }\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: _ExecutionContext): any {\n    try {\n      return this.visitAllStatements(stmt.bodyStmts, ctx);\n    } catch (e) {\n      var childCtx = ctx.createChildWihtLocalVars();\n      childCtx.vars.set(CATCH_ERROR_VAR, e);\n      childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n      return this.visitAllStatements(stmt.catchStmts, childCtx);\n    }\n  }\n  visitThrowStmt(stmt: o.ThrowStmt, ctx: _ExecutionContext): any {\n    throw stmt.error.visitExpression(this, ctx);\n  }\n  visitCommentStmt(stmt: o.CommentStmt, context?: any): any { return null; }\n  visitInstantiateExpr(ast: o.InstantiateExpr, ctx: _ExecutionContext): any {\n    var args = this.visitAllExpressions(ast.args, ctx);\n    var clazz = ast.classExpr.visitExpression(this, ctx);\n    return new clazz(...args);\n  }\n  visitLiteralExpr(ast: o.LiteralExpr, ctx: _ExecutionContext): any { return ast.value; }\n  visitExternalExpr(ast: o.ExternalExpr, ctx: _ExecutionContext): any {\n    return ast.value.reference;\n  }\n  visitConditionalExpr(ast: o.ConditionalExpr, ctx: _ExecutionContext): any {\n    if (ast.condition.visitExpression(this, ctx)) {\n      return ast.trueCase.visitExpression(this, ctx);\n    } else if (isPresent(ast.falseCase)) {\n      return ast.falseCase.visitExpression(this, ctx);\n    }\n    return null;\n  }\n  visitNotExpr(ast: o.NotExpr, ctx: _ExecutionContext): any {\n    return !ast.condition.visitExpression(this, ctx);\n  }\n  visitCastExpr(ast: o.CastExpr, ctx: _ExecutionContext): any {\n    return ast.value.visitExpression(this, ctx);\n  }\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: _ExecutionContext): any {\n    var paramNames = ast.params.map((param) => param.name);\n    return _declareFn(paramNames, ast.statements, ctx, this);\n  }\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: _ExecutionContext): any {\n    var paramNames = stmt.params.map((param) => param.name);\n    ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n    return null;\n  }\n  visitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: _ExecutionContext): any {\n    var lhs = () => ast.lhs.visitExpression(this, ctx);\n    var rhs = () => ast.rhs.visitExpression(this, ctx);\n\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        return lhs() == rhs();\n      case o.BinaryOperator.Identical:\n        return lhs() === rhs();\n      case o.BinaryOperator.NotEquals:\n        return lhs() != rhs();\n      case o.BinaryOperator.NotIdentical:\n        return lhs() !== rhs();\n      case o.BinaryOperator.And:\n        return lhs() && rhs();\n      case o.BinaryOperator.Or:\n        return lhs() || rhs();\n      case o.BinaryOperator.Plus:\n        return lhs() + rhs();\n      case o.BinaryOperator.Minus:\n        return lhs() - rhs();\n      case o.BinaryOperator.Divide:\n        return lhs() / rhs();\n      case o.BinaryOperator.Multiply:\n        return lhs() * rhs();\n      case o.BinaryOperator.Modulo:\n        return lhs() % rhs();\n      case o.BinaryOperator.Lower:\n        return lhs() < rhs();\n      case o.BinaryOperator.LowerEquals:\n        return lhs() <= rhs();\n      case o.BinaryOperator.Bigger:\n        return lhs() > rhs();\n      case o.BinaryOperator.BiggerEquals:\n        return lhs() >= rhs();\n      default:\n        throw new Error(`Unknown operator ${ast.operator}`);\n    }\n  }\n  visitReadPropExpr(ast: o.ReadPropExpr, ctx: _ExecutionContext): any {\n    var result: any;\n    var receiver = ast.receiver.visitExpression(this, ctx);\n    result = receiver[ast.name];\n    return result;\n  }\n  visitReadKeyExpr(ast: o.ReadKeyExpr, ctx: _ExecutionContext): any {\n    var receiver = ast.receiver.visitExpression(this, ctx);\n    var prop = ast.index.visitExpression(this, ctx);\n    return receiver[prop];\n  }\n  visitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: _ExecutionContext): any {\n    return this.visitAllExpressions(ast.entries, ctx);\n  }\n  visitLiteralMapExpr(ast: o.LiteralMapExpr, ctx: _ExecutionContext): any {\n    var result = {};\n    ast.entries.forEach(\n        (entry) => (result as any)[<string>entry[0]] =\n            (<o.Expression>entry[1]).visitExpression(this, ctx));\n    return result;\n  }\n\n  visitAllExpressions(expressions: o.Expression[], ctx: _ExecutionContext): any {\n    return expressions.map((expr) => expr.visitExpression(this, ctx));\n  }\n\n  visitAllStatements(statements: o.Statement[], ctx: _ExecutionContext): ReturnValue {\n    for (var i = 0; i < statements.length; i++) {\n      var stmt = statements[i];\n      var val = stmt.visitStatement(this, ctx);\n      if (val instanceof ReturnValue) {\n        return val;\n      }\n    }\n    return null;\n  }\n}\n\nfunction _declareFn(\n    varNames: string[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): Function {\n  return (...args: any[]) => _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n}\n\nvar CATCH_ERROR_VAR = 'error';\nvar CATCH_STACK_VAR = 'stack';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}