{"version":3,"file":"metadata_resolver.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/metadata_resolver.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationAnimateMetadata, AnimationEntryMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationStateDeclarationMetadata, AnimationStateMetadata, AnimationStateTransitionMetadata, AnimationStyleMetadata, AnimationWithStepsMetadata, Attribute, ChangeDetectionStrategy, Component, Host, Inject, Injectable, ModuleWithProviders, Optional, Provider, Query, SchemaMetadata, Self, SkipSelf, Type, resolveForwardRef} from '@angular/core';\n\nimport {assertArrayOfStrings, assertInterpolationSymbols} from './assertions';\nimport * as cpl from './compile_metadata';\nimport {DirectiveResolver} from './directive_resolver';\nimport {isBlank, isPresent, isString, stringify} from './facade/lang';\nimport {Identifiers, resolveIdentifierToken} from './identifiers';\nimport {hasLifecycleHook} from './lifecycle_reflector';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {LIFECYCLE_HOOKS_VALUES, ReflectorReader, reflector} from './private_import_core';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {getUrlScheme} from './url_resolver';\nimport {MODULE_SUFFIX, ValueTransformer, sanitizeIdentifier, visitValue} from './util';\n\n\nexport class CompileMetadataResolver {\n  private _directiveCache = new Map<Type<any>, cpl.CompileDirectiveMetadata>();\n  private _pipeCache = new Map<Type<any>, cpl.CompilePipeMetadata>();\n  private _ngModuleCache = new Map<Type<any>, cpl.CompileNgModuleMetadata>();\n  private _ngModuleOfTypes = new Map<Type<any>, Type<any>>();\n  private _anonymousTypes = new Map<Object, number>();\n  private _anonymousTypeIndex = 0;\n\n  constructor(\n      private _ngModuleResolver: NgModuleResolver, private _directiveResolver: DirectiveResolver,\n      private _pipeResolver: PipeResolver, private _schemaRegistry: ElementSchemaRegistry,\n      private _reflector: ReflectorReader = reflector) {}\n\n  private sanitizeTokenName(token: any): string {\n    let identifier = stringify(token);\n    if (identifier.indexOf('(') >= 0) {\n      // case: anonymous functions!\n      let found = this._anonymousTypes.get(token);\n      if (!found) {\n        this._anonymousTypes.set(token, this._anonymousTypeIndex++);\n        found = this._anonymousTypes.get(token);\n      }\n      identifier = `anonymous_token_${found}_`;\n    }\n    return sanitizeIdentifier(identifier);\n  }\n\n  clearCacheFor(type: Type<any>) {\n    this._directiveCache.delete(type);\n    this._pipeCache.delete(type);\n    this._ngModuleOfTypes.delete(type);\n    // Clear all of the NgModule as they contain transitive information!\n    this._ngModuleCache.clear();\n  }\n\n  clearCache() {\n    this._directiveCache.clear();\n    this._pipeCache.clear();\n    this._ngModuleCache.clear();\n    this._ngModuleOfTypes.clear();\n  }\n\n  getAnimationEntryMetadata(entry: AnimationEntryMetadata): cpl.CompileAnimationEntryMetadata {\n    const defs = entry.definitions.map(def => this.getAnimationStateMetadata(def));\n    return new cpl.CompileAnimationEntryMetadata(entry.name, defs);\n  }\n\n  getAnimationStateMetadata(value: AnimationStateMetadata): cpl.CompileAnimationStateMetadata {\n    if (value instanceof AnimationStateDeclarationMetadata) {\n      const styles = this.getAnimationStyleMetadata(value.styles);\n      return new cpl.CompileAnimationStateDeclarationMetadata(value.stateNameExpr, styles);\n    }\n\n    if (value instanceof AnimationStateTransitionMetadata) {\n      return new cpl.CompileAnimationStateTransitionMetadata(\n          value.stateChangeExpr, this.getAnimationMetadata(value.steps));\n    }\n\n    return null;\n  }\n\n  getAnimationStyleMetadata(value: AnimationStyleMetadata): cpl.CompileAnimationStyleMetadata {\n    return new cpl.CompileAnimationStyleMetadata(value.offset, value.styles);\n  }\n\n  getAnimationMetadata(value: AnimationMetadata): cpl.CompileAnimationMetadata {\n    if (value instanceof AnimationStyleMetadata) {\n      return this.getAnimationStyleMetadata(value);\n    }\n\n    if (value instanceof AnimationKeyframesSequenceMetadata) {\n      return new cpl.CompileAnimationKeyframesSequenceMetadata(\n          value.steps.map(entry => this.getAnimationStyleMetadata(entry)));\n    }\n\n    if (value instanceof AnimationAnimateMetadata) {\n      const animateData =\n          <cpl.CompileAnimationStyleMetadata|cpl.CompileAnimationKeyframesSequenceMetadata>this\n              .getAnimationMetadata(value.styles);\n      return new cpl.CompileAnimationAnimateMetadata(value.timings, animateData);\n    }\n\n    if (value instanceof AnimationWithStepsMetadata) {\n      const steps = value.steps.map(step => this.getAnimationMetadata(step));\n\n      if (value instanceof AnimationGroupMetadata) {\n        return new cpl.CompileAnimationGroupMetadata(steps);\n      }\n\n      return new cpl.CompileAnimationSequenceMetadata(steps);\n    }\n    return null;\n  }\n\n  getDirectiveMetadata(directiveType: Type<any>, throwIfNotFound = true):\n      cpl.CompileDirectiveMetadata {\n    directiveType = resolveForwardRef(directiveType);\n    let meta = this._directiveCache.get(directiveType);\n    if (!meta) {\n      const dirMeta = this._directiveResolver.resolve(directiveType, throwIfNotFound);\n      if (!dirMeta) {\n        return null;\n      }\n      let templateMeta: cpl.CompileTemplateMetadata = null;\n      let changeDetectionStrategy: ChangeDetectionStrategy = null;\n      let viewProviders: Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> = [];\n      let moduleUrl = staticTypeModuleUrl(directiveType);\n      let entryComponentMetadata: cpl.CompileTypeMetadata[] = [];\n      let selector = dirMeta.selector;\n\n      if (dirMeta instanceof Component) {\n        // Component\n        assertArrayOfStrings('styles', dirMeta.styles);\n        assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n        assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n\n        const animations = dirMeta.animations ?\n            dirMeta.animations.map(e => this.getAnimationEntryMetadata(e)) :\n            null;\n\n        templateMeta = new cpl.CompileTemplateMetadata({\n          encapsulation: dirMeta.encapsulation,\n          template: dirMeta.template,\n          templateUrl: dirMeta.templateUrl,\n          styles: dirMeta.styles,\n          styleUrls: dirMeta.styleUrls,\n          animations: animations,\n          interpolation: dirMeta.interpolation\n        });\n\n        changeDetectionStrategy = dirMeta.changeDetection;\n        if (dirMeta.viewProviders) {\n          viewProviders = this.getProvidersMetadata(\n              dirMeta.viewProviders, entryComponentMetadata,\n              `viewProviders for \"${stringify(directiveType)}\"`);\n        }\n        moduleUrl = componentModuleUrl(this._reflector, directiveType, dirMeta);\n        if (dirMeta.entryComponents) {\n          entryComponentMetadata =\n              flattenArray(dirMeta.entryComponents)\n                  .map((type) => this.getTypeMetadata(type, staticTypeModuleUrl(type)))\n                  .concat(entryComponentMetadata);\n        }\n        if (!selector) {\n          selector = this._schemaRegistry.getDefaultComponentElementName();\n        }\n      } else {\n        // Directive\n        if (!selector) {\n          throw new Error(`Directive ${stringify(directiveType)} has no selector, please add it!`);\n        }\n      }\n\n      let providers: Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> = [];\n      if (isPresent(dirMeta.providers)) {\n        providers = this.getProvidersMetadata(\n            dirMeta.providers, entryComponentMetadata,\n            `providers for \"${stringify(directiveType)}\"`);\n      }\n      let queries: cpl.CompileQueryMetadata[] = [];\n      let viewQueries: cpl.CompileQueryMetadata[] = [];\n      if (isPresent(dirMeta.queries)) {\n        queries = this.getQueriesMetadata(dirMeta.queries, false, directiveType);\n        viewQueries = this.getQueriesMetadata(dirMeta.queries, true, directiveType);\n      }\n\n      meta = cpl.CompileDirectiveMetadata.create({\n        selector: selector,\n        exportAs: dirMeta.exportAs,\n        isComponent: !!templateMeta,\n        type: this.getTypeMetadata(directiveType, moduleUrl),\n        template: templateMeta,\n        changeDetection: changeDetectionStrategy,\n        inputs: dirMeta.inputs,\n        outputs: dirMeta.outputs,\n        host: dirMeta.host,\n        providers: providers,\n        viewProviders: viewProviders,\n        queries: queries,\n        viewQueries: viewQueries,\n        entryComponents: entryComponentMetadata\n      });\n      this._directiveCache.set(directiveType, meta);\n    }\n    return meta;\n  }\n\n  getNgModuleMetadata(moduleType: any, throwIfNotFound = true): cpl.CompileNgModuleMetadata {\n    moduleType = resolveForwardRef(moduleType);\n    let compileMeta = this._ngModuleCache.get(moduleType);\n    if (!compileMeta) {\n      const meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n      if (!meta) {\n        return null;\n      }\n      const declaredDirectives: cpl.CompileDirectiveMetadata[] = [];\n      const exportedDirectives: cpl.CompileDirectiveMetadata[] = [];\n      const declaredPipes: cpl.CompilePipeMetadata[] = [];\n      const exportedPipes: cpl.CompilePipeMetadata[] = [];\n      const importedModules: cpl.CompileNgModuleMetadata[] = [];\n      const exportedModules: cpl.CompileNgModuleMetadata[] = [];\n      const providers: any[] = [];\n      const entryComponents: cpl.CompileTypeMetadata[] = [];\n      const bootstrapComponents: cpl.CompileTypeMetadata[] = [];\n      const schemas: SchemaMetadata[] = [];\n\n      if (meta.imports) {\n        flattenArray(meta.imports).forEach((importedType) => {\n          let importedModuleType: Type<any>;\n          if (isValidType(importedType)) {\n            importedModuleType = importedType;\n          } else if (importedType && importedType.ngModule) {\n            const moduleWithProviders: ModuleWithProviders = importedType;\n            importedModuleType = moduleWithProviders.ngModule;\n            if (moduleWithProviders.providers) {\n              providers.push(...this.getProvidersMetadata(\n                  moduleWithProviders.providers, entryComponents,\n                  `provider for the NgModule '${stringify(importedModuleType)}'`));\n            }\n          }\n\n          if (importedModuleType) {\n            const importedMeta = this.getNgModuleMetadata(importedModuleType, false);\n            if (importedMeta === null) {\n              throw new Error(\n                  `Unexpected ${this._getTypeDescriptor(importedType)} '${stringify(importedType)}' imported by the module '${stringify(moduleType)}'`);\n            }\n            importedModules.push(importedMeta);\n          } else {\n            throw new Error(\n                `Unexpected value '${stringify(importedType)}' imported by the module '${stringify(moduleType)}'`);\n          }\n        });\n      }\n\n      if (meta.exports) {\n        flattenArray(meta.exports).forEach((exportedType) => {\n          if (!isValidType(exportedType)) {\n            throw new Error(\n                `Unexpected value '${stringify(exportedType)}' exported by the module '${stringify(moduleType)}'`);\n          }\n          let exportedDirMeta: cpl.CompileDirectiveMetadata;\n          let exportedPipeMeta: cpl.CompilePipeMetadata;\n          let exportedModuleMeta: cpl.CompileNgModuleMetadata;\n          if (exportedDirMeta = this.getDirectiveMetadata(exportedType, false)) {\n            exportedDirectives.push(exportedDirMeta);\n          } else if (exportedPipeMeta = this.getPipeMetadata(exportedType, false)) {\n            exportedPipes.push(exportedPipeMeta);\n          } else if (exportedModuleMeta = this.getNgModuleMetadata(exportedType, false)) {\n            exportedModules.push(exportedModuleMeta);\n          } else {\n            throw new Error(\n                `Unexpected ${this._getTypeDescriptor(exportedType)} '${stringify(exportedType)}' exported by the module '${stringify(moduleType)}'`);\n          }\n        });\n      }\n\n      // Note: This will be modified later, so we rely on\n      // getting a new instance every time!\n      const transitiveModule =\n          this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n      if (meta.declarations) {\n        flattenArray(meta.declarations).forEach((declaredType) => {\n          if (!isValidType(declaredType)) {\n            throw new Error(\n                `Unexpected value '${stringify(declaredType)}' declared by the module '${stringify(moduleType)}'`);\n          }\n          let declaredDirMeta: cpl.CompileDirectiveMetadata;\n          let declaredPipeMeta: cpl.CompilePipeMetadata;\n          if (declaredDirMeta = this.getDirectiveMetadata(declaredType, false)) {\n            this._addDirectiveToModule(\n                declaredDirMeta, moduleType, transitiveModule, declaredDirectives, true);\n          } else if (declaredPipeMeta = this.getPipeMetadata(declaredType, false)) {\n            this._addPipeToModule(\n                declaredPipeMeta, moduleType, transitiveModule, declaredPipes, true);\n          } else {\n            throw new Error(\n                `Unexpected ${this._getTypeDescriptor(declaredType)} '${stringify(declaredType)}' declared by the module '${stringify(moduleType)}'`);\n          }\n        });\n      }\n\n      // The providers of the module have to go last\n      // so that they overwrite any other provider we already added.\n      if (meta.providers) {\n        providers.push(...this.getProvidersMetadata(\n            meta.providers, entryComponents,\n            `provider for the NgModule '${stringify(moduleType)}'`));\n      }\n\n      if (meta.entryComponents) {\n        entryComponents.push(\n            ...flattenArray(meta.entryComponents)\n                .map(type => this.getTypeMetadata(type, staticTypeModuleUrl(type))));\n      }\n\n      if (meta.bootstrap) {\n        const typeMetadata = flattenArray(meta.bootstrap).map(type => {\n          if (!isValidType(type)) {\n            throw new Error(\n                `Unexpected value '${stringify(type)}' used in the bootstrap property of module '${stringify(moduleType)}'`);\n          }\n          return this.getTypeMetadata(type, staticTypeModuleUrl(type));\n        });\n        bootstrapComponents.push(...typeMetadata);\n      }\n\n      entryComponents.push(...bootstrapComponents);\n\n      if (meta.schemas) {\n        schemas.push(...flattenArray(meta.schemas));\n      }\n\n      transitiveModule.entryComponents.push(...entryComponents);\n      transitiveModule.providers.push(...providers);\n\n      compileMeta = new cpl.CompileNgModuleMetadata({\n        type: this.getTypeMetadata(moduleType, staticTypeModuleUrl(moduleType)),\n        providers,\n        entryComponents,\n        bootstrapComponents,\n        schemas,\n        declaredDirectives,\n        exportedDirectives,\n        declaredPipes,\n        exportedPipes,\n        importedModules,\n        exportedModules,\n        transitiveModule,\n        id: meta.id,\n      });\n\n      transitiveModule.modules.push(compileMeta);\n      this._verifyModule(compileMeta);\n      this._ngModuleCache.set(moduleType, compileMeta);\n    }\n    return compileMeta;\n  }\n\n\n  private _verifyModule(moduleMeta: cpl.CompileNgModuleMetadata) {\n    moduleMeta.exportedDirectives.forEach((dirMeta) => {\n      if (!moduleMeta.transitiveModule.directivesSet.has(dirMeta.type.reference)) {\n        throw new Error(\n            `Can't export directive ${stringify(dirMeta.type.reference)} from ${stringify(moduleMeta.type.reference)} as it was neither declared nor imported!`);\n      }\n    });\n\n    moduleMeta.exportedPipes.forEach((pipeMeta) => {\n      if (!moduleMeta.transitiveModule.pipesSet.has(pipeMeta.type.reference)) {\n        throw new Error(\n            `Can't export pipe ${stringify(pipeMeta.type.reference)} from ${stringify(moduleMeta.type.reference)} as it was neither declared nor imported!`);\n      }\n    });\n  }\n\n  private _getTypeDescriptor(type: Type<any>): string {\n    if (this._directiveResolver.resolve(type, false) !== null) {\n      return 'directive';\n    }\n\n    if (this._pipeResolver.resolve(type, false) !== null) {\n      return 'pipe';\n    }\n\n    if (this._ngModuleResolver.resolve(type, false) !== null) {\n      return 'module';\n    }\n\n    if ((type as any).provide) {\n      return 'provider';\n    }\n\n    return 'value';\n  }\n\n  private _addTypeToModule(type: Type<any>, moduleType: Type<any>) {\n    const oldModule = this._ngModuleOfTypes.get(type);\n    if (oldModule && oldModule !== moduleType) {\n      throw new Error(\n          `Type ${stringify(type)} is part of the declarations of 2 modules: ${stringify(oldModule)} and ${stringify(moduleType)}! ` +\n          `Please consider moving ${stringify(type)} to a higher module that imports ${stringify(oldModule)} and ${stringify(moduleType)}. ` +\n          `You can also create a new NgModule that exports and includes ${stringify(type)} then import that NgModule in ${stringify(oldModule)} and ${stringify(moduleType)}.`);\n    }\n    this._ngModuleOfTypes.set(type, moduleType);\n  }\n\n  private _getTransitiveNgModuleMetadata(\n      importedModules: cpl.CompileNgModuleMetadata[],\n      exportedModules: cpl.CompileNgModuleMetadata[]): cpl.TransitiveCompileNgModuleMetadata {\n    // collect `providers` / `entryComponents` from all imported and all exported modules\n    const transitiveModules = getTransitiveModules(importedModules.concat(exportedModules), true);\n    const providers = flattenArray(transitiveModules.map((ngModule) => ngModule.providers));\n    const entryComponents =\n        flattenArray(transitiveModules.map((ngModule) => ngModule.entryComponents));\n\n    const transitiveExportedModules = getTransitiveModules(importedModules, false);\n    const directives =\n        flattenArray(transitiveExportedModules.map((ngModule) => ngModule.exportedDirectives));\n    const pipes = flattenArray(transitiveExportedModules.map((ngModule) => ngModule.exportedPipes));\n    return new cpl.TransitiveCompileNgModuleMetadata(\n        transitiveModules, providers, entryComponents, directives, pipes);\n  }\n\n  private _addDirectiveToModule(\n      dirMeta: cpl.CompileDirectiveMetadata, moduleType: any,\n      transitiveModule: cpl.TransitiveCompileNgModuleMetadata,\n      declaredDirectives: cpl.CompileDirectiveMetadata[], force: boolean = false): boolean {\n    if (force || !transitiveModule.directivesSet.has(dirMeta.type.reference)) {\n      transitiveModule.directivesSet.add(dirMeta.type.reference);\n      transitiveModule.directives.push(dirMeta);\n      declaredDirectives.push(dirMeta);\n      this._addTypeToModule(dirMeta.type.reference, moduleType);\n      return true;\n    }\n    return false;\n  }\n\n  private _addPipeToModule(\n      pipeMeta: cpl.CompilePipeMetadata, moduleType: any,\n      transitiveModule: cpl.TransitiveCompileNgModuleMetadata,\n      declaredPipes: cpl.CompilePipeMetadata[], force: boolean = false): boolean {\n    if (force || !transitiveModule.pipesSet.has(pipeMeta.type.reference)) {\n      transitiveModule.pipesSet.add(pipeMeta.type.reference);\n      transitiveModule.pipes.push(pipeMeta);\n      declaredPipes.push(pipeMeta);\n      this._addTypeToModule(pipeMeta.type.reference, moduleType);\n      return true;\n    }\n    return false;\n  }\n\n  getTypeMetadata(type: Type<any>, moduleUrl: string, dependencies: any[] = null):\n      cpl.CompileTypeMetadata {\n    type = resolveForwardRef(type);\n    return new cpl.CompileTypeMetadata({\n      name: this.sanitizeTokenName(type),\n      moduleUrl,\n      reference: type,\n      diDeps: this.getDependenciesMetadata(type, dependencies),\n      lifecycleHooks: LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(hook, type)),\n    });\n  }\n\n  getFactoryMetadata(factory: Function, moduleUrl: string, dependencies: any[] = null):\n      cpl.CompileFactoryMetadata {\n    factory = resolveForwardRef(factory);\n    return new cpl.CompileFactoryMetadata({\n      name: this.sanitizeTokenName(factory),\n      moduleUrl,\n      reference: factory,\n      diDeps: this.getDependenciesMetadata(factory, dependencies)\n    });\n  }\n\n  getPipeMetadata(pipeType: Type<any>, throwIfNotFound = true): cpl.CompilePipeMetadata {\n    pipeType = resolveForwardRef(pipeType);\n    let meta = this._pipeCache.get(pipeType);\n    if (!meta) {\n      const pipeMeta = this._pipeResolver.resolve(pipeType, throwIfNotFound);\n      if (!pipeMeta) {\n        return null;\n      }\n\n      meta = new cpl.CompilePipeMetadata({\n        type: this.getTypeMetadata(pipeType, staticTypeModuleUrl(pipeType)),\n        name: pipeMeta.name,\n        pure: pipeMeta.pure\n      });\n      this._pipeCache.set(pipeType, meta);\n    }\n    return meta;\n  }\n\n  getDependenciesMetadata(typeOrFunc: Type<any>|Function, dependencies: any[]):\n      cpl.CompileDiDependencyMetadata[] {\n    let hasUnknownDeps = false;\n    let params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n\n    let dependenciesMetadata: cpl.CompileDiDependencyMetadata[] = params.map((param) => {\n      let isAttribute = false;\n      let isHost = false;\n      let isSelf = false;\n      let isSkipSelf = false;\n      let isOptional = false;\n      let query: Query = null;\n      let viewQuery: Query = null;\n      var token: any = null;\n      if (Array.isArray(param)) {\n        param.forEach((paramEntry) => {\n          if (paramEntry instanceof Host) {\n            isHost = true;\n          } else if (paramEntry instanceof Self) {\n            isSelf = true;\n          } else if (paramEntry instanceof SkipSelf) {\n            isSkipSelf = true;\n          } else if (paramEntry instanceof Optional) {\n            isOptional = true;\n          } else if (paramEntry instanceof Attribute) {\n            isAttribute = true;\n            token = paramEntry.attributeName;\n          } else if (paramEntry instanceof Query) {\n            if (paramEntry.isViewQuery) {\n              viewQuery = paramEntry;\n            } else {\n              query = paramEntry;\n            }\n          } else if (paramEntry instanceof Inject) {\n            token = paramEntry.token;\n          } else if (isValidType(paramEntry) && isBlank(token)) {\n            token = paramEntry;\n          }\n        });\n      } else {\n        token = param;\n      }\n      if (isBlank(token)) {\n        hasUnknownDeps = true;\n        return null;\n      }\n\n      return new cpl.CompileDiDependencyMetadata({\n        isAttribute,\n        isHost,\n        isSelf,\n        isSkipSelf,\n        isOptional,\n        query: query ? this.getQueryMetadata(query, null, typeOrFunc) : null,\n        viewQuery: viewQuery ? this.getQueryMetadata(viewQuery, null, typeOrFunc) : null,\n        token: this.getTokenMetadata(token)\n      });\n\n    });\n\n    if (hasUnknownDeps) {\n      let depsTokens =\n          dependenciesMetadata.map((dep) => dep ? stringify(dep.token) : '?').join(', ');\n      throw new Error(\n          `Can't resolve all parameters for ${stringify(typeOrFunc)}: (${depsTokens}).`);\n    }\n\n    return dependenciesMetadata;\n  }\n\n  getTokenMetadata(token: any): cpl.CompileTokenMetadata {\n    token = resolveForwardRef(token);\n    let compileToken: cpl.CompileTokenMetadata;\n    if (isString(token)) {\n      compileToken = new cpl.CompileTokenMetadata({value: token});\n    } else {\n      compileToken = new cpl.CompileTokenMetadata({\n        identifier: new cpl.CompileIdentifierMetadata({\n          reference: token,\n          name: this.sanitizeTokenName(token),\n          moduleUrl: staticTypeModuleUrl(token)\n        })\n      });\n    }\n    return compileToken;\n  }\n\n  getProvidersMetadata(\n      providers: Provider[], targetEntryComponents: cpl.CompileTypeMetadata[],\n      debugInfo?: string): Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> {\n    const compileProviders: Array<cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[]> = [];\n    providers.forEach((provider: any, providerIdx: number) => {\n      provider = resolveForwardRef(provider);\n      if (provider && typeof provider == 'object' && provider.hasOwnProperty('provide')) {\n        provider = new cpl.ProviderMeta(provider.provide, provider);\n      }\n      let compileProvider: cpl.CompileProviderMetadata|cpl.CompileTypeMetadata|any[];\n      if (Array.isArray(provider)) {\n        compileProvider = this.getProvidersMetadata(provider, targetEntryComponents, debugInfo);\n      } else if (provider instanceof cpl.ProviderMeta) {\n        let tokenMeta = this.getTokenMetadata(provider.token);\n        if (tokenMeta.reference ===\n            resolveIdentifierToken(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS).reference) {\n          targetEntryComponents.push(...this._getEntryComponentsFromProvider(provider));\n        } else {\n          compileProvider = this.getProviderMetadata(provider);\n        }\n      } else if (isValidType(provider)) {\n        compileProvider = this.getTypeMetadata(provider, staticTypeModuleUrl(provider));\n      } else {\n        let providersInfo = (<string[]>providers.reduce(\n                                 (soFar: string[], seenProvider: any, seenProviderIdx: number) => {\n                                   if (seenProviderIdx < providerIdx) {\n                                     soFar.push(`${stringify(seenProvider)}`);\n                                   } else if (seenProviderIdx == providerIdx) {\n                                     soFar.push(`?${stringify(seenProvider)}?`);\n                                   } else if (seenProviderIdx == providerIdx + 1) {\n                                     soFar.push('...');\n                                   }\n                                   return soFar;\n                                 },\n                                 []))\n                                .join(', ');\n\n        throw new Error(\n            `Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`);\n      }\n      if (compileProvider) {\n        compileProviders.push(compileProvider);\n      }\n    });\n    return compileProviders;\n  }\n\n  private _getEntryComponentsFromProvider(provider: cpl.ProviderMeta): cpl.CompileTypeMetadata[] {\n    const components: cpl.CompileTypeMetadata[] = [];\n    const collectedIdentifiers: cpl.CompileIdentifierMetadata[] = [];\n\n    if (provider.useFactory || provider.useExisting || provider.useClass) {\n      throw new Error(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`);\n    }\n\n    if (!provider.multi) {\n      throw new Error(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`);\n    }\n\n    convertToCompileValue(provider.useValue, collectedIdentifiers);\n    collectedIdentifiers.forEach((identifier) => {\n      const dirMeta = this.getDirectiveMetadata(identifier.reference, false);\n      if (dirMeta) {\n        components.push(dirMeta.type);\n      }\n    });\n    return components;\n  }\n\n  getProviderMetadata(provider: cpl.ProviderMeta): cpl.CompileProviderMetadata {\n    let compileDeps: cpl.CompileDiDependencyMetadata[];\n    let compileTypeMetadata: cpl.CompileTypeMetadata = null;\n    let compileFactoryMetadata: cpl.CompileFactoryMetadata = null;\n\n    if (provider.useClass) {\n      compileTypeMetadata = this.getTypeMetadata(\n          provider.useClass, staticTypeModuleUrl(provider.useClass), provider.dependencies);\n      compileDeps = compileTypeMetadata.diDeps;\n    } else if (provider.useFactory) {\n      compileFactoryMetadata = this.getFactoryMetadata(\n          provider.useFactory, staticTypeModuleUrl(provider.useFactory), provider.dependencies);\n      compileDeps = compileFactoryMetadata.diDeps;\n    }\n\n    return new cpl.CompileProviderMetadata({\n      token: this.getTokenMetadata(provider.token),\n      useClass: compileTypeMetadata,\n      useValue: convertToCompileValue(provider.useValue, []),\n      useFactory: compileFactoryMetadata,\n      useExisting: provider.useExisting ? this.getTokenMetadata(provider.useExisting) : null,\n      deps: compileDeps,\n      multi: provider.multi\n    });\n  }\n\n  getQueriesMetadata(\n      queries: {[key: string]: Query}, isViewQuery: boolean,\n      directiveType: Type<any>): cpl.CompileQueryMetadata[] {\n    const res: cpl.CompileQueryMetadata[] = [];\n\n    Object.keys(queries).forEach((propertyName: string) => {\n      const query = queries[propertyName];\n      if (query.isViewQuery === isViewQuery) {\n        res.push(this.getQueryMetadata(query, propertyName, directiveType));\n      }\n    });\n\n    return res;\n  }\n\n  private _queryVarBindings(selector: any): string[] { return selector.split(/\\s*,\\s*/); }\n\n  getQueryMetadata(q: Query, propertyName: string, typeOrFunc: Type<any>|Function):\n      cpl.CompileQueryMetadata {\n    var selectors: cpl.CompileTokenMetadata[];\n    if (typeof q.selector === 'string') {\n      selectors = this._queryVarBindings(q.selector).map(varName => this.getTokenMetadata(varName));\n    } else {\n      if (!q.selector) {\n        throw new Error(\n            `Can't construct a query for the property \"${propertyName}\" of \"${stringify(typeOrFunc)}\" since the query selector wasn't defined.`);\n      }\n      selectors = [this.getTokenMetadata(q.selector)];\n    }\n\n    return new cpl.CompileQueryMetadata({\n      selectors,\n      first: q.first,\n      descendants: q.descendants, propertyName,\n      read: q.read ? this.getTokenMetadata(q.read) : null\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: NgModuleResolver, },\n{type: DirectiveResolver, },\n{type: PipeResolver, },\n{type: ElementSchemaRegistry, },\n{type: ReflectorReader, },\n];\n}\n\nfunction getTransitiveModules(\n    modules: cpl.CompileNgModuleMetadata[], includeImports: boolean,\n    targetModules: cpl.CompileNgModuleMetadata[] = [],\n    visitedModules = new Set<Type<any>>()): cpl.CompileNgModuleMetadata[] {\n  modules.forEach((ngModule) => {\n    if (!visitedModules.has(ngModule.type.reference)) {\n      visitedModules.add(ngModule.type.reference);\n      const nestedModules = includeImports ?\n          ngModule.importedModules.concat(ngModule.exportedModules) :\n          ngModule.exportedModules;\n      getTransitiveModules(nestedModules, includeImports, targetModules, visitedModules);\n      // Add after recursing so imported/exported modules are before the module itself.\n      // This is important for overwriting providers of imported modules!\n      targetModules.push(ngModule);\n    }\n  });\n  return targetModules;\n}\n\n\nfunction flattenArray(tree: any[], out: Array<any> = []): Array<any> {\n  if (tree) {\n    for (let i = 0; i < tree.length; i++) {\n      const item = resolveForwardRef(tree[i]);\n      if (Array.isArray(item)) {\n        flattenArray(item, out);\n      } else {\n        out.push(item);\n      }\n    }\n  }\n  return out;\n}\n\nfunction isValidType(value: any): boolean {\n  return cpl.isStaticSymbol(value) || (value instanceof Type);\n}\n\nfunction staticTypeModuleUrl(value: any): string {\n  return cpl.isStaticSymbol(value) ? value.filePath : null;\n}\n\nfunction componentModuleUrl(\n    reflector: ReflectorReader, type: Type<any>, cmpMetadata: Component): string {\n  if (cpl.isStaticSymbol(type)) {\n    return staticTypeModuleUrl(type);\n  }\n\n  const moduleId = cmpMetadata.moduleId;\n\n  if (typeof moduleId === 'string') {\n    const scheme = getUrlScheme(moduleId);\n    return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n  } else if (moduleId !== null && moduleId !== void 0) {\n    throw new Error(\n        `moduleId should be a string in \"${stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n        `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n  }\n\n  return reflector.importUri(type);\n}\n\nfunction convertToCompileValue(\n    value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n  return visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\n\nclass _CompileValueConverter extends ValueTransformer {\n  visitOther(value: any, targetIdentifiers: cpl.CompileIdentifierMetadata[]): any {\n    let identifier: cpl.CompileIdentifierMetadata;\n    if (cpl.isStaticSymbol(value)) {\n      identifier = new cpl.CompileIdentifierMetadata(\n          {name: value.name, moduleUrl: value.filePath, reference: value});\n    } else {\n      identifier = new cpl.CompileIdentifierMetadata({reference: value});\n    }\n    targetIdentifiers.push(identifier);\n    return identifier;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}