{"version":3,"file":"lifecycle_reflector.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/lifecycle_reflector.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,mBAAmB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAO,MAAM,eAAe;OAE1I,EAAC,UAAU,EAAC,MAAM,qBAAqB;OACvC,EAAC,cAAc,EAAE,SAAS,EAAC,MAAM,uBAAuB;AAE/D,IAAM,oBAAoB,GAAwB,UAAU,CAAC,eAAe,CAAC;IAC3E,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC;IAC/B,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC;IACrC,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC;IACjC,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC;IACrC,CAAC,cAAc,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;IACnD,CAAC,cAAc,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;IACzD,CAAC,cAAc,CAAC,aAAa,EAAE,aAAa,CAAC;IAC7C,CAAC,cAAc,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;CACpD,CAAC,CAAC;AAEH,IAAM,eAAe,GAAqB,UAAU,CAAC,eAAe,CAAC;IACnE,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC;IACnC,CAAC,cAAc,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC;IACrC,CAAC,cAAc,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,CAAC,cAAc,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;IACvD,CAAC,cAAc,CAAC,mBAAmB,EAAE,uBAAuB,CAAC;IAC7D,CAAC,cAAc,CAAC,aAAa,EAAE,iBAAiB,CAAC;IACjD,CAAC,cAAc,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;CACxD,CAAC,CAAC;AAEH,iCAAiC,IAAoB,EAAE,KAAU;IAC/D,IAAI,WAAW,GAAG,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjD,IAAI,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;AAChE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit, Type} from '@angular/core';\n\nimport {MapWrapper} from './facade/collection';\nimport {LifecycleHooks, reflector} from './private_import_core';\n\nconst LIFECYCLE_INTERFACES: Map<any, Type<any>> = MapWrapper.createFromPairs([\n  [LifecycleHooks.OnInit, OnInit],\n  [LifecycleHooks.OnDestroy, OnDestroy],\n  [LifecycleHooks.DoCheck, DoCheck],\n  [LifecycleHooks.OnChanges, OnChanges],\n  [LifecycleHooks.AfterContentInit, AfterContentInit],\n  [LifecycleHooks.AfterContentChecked, AfterContentChecked],\n  [LifecycleHooks.AfterViewInit, AfterViewInit],\n  [LifecycleHooks.AfterViewChecked, AfterViewChecked],\n]);\n\nconst LIFECYCLE_PROPS: Map<any, string> = MapWrapper.createFromPairs([\n  [LifecycleHooks.OnInit, 'ngOnInit'],\n  [LifecycleHooks.OnDestroy, 'ngOnDestroy'],\n  [LifecycleHooks.DoCheck, 'ngDoCheck'],\n  [LifecycleHooks.OnChanges, 'ngOnChanges'],\n  [LifecycleHooks.AfterContentInit, 'ngAfterContentInit'],\n  [LifecycleHooks.AfterContentChecked, 'ngAfterContentChecked'],\n  [LifecycleHooks.AfterViewInit, 'ngAfterViewInit'],\n  [LifecycleHooks.AfterViewChecked, 'ngAfterViewChecked'],\n]);\n\nexport function hasLifecycleHook(hook: LifecycleHooks, token: any): boolean {\n  var lcInterface = LIFECYCLE_INTERFACES.get(hook);\n  var lcProp = LIFECYCLE_PROPS.get(hook);\n  return reflector.hasLifecycleHook(token, lcInterface, lcProp);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}