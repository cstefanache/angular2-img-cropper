{"version":3,"file":"view_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/view_binder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {CompileEventListener, bindDirectiveOutputs, bindRenderOutputs, collectEventListeners} from './event_binder';\nimport {bindDirectiveAfterContentLifecycleCallbacks, bindDirectiveAfterViewLifecycleCallbacks, bindDirectiveDetectChangesLifecycleCallbacks, bindInjectableDestroyLifecycleCallbacks, bindPipeDestroyLifecycleCallbacks} from './lifecycle_binder';\nimport {bindDirectiveHostProps, bindDirectiveInputs, bindRenderInputs, bindRenderText} from './property_binder';\n\nexport function bindView(view: CompileView, parsedTemplate: TemplateAst[]): void {\n  var visitor = new ViewBinderVisitor(view);\n  templateVisitAll(visitor, parsedTemplate);\n  view.pipes.forEach(\n      (pipe) => { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n}\n\nclass ViewBinderVisitor implements TemplateAstVisitor {\n  private _nodeIndex: number = 0;\n\n  constructor(public view: CompileView) {}\n\n  visitBoundText(ast: BoundTextAst, parent: CompileElement): any {\n    var node = this.view.nodes[this._nodeIndex++];\n    bindRenderText(ast, node, this.view);\n    return null;\n  }\n  visitText(ast: TextAst, parent: CompileElement): any {\n    this._nodeIndex++;\n    return null;\n  }\n\n  visitNgContent(ast: NgContentAst, parent: CompileElement): any { return null; }\n\n  visitElement(ast: ElementAst, parent: CompileElement): any {\n    var compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    var eventListeners: CompileEventListener[] = [];\n    collectEventListeners(ast.outputs, ast.directives, compileElement).forEach(entry => {\n      eventListeners.push(entry);\n    });\n    bindRenderInputs(ast.inputs, compileElement);\n    bindRenderOutputs(eventListeners);\n    ast.directives.forEach((directiveAst) => {\n      var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n      bindDirectiveInputs(directiveAst, directiveInstance, compileElement);\n      bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);\n\n      bindDirectiveHostProps(directiveAst, directiveInstance, compileElement);\n      bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n    });\n    templateVisitAll(this, ast.children, compileElement);\n    // afterContent and afterView lifecycles need to be called bottom up\n    // so that children are notified before parents\n    ast.directives.forEach((directiveAst) => {\n      var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n      bindDirectiveAfterContentLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n    });\n    ast.providers.forEach((providerAst) => {\n      var providerInstance = compileElement.instances.get(providerAst.token.reference);\n      bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n    });\n    return null;\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, parent: CompileElement): any {\n    var compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    var eventListeners = collectEventListeners(ast.outputs, ast.directives, compileElement);\n    ast.directives.forEach((directiveAst) => {\n      var directiveInstance = compileElement.instances.get(directiveAst.directive.type.reference);\n      bindDirectiveInputs(directiveAst, directiveInstance, compileElement);\n      bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);\n      bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n      bindDirectiveAfterContentLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n    });\n    ast.providers.forEach((providerAst) => {\n      var providerInstance = compileElement.instances.get(providerAst.token.reference);\n      bindInjectableDestroyLifecycleCallbacks(providerAst, providerInstance, compileElement);\n    });\n    bindView(compileElement.embeddedView, ast.children);\n    return null;\n  }\n\n  visitAttr(ast: AttrAst, ctx: any): any { return null; }\n  visitDirective(ast: DirectiveAst, ctx: any): any { return null; }\n  visitEvent(ast: BoundEventAst, eventTargetAndNames: Map<string, BoundEventAst>): any {\n    return null;\n  }\n\n  visitReference(ast: ReferenceAst, ctx: any): any { return null; }\n  visitVariable(ast: VariableAst, ctx: any): any { return null; }\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any { return null; }\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any { return null; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}