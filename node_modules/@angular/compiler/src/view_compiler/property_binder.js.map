{"version":3,"file":"property_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/property_binder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SecurityContext} from '@angular/core';\n\nimport * as cdAst from '../expression_parser/ast';\nimport {isPresent} from '../facade/lang';\nimport {Identifiers, resolveIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {EMPTY_STATE as EMPTY_ANIMATION_STATE, LifecycleHooks, isDefaultChangeDetectionStrategy} from '../private_import_core';\nimport {BoundElementPropertyAst, BoundTextAst, DirectiveAst, PropertyBindingType} from '../template_parser/template_ast';\nimport {camelCaseToDashCase} from '../util';\n\nimport {CompileBinding} from './compile_binding';\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompileView} from './compile_view';\nimport {DetectChangesVars, ViewProperties} from './constants';\nimport {convertCdExpressionToIr, temporaryDeclaration} from './expression_converter';\n\nfunction createBindFieldExpr(exprIndex: number): o.ReadPropExpr {\n  return o.THIS_EXPR.prop(`_expr_${exprIndex}`);\n}\n\nfunction createCurrValueExpr(exprIndex: number): o.ReadVarExpr {\n  return o.variable(`currVal_${exprIndex}`);  // fix syntax highlighting: `\n}\n\nfunction bind(\n    view: CompileView, currValExpr: o.ReadVarExpr, fieldExpr: o.ReadPropExpr,\n    parsedExpression: cdAst.AST, context: o.Expression, actions: o.Statement[],\n    method: CompileMethod, bindingIndex: number) {\n  var checkExpression = convertCdExpressionToIr(\n      view, context, parsedExpression, DetectChangesVars.valUnwrapper, bindingIndex);\n  if (!checkExpression.expression) {\n    // e.g. an empty expression was given\n    return;\n  }\n\n  if (checkExpression.temporaryCount) {\n    for (let i = 0; i < checkExpression.temporaryCount; i++) {\n      method.addStmt(temporaryDeclaration(bindingIndex, i));\n    }\n  }\n\n  // private is fine here as no child view will reference the cached value...\n  view.fields.push(new o.ClassField(fieldExpr.name, null, [o.StmtModifier.Private]));\n  view.createMethod.addStmt(o.THIS_EXPR.prop(fieldExpr.name)\n                                .set(o.importExpr(resolveIdentifier(Identifiers.UNINITIALIZED)))\n                                .toStmt());\n\n  if (checkExpression.needsValueUnwrapper) {\n    var initValueUnwrapperStmt = DetectChangesVars.valUnwrapper.callMethod('reset', []).toStmt();\n    method.addStmt(initValueUnwrapperStmt);\n  }\n  method.addStmt(\n      currValExpr.set(checkExpression.expression).toDeclStmt(null, [o.StmtModifier.Final]));\n\n  var condition: o.Expression = o.importExpr(resolveIdentifier(Identifiers.checkBinding)).callFn([\n    DetectChangesVars.throwOnChange, fieldExpr, currValExpr\n  ]);\n  if (checkExpression.needsValueUnwrapper) {\n    condition = DetectChangesVars.valUnwrapper.prop('hasWrappedValue').or(condition);\n  }\n  method.addStmt(new o.IfStmt(\n      condition,\n      actions.concat([<o.Statement>o.THIS_EXPR.prop(fieldExpr.name).set(currValExpr).toStmt()])));\n}\n\nexport function bindRenderText(\n    boundText: BoundTextAst, compileNode: CompileNode, view: CompileView) {\n  var bindingIndex = view.bindings.length;\n  view.bindings.push(new CompileBinding(compileNode, boundText));\n  var currValExpr = createCurrValueExpr(bindingIndex);\n  var valueField = createBindFieldExpr(bindingIndex);\n  view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileNode.nodeIndex, boundText);\n\n  bind(\n      view, currValExpr, valueField, boundText.value, view.componentContext,\n      [o.THIS_EXPR.prop('renderer')\n           .callMethod('setText', [compileNode.renderNode, currValExpr])\n           .toStmt()],\n      view.detectChangesRenderPropertiesMethod, bindingIndex);\n}\n\nfunction bindAndWriteToRenderer(\n    boundProps: BoundElementPropertyAst[], context: o.Expression, compileElement: CompileElement,\n    isHostProp: boolean) {\n  var view = compileElement.view;\n  var renderNode = compileElement.renderNode;\n  boundProps.forEach((boundProp) => {\n    var bindingIndex = view.bindings.length;\n    view.bindings.push(new CompileBinding(compileElement, boundProp));\n    view.detectChangesRenderPropertiesMethod.resetDebugInfo(compileElement.nodeIndex, boundProp);\n    var fieldExpr = createBindFieldExpr(bindingIndex);\n    var currValExpr = createCurrValueExpr(bindingIndex);\n    var oldRenderValue: o.Expression = sanitizedValue(boundProp, fieldExpr);\n    var renderValue: o.Expression = sanitizedValue(boundProp, currValExpr);\n    var updateStmts: o.Statement[] = [];\n    var compileMethod = view.detectChangesRenderPropertiesMethod;\n    switch (boundProp.type) {\n      case PropertyBindingType.Property:\n        if (view.genConfig.logBindingUpdate) {\n          updateStmts.push(logBindingUpdateStmt(renderNode, boundProp.name, renderValue));\n        }\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod(\n                    'setElementProperty', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Attribute:\n        renderValue =\n            renderValue.isBlank().conditional(o.NULL_EXPR, renderValue.callMethod('toString', []));\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod(\n                    'setElementAttribute', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Class:\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod('setElementClass', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Style:\n        var strValue: o.Expression = renderValue.callMethod('toString', []);\n        if (isPresent(boundProp.unit)) {\n          strValue = strValue.plus(o.literal(boundProp.unit));\n        }\n\n        renderValue = renderValue.isBlank().conditional(o.NULL_EXPR, strValue);\n        updateStmts.push(\n            o.THIS_EXPR.prop('renderer')\n                .callMethod('setElementStyle', [renderNode, o.literal(boundProp.name), renderValue])\n                .toStmt());\n        break;\n      case PropertyBindingType.Animation:\n        var animationName = boundProp.name;\n        var targetViewExpr: o.Expression = o.THIS_EXPR;\n        if (isHostProp) {\n          targetViewExpr = compileElement.appElement.prop('componentView');\n        }\n\n        compileMethod = view.animationBindingsMethod;\n\n        var animationFnExpr =\n            targetViewExpr.prop('componentType').prop('animations').key(o.literal(animationName));\n\n        // it's important to normalize the void value as `void` explicitly\n        // so that the styles data can be obtained from the stringmap\n        var emptyStateValue = o.literal(EMPTY_ANIMATION_STATE);\n\n        // void => ...\n        var oldRenderVar = o.variable('oldRenderVar');\n        updateStmts.push(oldRenderVar.set(oldRenderValue).toDeclStmt());\n        updateStmts.push(new o.IfStmt(\n            oldRenderVar.equals(o.importExpr(resolveIdentifier(Identifiers.UNINITIALIZED))),\n            [oldRenderVar.set(emptyStateValue).toStmt()]));\n\n        // ... => void\n        var newRenderVar = o.variable('newRenderVar');\n        updateStmts.push(newRenderVar.set(renderValue).toDeclStmt());\n        updateStmts.push(new o.IfStmt(\n            newRenderVar.equals(o.importExpr(resolveIdentifier(Identifiers.UNINITIALIZED))),\n            [newRenderVar.set(emptyStateValue).toStmt()]));\n\n        updateStmts.push(\n            animationFnExpr.callFn([o.THIS_EXPR, renderNode, oldRenderVar, newRenderVar]).toStmt());\n\n        view.detachMethod.addStmt(\n            animationFnExpr.callFn([o.THIS_EXPR, renderNode, oldRenderValue, emptyStateValue])\n                .toStmt());\n\n        break;\n    }\n\n    bind(\n        view, currValExpr, fieldExpr, boundProp.value, context, updateStmts, compileMethod,\n        view.bindings.length);\n  });\n}\n\nfunction sanitizedValue(\n    boundProp: BoundElementPropertyAst, renderValue: o.Expression): o.Expression {\n  let enumValue: string;\n  switch (boundProp.securityContext) {\n    case SecurityContext.NONE:\n      return renderValue;  // No sanitization needed.\n    case SecurityContext.HTML:\n      enumValue = 'HTML';\n      break;\n    case SecurityContext.STYLE:\n      enumValue = 'STYLE';\n      break;\n    case SecurityContext.SCRIPT:\n      enumValue = 'SCRIPT';\n      break;\n    case SecurityContext.URL:\n      enumValue = 'URL';\n      break;\n    case SecurityContext.RESOURCE_URL:\n      enumValue = 'RESOURCE_URL';\n      break;\n    default:\n      throw new Error(`internal error, unexpected SecurityContext ${boundProp.securityContext}.`);\n  }\n  let ctx = ViewProperties.viewUtils.prop('sanitizer');\n  let args =\n      [o.importExpr(resolveIdentifier(Identifiers.SecurityContext)).prop(enumValue), renderValue];\n  return ctx.callMethod('sanitize', args);\n}\n\nexport function bindRenderInputs(\n    boundProps: BoundElementPropertyAst[], compileElement: CompileElement): void {\n  bindAndWriteToRenderer(boundProps, compileElement.view.componentContext, compileElement, false);\n}\n\nexport function bindDirectiveHostProps(\n    directiveAst: DirectiveAst, directiveInstance: o.Expression,\n    compileElement: CompileElement): void {\n  bindAndWriteToRenderer(directiveAst.hostProperties, directiveInstance, compileElement, true);\n}\n\nexport function bindDirectiveInputs(\n    directiveAst: DirectiveAst, directiveInstance: o.Expression, compileElement: CompileElement) {\n  if (directiveAst.inputs.length === 0) {\n    return;\n  }\n  var view = compileElement.view;\n  var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n  detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n\n  var lifecycleHooks = directiveAst.directive.type.lifecycleHooks;\n  var calcChangesMap = lifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1;\n  var isOnPushComp = directiveAst.directive.isComponent &&\n      !isDefaultChangeDetectionStrategy(directiveAst.directive.changeDetection);\n  if (calcChangesMap) {\n    detectChangesInInputsMethod.addStmt(DetectChangesVars.changes.set(o.NULL_EXPR).toStmt());\n  }\n  if (isOnPushComp) {\n    detectChangesInInputsMethod.addStmt(DetectChangesVars.changed.set(o.literal(false)).toStmt());\n  }\n  directiveAst.inputs.forEach((input) => {\n    var bindingIndex = view.bindings.length;\n    view.bindings.push(new CompileBinding(compileElement, input));\n    detectChangesInInputsMethod.resetDebugInfo(compileElement.nodeIndex, input);\n    var fieldExpr = createBindFieldExpr(bindingIndex);\n    var currValExpr = createCurrValueExpr(bindingIndex);\n    var statements: o.Statement[] =\n        [directiveInstance.prop(input.directiveName).set(currValExpr).toStmt()];\n    if (calcChangesMap) {\n      statements.push(new o.IfStmt(\n          DetectChangesVars.changes.identical(o.NULL_EXPR),\n          [DetectChangesVars.changes\n               .set(o.literalMap(\n                   [], new o.MapType(o.importType(resolveIdentifier(Identifiers.SimpleChange)))))\n               .toStmt()]));\n      statements.push(DetectChangesVars.changes.key(o.literal(input.directiveName))\n                          .set(o.importExpr(resolveIdentifier(Identifiers.SimpleChange))\n                                   .instantiate([fieldExpr, currValExpr]))\n                          .toStmt());\n    }\n    if (isOnPushComp) {\n      statements.push(DetectChangesVars.changed.set(o.literal(true)).toStmt());\n    }\n    if (view.genConfig.logBindingUpdate) {\n      statements.push(\n          logBindingUpdateStmt(compileElement.renderNode, input.directiveName, currValExpr));\n    }\n    bind(\n        view, currValExpr, fieldExpr, input.value, view.componentContext, statements,\n        detectChangesInInputsMethod, bindingIndex);\n  });\n  if (isOnPushComp) {\n    detectChangesInInputsMethod.addStmt(new o.IfStmt(DetectChangesVars.changed, [\n      compileElement.appElement.prop('componentView').callMethod('markAsCheckOnce', []).toStmt()\n    ]));\n  }\n}\n\nfunction logBindingUpdateStmt(\n    renderNode: o.Expression, propName: string, value: o.Expression): o.Statement {\n  const tryStmt =\n      o.THIS_EXPR.prop('renderer')\n          .callMethod(\n              'setBindingDebugInfo',\n              [\n                renderNode, o.literal(`ng-reflect-${camelCaseToDashCase(propName)}`),\n                value.isBlank().conditional(o.NULL_EXPR, value.callMethod('toString', []))\n              ])\n          .toStmt();\n\n  const catchStmt = o.THIS_EXPR.prop('renderer')\n                        .callMethod(\n                            'setBindingDebugInfo',\n                            [\n                              renderNode, o.literal(`ng-reflect-${camelCaseToDashCase(propName)}`),\n                              o.literal('[ERROR] Exception while trying to serialize the value')\n                            ])\n                        .toStmt();\n\n  return new o.TryCatchStmt([tryStmt], [catchStmt]);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}