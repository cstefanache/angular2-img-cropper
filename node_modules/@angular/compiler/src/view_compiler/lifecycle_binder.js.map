{"version":3,"file":"lifecycle_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/lifecycle_binder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompilePipeMetadata} from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport {LifecycleHooks} from '../private_import_core';\nimport {DirectiveAst, ProviderAst} from '../template_parser/template_ast';\n\nimport {CompileElement} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {DetectChangesVars} from './constants';\n\n\n\nvar STATE_IS_NEVER_CHECKED = o.THIS_EXPR.prop('numberOfChecks').identical(new o.LiteralExpr(0));\nvar NOT_THROW_ON_CHANGES = o.not(DetectChangesVars.throwOnChange);\n\nexport function bindDirectiveDetectChangesLifecycleCallbacks(\n    directiveAst: DirectiveAst, directiveInstance: o.Expression, compileElement: CompileElement) {\n  var view = compileElement.view;\n  var detectChangesInInputsMethod = view.detectChangesInInputsMethod;\n  var lifecycleHooks = directiveAst.directive.type.lifecycleHooks;\n  if (lifecycleHooks.indexOf(LifecycleHooks.OnChanges) !== -1 && directiveAst.inputs.length > 0) {\n    detectChangesInInputsMethod.addStmt(new o.IfStmt(\n        DetectChangesVars.changes.notIdentical(o.NULL_EXPR),\n        [directiveInstance.callMethod('ngOnChanges', [DetectChangesVars.changes]).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.OnInit) !== -1) {\n    detectChangesInInputsMethod.addStmt(new o.IfStmt(\n        STATE_IS_NEVER_CHECKED.and(NOT_THROW_ON_CHANGES),\n        [directiveInstance.callMethod('ngOnInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.DoCheck) !== -1) {\n    detectChangesInInputsMethod.addStmt(new o.IfStmt(\n        NOT_THROW_ON_CHANGES, [directiveInstance.callMethod('ngDoCheck', []).toStmt()]));\n  }\n}\n\nexport function bindDirectiveAfterContentLifecycleCallbacks(\n    directiveMeta: CompileDirectiveMetadata, directiveInstance: o.Expression,\n    compileElement: CompileElement) {\n  var view = compileElement.view;\n  var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n  var afterContentLifecycleCallbacksMethod = view.afterContentLifecycleCallbacksMethod;\n  afterContentLifecycleCallbacksMethod.resetDebugInfo(\n      compileElement.nodeIndex, compileElement.sourceAst);\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentInit) !== -1) {\n    afterContentLifecycleCallbacksMethod.addStmt(new o.IfStmt(\n        STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterContentInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterContentChecked) !== -1) {\n    afterContentLifecycleCallbacksMethod.addStmt(\n        directiveInstance.callMethod('ngAfterContentChecked', []).toStmt());\n  }\n}\n\nexport function bindDirectiveAfterViewLifecycleCallbacks(\n    directiveMeta: CompileDirectiveMetadata, directiveInstance: o.Expression,\n    compileElement: CompileElement) {\n  var view = compileElement.view;\n  var lifecycleHooks = directiveMeta.type.lifecycleHooks;\n  var afterViewLifecycleCallbacksMethod = view.afterViewLifecycleCallbacksMethod;\n  afterViewLifecycleCallbacksMethod.resetDebugInfo(\n      compileElement.nodeIndex, compileElement.sourceAst);\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewInit) !== -1) {\n    afterViewLifecycleCallbacksMethod.addStmt(new o.IfStmt(\n        STATE_IS_NEVER_CHECKED, [directiveInstance.callMethod('ngAfterViewInit', []).toStmt()]));\n  }\n  if (lifecycleHooks.indexOf(LifecycleHooks.AfterViewChecked) !== -1) {\n    afterViewLifecycleCallbacksMethod.addStmt(\n        directiveInstance.callMethod('ngAfterViewChecked', []).toStmt());\n  }\n}\n\nexport function bindInjectableDestroyLifecycleCallbacks(\n    provider: ProviderAst, providerInstance: o.Expression, compileElement: CompileElement) {\n  var onDestroyMethod = compileElement.view.destroyMethod;\n  onDestroyMethod.resetDebugInfo(compileElement.nodeIndex, compileElement.sourceAst);\n  if (provider.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n    onDestroyMethod.addStmt(providerInstance.callMethod('ngOnDestroy', []).toStmt());\n  }\n}\n\nexport function bindPipeDestroyLifecycleCallbacks(\n    pipeMeta: CompilePipeMetadata, pipeInstance: o.Expression, view: CompileView) {\n  var onDestroyMethod = view.destroyMethod;\n  if (pipeMeta.type.lifecycleHooks.indexOf(LifecycleHooks.OnDestroy) !== -1) {\n    onDestroyMethod.addStmt(pipeInstance.callMethod('ngOnDestroy', []).toStmt());\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}