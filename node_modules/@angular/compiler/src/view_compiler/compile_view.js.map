{"version":3,"file":"compile_view.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/compile_view.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEntryCompileResult} from '../animation/animation_compiler';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompilePipeMetadata} from '../compile_metadata';\nimport {CompilerConfig} from '../config';\nimport {ListWrapper, MapWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\nimport {Identifiers, resolveIdentifier} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {ViewType} from '../private_import_core';\n\nimport {CompileBinding} from './compile_binding';\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {CompilePipe} from './compile_pipe';\nimport {CompileQuery, addQueryToTokenMap, createQueryList} from './compile_query';\nimport {EventHandlerVars} from './constants';\nimport {NameResolver} from './expression_converter';\nimport {createPureProxy, getPropertyInView, getViewFactoryName} from './util';\n\nexport class CompileView implements NameResolver {\n  public viewType: ViewType;\n  public viewQueries: Map<any, CompileQuery[]>;\n\n  public nodes: CompileNode[] = [];\n  // root nodes or AppElements for ViewContainers\n  public rootNodesOrAppElements: o.Expression[] = [];\n\n  public bindings: CompileBinding[] = [];\n\n  public classStatements: o.Statement[] = [];\n  public createMethod: CompileMethod;\n  public animationBindingsMethod: CompileMethod;\n  public injectorGetMethod: CompileMethod;\n  public updateContentQueriesMethod: CompileMethod;\n  public dirtyParentQueriesMethod: CompileMethod;\n  public updateViewQueriesMethod: CompileMethod;\n  public detectChangesInInputsMethod: CompileMethod;\n  public detectChangesRenderPropertiesMethod: CompileMethod;\n  public afterContentLifecycleCallbacksMethod: CompileMethod;\n  public afterViewLifecycleCallbacksMethod: CompileMethod;\n  public destroyMethod: CompileMethod;\n  public detachMethod: CompileMethod;\n  public eventHandlerMethods: o.ClassMethod[] = [];\n\n  public fields: o.ClassField[] = [];\n  public getters: o.ClassGetter[] = [];\n  public disposables: o.Expression[] = [];\n  public subscriptions: o.Expression[] = [];\n\n  public componentView: CompileView;\n  public purePipes = new Map<string, CompilePipe>();\n  public pipes: CompilePipe[] = [];\n  public locals = new Map<string, o.Expression>();\n  public className: string;\n  public classType: o.Type;\n  public viewFactory: o.ReadVarExpr;\n\n  public literalArrayCount = 0;\n  public literalMapCount = 0;\n  public pipeCount = 0;\n\n  public componentContext: o.Expression;\n\n  constructor(\n      public component: CompileDirectiveMetadata, public genConfig: CompilerConfig,\n      public pipeMetas: CompilePipeMetadata[], public styles: o.Expression,\n      public animations: AnimationEntryCompileResult[], public viewIndex: number,\n      public declarationElement: CompileElement, public templateVariableBindings: string[][]) {\n    this.createMethod = new CompileMethod(this);\n    this.animationBindingsMethod = new CompileMethod(this);\n    this.injectorGetMethod = new CompileMethod(this);\n    this.updateContentQueriesMethod = new CompileMethod(this);\n    this.dirtyParentQueriesMethod = new CompileMethod(this);\n    this.updateViewQueriesMethod = new CompileMethod(this);\n    this.detectChangesInInputsMethod = new CompileMethod(this);\n    this.detectChangesRenderPropertiesMethod = new CompileMethod(this);\n\n    this.afterContentLifecycleCallbacksMethod = new CompileMethod(this);\n    this.afterViewLifecycleCallbacksMethod = new CompileMethod(this);\n    this.destroyMethod = new CompileMethod(this);\n    this.detachMethod = new CompileMethod(this);\n\n    this.viewType = getViewType(component, viewIndex);\n    this.className = `_View_${component.type.name}${viewIndex}`;\n    this.classType = o.importType(new CompileIdentifierMetadata({name: this.className}));\n    this.viewFactory = o.variable(getViewFactoryName(component, viewIndex));\n    if (this.viewType === ViewType.COMPONENT || this.viewType === ViewType.HOST) {\n      this.componentView = this;\n    } else {\n      this.componentView = this.declarationElement.view.componentView;\n    }\n    this.componentContext =\n        getPropertyInView(o.THIS_EXPR.prop('context'), this, this.componentView);\n\n    var viewQueries = new Map<any, CompileQuery[]>();\n    if (this.viewType === ViewType.COMPONENT) {\n      var directiveInstance = o.THIS_EXPR.prop('context');\n      ListWrapper.forEachWithIndex(this.component.viewQueries, (queryMeta, queryIndex) => {\n        var propName = `_viewQuery_${queryMeta.selectors[0].name}_${queryIndex}`;\n        var queryList = createQueryList(queryMeta, directiveInstance, propName, this);\n        var query = new CompileQuery(queryMeta, queryList, directiveInstance, this);\n        addQueryToTokenMap(viewQueries, query);\n      });\n      var constructorViewQueryCount = 0;\n      this.component.type.diDeps.forEach((dep) => {\n        if (isPresent(dep.viewQuery)) {\n          var queryList = o.THIS_EXPR.prop('declarationAppElement')\n                              .prop('componentConstructorViewQueries')\n                              .key(o.literal(constructorViewQueryCount++));\n          var query = new CompileQuery(dep.viewQuery, queryList, null, this);\n          addQueryToTokenMap(viewQueries, query);\n        }\n      });\n    }\n    this.viewQueries = viewQueries;\n    templateVariableBindings.forEach(\n        (entry) => { this.locals.set(entry[1], o.THIS_EXPR.prop('context').prop(entry[0])); });\n\n    if (!this.declarationElement.isNull()) {\n      this.declarationElement.setEmbeddedView(this);\n    }\n  }\n\n  callPipe(name: string, input: o.Expression, args: o.Expression[]): o.Expression {\n    return CompilePipe.call(this, name, [input].concat(args));\n  }\n\n  getLocal(name: string): o.Expression {\n    if (name == EventHandlerVars.event.name) {\n      return EventHandlerVars.event;\n    }\n    var currView: CompileView = this;\n    var result = currView.locals.get(name);\n    while (!result && isPresent(currView.declarationElement.view)) {\n      currView = currView.declarationElement.view;\n      result = currView.locals.get(name);\n    }\n    if (isPresent(result)) {\n      return getPropertyInView(result, this, currView);\n    } else {\n      return null;\n    }\n  }\n\n  createLiteralArray(values: o.Expression[]): o.Expression {\n    if (values.length === 0) {\n      return o.importExpr(resolveIdentifier(Identifiers.EMPTY_ARRAY));\n    }\n    var proxyExpr = o.THIS_EXPR.prop(`_arr_${this.literalArrayCount++}`);\n    var proxyParams: o.FnParam[] = [];\n    var proxyReturnEntries: o.Expression[] = [];\n    for (var i = 0; i < values.length; i++) {\n      var paramName = `p${i}`;\n      proxyParams.push(new o.FnParam(paramName));\n      proxyReturnEntries.push(o.variable(paramName));\n    }\n    createPureProxy(\n        o.fn(\n            proxyParams, [new o.ReturnStatement(o.literalArr(proxyReturnEntries))],\n            new o.ArrayType(o.DYNAMIC_TYPE)),\n        values.length, proxyExpr, this);\n    return proxyExpr.callFn(values);\n  }\n\n  createLiteralMap(entries: [string, o.Expression][]): o.Expression {\n    if (entries.length === 0) {\n      return o.importExpr(resolveIdentifier(Identifiers.EMPTY_MAP));\n    }\n    const proxyExpr = o.THIS_EXPR.prop(`_map_${this.literalMapCount++}`);\n    const proxyParams: o.FnParam[] = [];\n    const proxyReturnEntries: [string, o.Expression][] = [];\n    const values: o.Expression[] = [];\n    for (var i = 0; i < entries.length; i++) {\n      const paramName = `p${i}`;\n      proxyParams.push(new o.FnParam(paramName));\n      proxyReturnEntries.push([entries[i][0], o.variable(paramName)]);\n      values.push(<o.Expression>entries[i][1]);\n    }\n    createPureProxy(\n        o.fn(\n            proxyParams, [new o.ReturnStatement(o.literalMap(proxyReturnEntries))],\n            new o.MapType(o.DYNAMIC_TYPE)),\n        entries.length, proxyExpr, this);\n    return proxyExpr.callFn(values);\n  }\n\n  afterNodes() {\n    MapWrapper.values(this.viewQueries)\n        .forEach(\n            (queries) => queries.forEach(\n                (query) => query.afterChildren(this.createMethod, this.updateViewQueriesMethod)));\n  }\n}\n\nfunction getViewType(component: CompileDirectiveMetadata, embeddedTemplateIndex: number): ViewType {\n  if (embeddedTemplateIndex > 0) {\n    return ViewType.EMBEDDED;\n  } else if (component.type.isHost) {\n    return ViewType.HOST;\n  } else {\n    return ViewType.COMPONENT;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}