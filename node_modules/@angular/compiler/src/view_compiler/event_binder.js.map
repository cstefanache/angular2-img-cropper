{"version":3,"file":"event_binder.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_compiler/event_binder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata} from '../compile_metadata';\nimport {isPresent} from '../facade/lang';\nimport {identifierToken} from '../identifiers';\nimport * as o from '../output/output_ast';\nimport {BoundEventAst, DirectiveAst} from '../template_parser/template_ast';\n\nimport {CompileBinding} from './compile_binding';\nimport {CompileElement} from './compile_element';\nimport {CompileMethod} from './compile_method';\nimport {EventHandlerVars, ViewProperties} from './constants';\nimport {convertCdStatementToIr} from './expression_converter';\n\nexport class CompileEventListener {\n  private _method: CompileMethod;\n  private _hasComponentHostListener: boolean = false;\n  private _methodName: string;\n  private _eventParam: o.FnParam;\n  private _actionResultExprs: o.Expression[] = [];\n\n  static getOrCreate(\n      compileElement: CompileElement, eventTarget: string, eventName: string, eventPhase: string,\n      targetEventListeners: CompileEventListener[]): CompileEventListener {\n    var listener = targetEventListeners.find(\n        listener => listener.eventTarget == eventTarget && listener.eventName == eventName &&\n            listener.eventPhase == eventPhase);\n    if (!listener) {\n      listener = new CompileEventListener(\n          compileElement, eventTarget, eventName, eventPhase, targetEventListeners.length);\n      targetEventListeners.push(listener);\n    }\n    return listener;\n  }\n\n  get methodName() { return this._methodName; }\n\n  constructor(\n      public compileElement: CompileElement, public eventTarget: string, public eventName: string,\n      public eventPhase: string, listenerIndex: number) {\n    this._method = new CompileMethod(compileElement.view);\n    this._methodName =\n        `_handle_${sanitizeEventName(eventName)}_${compileElement.nodeIndex}_${listenerIndex}`;\n    this._eventParam = new o.FnParam(\n        EventHandlerVars.event.name,\n        o.importType(this.compileElement.view.genConfig.renderTypes.renderEvent));\n  }\n\n  addAction(\n      hostEvent: BoundEventAst, directive: CompileDirectiveMetadata,\n      directiveInstance: o.Expression) {\n    if (isPresent(directive) && directive.isComponent) {\n      this._hasComponentHostListener = true;\n    }\n    this._method.resetDebugInfo(this.compileElement.nodeIndex, hostEvent);\n    var context = directiveInstance || this.compileElement.view.componentContext;\n    var actionStmts = convertCdStatementToIr(\n        this.compileElement.view, context, hostEvent.handler, this.compileElement.nodeIndex);\n    var lastIndex = actionStmts.length - 1;\n    if (lastIndex >= 0) {\n      var lastStatement = actionStmts[lastIndex];\n      var returnExpr = convertStmtIntoExpression(lastStatement);\n      var preventDefaultVar = o.variable(`pd_${this._actionResultExprs.length}`);\n      this._actionResultExprs.push(preventDefaultVar);\n      if (isPresent(returnExpr)) {\n        // Note: We need to cast the result of the method call to dynamic,\n        // as it might be a void method!\n        actionStmts[lastIndex] =\n            preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n                .toDeclStmt(null, [o.StmtModifier.Final]);\n      }\n    }\n    this._method.addStmts(actionStmts);\n  }\n\n  finishMethod() {\n    var markPathToRootStart = this._hasComponentHostListener ?\n        this.compileElement.appElement.prop('componentView') :\n        o.THIS_EXPR;\n    var resultExpr: o.Expression = o.literal(true);\n    this._actionResultExprs.forEach((expr) => { resultExpr = resultExpr.and(expr); });\n    var stmts =\n        (<o.Statement[]>[markPathToRootStart.callMethod('markPathToRootAsCheckOnce', []).toStmt()])\n            .concat(this._method.finish())\n            .concat([new o.ReturnStatement(resultExpr)]);\n    // private is fine here as no child view will reference the event handler...\n    this.compileElement.view.eventHandlerMethods.push(new o.ClassMethod(\n        this._methodName, [this._eventParam], stmts, o.BOOL_TYPE, [o.StmtModifier.Private]));\n  }\n\n  listenToRenderer() {\n    var listenExpr: o.Expression;\n    var eventListener = o.THIS_EXPR.callMethod(\n        'eventHandler',\n        [o.THIS_EXPR.prop(this._methodName).callMethod(o.BuiltinMethod.Bind, [o.THIS_EXPR])]);\n    if (isPresent(this.eventTarget)) {\n      listenExpr = ViewProperties.renderer.callMethod(\n          'listenGlobal', [o.literal(this.eventTarget), o.literal(this.eventName), eventListener]);\n    } else {\n      listenExpr = ViewProperties.renderer.callMethod(\n          'listen', [this.compileElement.renderNode, o.literal(this.eventName), eventListener]);\n    }\n    var disposable = o.variable(`disposable_${this.compileElement.view.disposables.length}`);\n    this.compileElement.view.disposables.push(disposable);\n    // private is fine here as no child view will reference the event handler...\n    this.compileElement.view.createMethod.addStmt(\n        disposable.set(listenExpr).toDeclStmt(o.FUNCTION_TYPE, [o.StmtModifier.Private]));\n  }\n\n  listenToAnimation() {\n    var outputListener = o.THIS_EXPR.callMethod(\n        'eventHandler',\n        [o.THIS_EXPR.prop(this._methodName).callMethod(o.BuiltinMethod.Bind, [o.THIS_EXPR])]);\n\n    // tie the property callback method to the view animations map\n    var stmt = o.THIS_EXPR\n                   .callMethod(\n                       'registerAnimationOutput',\n                       [\n                         this.compileElement.renderNode, o.literal(this.eventName),\n                         o.literal(this.eventPhase), outputListener\n                       ])\n                   .toStmt();\n    this.compileElement.view.createMethod.addStmt(stmt);\n  }\n\n  listenToDirective(directiveInstance: o.Expression, observablePropName: string) {\n    var subscription = o.variable(`subscription_${this.compileElement.view.subscriptions.length}`);\n    this.compileElement.view.subscriptions.push(subscription);\n    var eventListener = o.THIS_EXPR.callMethod(\n        'eventHandler',\n        [o.THIS_EXPR.prop(this._methodName).callMethod(o.BuiltinMethod.Bind, [o.THIS_EXPR])]);\n    this.compileElement.view.createMethod.addStmt(\n        subscription\n            .set(directiveInstance.prop(observablePropName)\n                     .callMethod(o.BuiltinMethod.SubscribeObservable, [eventListener]))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n  }\n}\n\nexport function collectEventListeners(\n    hostEvents: BoundEventAst[], dirs: DirectiveAst[],\n    compileElement: CompileElement): CompileEventListener[] {\n  const eventListeners: CompileEventListener[] = [];\n\n  hostEvents.forEach((hostEvent) => {\n    compileElement.view.bindings.push(new CompileBinding(compileElement, hostEvent));\n    var listener = CompileEventListener.getOrCreate(\n        compileElement, hostEvent.target, hostEvent.name, hostEvent.phase, eventListeners);\n    listener.addAction(hostEvent, null, null);\n  });\n\n  dirs.forEach((directiveAst) => {\n    var directiveInstance =\n        compileElement.instances.get(identifierToken(directiveAst.directive.type).reference);\n    directiveAst.hostEvents.forEach((hostEvent) => {\n      compileElement.view.bindings.push(new CompileBinding(compileElement, hostEvent));\n      var listener = CompileEventListener.getOrCreate(\n          compileElement, hostEvent.target, hostEvent.name, hostEvent.phase, eventListeners);\n      listener.addAction(hostEvent, directiveAst.directive, directiveInstance);\n    });\n  });\n\n  eventListeners.forEach((listener) => listener.finishMethod());\n  return eventListeners;\n}\n\nexport function bindDirectiveOutputs(\n    directiveAst: DirectiveAst, directiveInstance: o.Expression,\n    eventListeners: CompileEventListener[]) {\n  Object.keys(directiveAst.directive.outputs).forEach(observablePropName => {\n    const eventName = directiveAst.directive.outputs[observablePropName];\n\n    eventListeners.filter(listener => listener.eventName == eventName).forEach((listener) => {\n      listener.listenToDirective(directiveInstance, observablePropName);\n    });\n  });\n}\n\nexport function bindRenderOutputs(eventListeners: CompileEventListener[]) {\n  eventListeners.forEach(listener => {\n    if (listener.eventPhase) {\n      listener.listenToAnimation();\n    } else {\n      listener.listenToRenderer();\n    }\n  });\n}\n\nfunction convertStmtIntoExpression(stmt: o.Statement): o.Expression {\n  if (stmt instanceof o.ExpressionStatement) {\n    return stmt.expr;\n  } else if (stmt instanceof o.ReturnStatement) {\n    return stmt.value;\n  }\n  return null;\n}\n\nfunction sanitizeEventName(name: string): string {\n  return name.replace(/[^a-zA-Z_]/g, '_');\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}