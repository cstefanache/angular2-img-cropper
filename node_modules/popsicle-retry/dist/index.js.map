{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import extend = require('xtend')\nimport Promise = require('any-promise')\nimport { Request, Response, PopsicleError } from 'popsicle'\n\n/**\n * Retry middleware.\n */\nfunction popsicleRetry (retries = popsicleRetry.retries()) {\n  let iter = 0\n\n  return function retry (request: Request, next: () => Promise<Response>) {\n    // Attempt a retry.\n    function attempt (error: PopsicleError, response: Response, result: any) {\n      const delay = retries(error, response, ++iter)\n\n      if (delay <= 0) {\n        return result\n      }\n\n      return new Promise(resolve => {\n        setTimeout(\n          () => {\n            const options = extend(request.toOptions(), {\n              use: request.middleware.slice(request.middleware.indexOf(retry))\n            })\n\n            return resolve(new Request(options))\n          },\n          delay\n        )\n      })\n    }\n\n    return next()\n      .then(\n        function (response: Response) {\n          return attempt(null, response, Promise.resolve(response))\n        },\n        function (error: PopsicleError) {\n          return attempt(error, null, Promise.reject(error))\n        }\n      )\n  }\n}\n\nnamespace popsicleRetry {\n  /**\n   * Check if the request should be attempted again.\n   */\n  export function retryAllowed (error: PopsicleError, response: Response) {\n    if (error) {\n      if (error.code === 'EUNAVAILABLE') {\n        if ((process as any).browser) {\n          return navigator.onLine !== false\n        }\n\n        const code: string = (error.cause as any).code\n\n        return (\n          code === 'ECONNREFUSED' ||\n          code === 'ECONNRESET' ||\n          code === 'ETIMEDOUT' ||\n          code === 'EPIPE'\n        )\n      }\n\n      return false\n    }\n\n    if (response) {\n      return response.statusType() === 5\n    }\n\n    return false\n  }\n\n  /**\n   * Init a default retry function.\n   */\n  export function retries (count = 5, isRetryAllowed = retryAllowed) {\n    // Source: https://github.com/sindresorhus/got/blob/814bcacd1433d8f62dbb81260526b9ff56b26934/index.js#L261-L268\n    return function (error: PopsicleError, response: Response, iter: number) {\n      if (iter > count || !isRetryAllowed(error, response)) {\n        return -1\n      }\n\n      const noise = Math.random() * 100\n      return (1 << iter) * 1000 + noise\n    }\n  }\n}\n\nexport = popsicleRetry\n"]}