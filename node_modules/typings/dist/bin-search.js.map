{"version":3,"file":"bin-search.js","sourceRoot":"","sources":["../src/bin-search.ts"],"names":[],"mappings":";AACA,IAAO,SAAS,WAAW,WAAW,CAAC,CAAA;AACvC,6BAAuB,cAEvB,CAAC,CAFoC;AAErC;IACE,MAAM,CAAC,uhBAUR,CAAA;AACD,CAAC;AAZe,YAAI,OAYnB,CAAA;AAYD,cAAsB,IAAc,EAAE,OAAgB;IACpD,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACb,uBAAI,EAAE,uBAAM,EAAE,uBAAM,EAAE,qBAAK,EAAE,qBAAK,EAAE,mBAAI,CAAY;IAE5D,MAAM,CAAC,qBAAM,CAAC,EAAE,UAAI,EAAE,cAAM,EAAE,YAAK,EAAE,cAAM,EAAE,YAAK,EAAE,YAAK,EAAE,UAAI,EAAE,CAAC;SAC/D,IAAI,CAAC,UAAU,EAAkB;YAAhB,oBAAO,EAAE,gBAAK;QAC9B,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAA;YAC1C,MAAM,CAAA;QACR,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,aAAW,OAAO,CAAC,MAAM,YAAO,KAAO,CAAC,CAAA;QACpD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QACf,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAA;IACjC,CAAC,CAAC,CAAA;AACN,CAAC;AAfe,YAAI,OAenB,CAAA","sourcesContent":["import Promise = require('any-promise')\nimport columnify = require('columnify')\nimport { search } from 'typings-core'\n\nexport function help () {\n  return `\ntypings search [query]\n\nOptions:\n  [--name] <name>     Search for definitions by exact name (E.g. only \"react\")\n  [--source] <source> The registry mirror (E.g. \"npm\", \"bower\", \"env\", \"global\", \"dt\", ...)\n  [--offset] <x>      Skip first \"x\" results (default: 0)\n  [--limit] <x>       Limit to \"x\" results (default: 20, max: 100)\n  [--order] <order>   Direction to sort results (default: \"asc\", enum: \"asc\" or \"desc\")\n  [--sort] <column>   Order results by a column (E.g. \"versions\", \"name\", ...)\n`\n}\n\nexport interface Options {\n  name: string\n  source: string\n  offset: string\n  limit: string\n  order: string\n  sort: string\n  verbose: boolean\n}\n\nexport function exec (args: string[], options: Options): Promise<void> {\n  const query = args[0]\n  const { name, source, offset, limit, order, sort } = options\n\n  return search({ name, source, query, offset, limit, order, sort })\n    .then(function ({ results, total }) {\n      if (total === 0) {\n        console.log('No results found for search')\n        return\n      }\n\n      console.log(`Viewing ${results.length} of ${total}`)\n      console.log('')\n      console.log(columnify(results))\n    })\n}\n"]}