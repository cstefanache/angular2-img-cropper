"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var TabTransclude = (function () {
    function TabTransclude(viewRef) {
        this.viewRef = viewRef;
    }
    Object.defineProperty(TabTransclude.prototype, "tabTransclude", {
        get: function () {
            return this._tabTransclude;
        },
        set: function (templateRef) {
            this._tabTransclude = templateRef;
            if (templateRef) {
                this.viewRef.createEmbeddedView(templateRef);
            }
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(), 
        __metadata('design:type', core_1.TemplateRef), 
        __metadata('design:paramtypes', [core_1.TemplateRef])
    ], TabTransclude.prototype, "tabTransclude", null);
    TabTransclude = __decorate([
        core_1.Directive({
            selector: "[tabTransclude]"
        }), 
        __metadata('design:paramtypes', [core_1.ViewContainerRef])
    ], TabTransclude);
    return TabTransclude;
}());
exports.TabTransclude = TabTransclude;

//# sourceMappingURL=TabTransclude.js.map
