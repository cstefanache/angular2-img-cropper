"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var Tab_1 = require("./Tab");
var Tabset = (function () {
    function Tabset() {
        this.onSelect = new core_1.EventEmitter(false);
    }
    Tabset.prototype.changeActiveTab = function (tab) {
        var tabs = this.tabs.toArray();
        tabs.forEach(function (tab) { return tab.active = false; });
        tab.active = true;
        this.onSelect.emit(tabs.indexOf(tab));
    };
    Tabset.prototype.ngAfterContentInit = function () {
        var _this = this;
        setTimeout(function () {
            var readTabs = _this.tabs.toArray();
            var activeTab = readTabs.find(function (tab) { return tab.active === true; });
            if (!activeTab && readTabs.length > 0)
                readTabs[0].active = true;
        });
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], Tabset.prototype, "pills", void 0);
    __decorate([
        core_1.ContentChildren(Tab_1.Tab), 
        __metadata('design:type', core_1.QueryList)
    ], Tabset.prototype, "tabs", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], Tabset.prototype, "onSelect", void 0);
    Tabset = __decorate([
        core_1.Component({
            selector: "tabset",
            template: "\n<div class=\"tabset\">\n    <ul class=\"nav\" [ngClass]=\"{ 'nav-tabs': !pills, 'nav-pills': pills }\">\n      <li role=\"presentation\" *ngFor=\"let tab of tabs\" [class.active]=\"tab.active\">\n        <a (click)=\"changeActiveTab(tab)\" class=\"btn\" [class.disabled]=\"tab.disabled\">\n            <span [tabTransclude]=\"tab.headingTemplate\">{{tab.title}}</span>\n        </a>\n        \n      </li>\n    </ul>\n    <div class=\"tabset-content\">\n        <ng-content></ng-content>    \n    </div>\n</div>\n"
        }), 
        __metadata('design:paramtypes', [])
    ], Tabset);
    return Tabset;
}());
exports.Tabset = Tabset;

//# sourceMappingURL=Tabset.js.map
