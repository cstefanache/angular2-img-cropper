{"version":3,"sources":["Tabset.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAmG,eAAe,CAAC,CAAA;AACnH,oBAAkB,OAAO,CAAC,CAAA;AAqB1B;IAAA;QASI,aAAQ,GAAG,IAAI,mBAAY,CAAC,KAAK,CAAC,CAAC;IAkBvC,CAAC;IAhBG,gCAAe,GAAf,UAAgB,GAAQ;QACpB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,MAAM,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;QACxC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,mCAAkB,GAAlB;QAAA,iBAOC;QANG,UAAU,CAAC;YACP,IAAM,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACrC,IAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,MAAM,KAAK,IAAI,EAAnB,CAAmB,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAvBD;QAAC,YAAK,EAAE;;yCAAA;IAGR;QAAC,sBAAe,CAAC,SAAG,CAAC;;wCAAA;IAGrB;QAAC,aAAM,EAAE;;4CAAA;IA1Bb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,qgBAcb;SACA,CAAC;;cAAA;IA4BF,aAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,cAAM,SA2BlB,CAAA","file":"Tabset.js","sourcesContent":["import {ContentChildren, Component, QueryList, Input, AfterContentInit, EventEmitter, Output} from \"@angular/core\";\nimport {Tab} from \"./Tab\";\nimport {TabTransclude} from \"./TabTransclude\";\n\n@Component({\n    selector: \"tabset\",\n    template: `\n<div class=\"tabset\">\n    <ul class=\"nav\" [ngClass]=\"{ 'nav-tabs': !pills, 'nav-pills': pills }\">\n      <li role=\"presentation\" *ngFor=\"let tab of tabs\" [class.active]=\"tab.active\">\n        <a (click)=\"changeActiveTab(tab)\" class=\"btn\" [class.disabled]=\"tab.disabled\">\n            <span [tabTransclude]=\"tab.headingTemplate\">{{tab.title}}</span>\n        </a>\n        \n      </li>\n    </ul>\n    <div class=\"tabset-content\">\n        <ng-content></ng-content>    \n    </div>\n</div>\n`\n})\nexport class Tabset implements AfterContentInit {\n\n    @Input()\n    pills: boolean;\n\n    @ContentChildren(Tab)\n    tabs: QueryList<Tab>;\n\n    @Output()\n    onSelect = new EventEmitter(false);\n\n    changeActiveTab(tab: Tab) {\n        const tabs = this.tabs.toArray();\n        tabs.forEach(tab => tab.active = false);\n        tab.active = true;\n        this.onSelect.emit(tabs.indexOf(tab));\n    }\n\n    ngAfterContentInit() {\n        setTimeout(() => { // timeout is a monkey patch that fixes issue when tab are used with ngRepeat\n            const readTabs = this.tabs.toArray();\n            const activeTab = readTabs.find(tab => tab.active === true);\n            if (!activeTab && readTabs.length > 0)\n                readTabs[0].active = true;\n        });\n    }\n\n}\n"],"sourceRoot":""}